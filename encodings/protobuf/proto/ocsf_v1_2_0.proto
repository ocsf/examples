// -*-protobuf-*-
//
// this is a protobuf representation of the
// OSF schema 'io.ocsf' at version 1.2.0

syntax = "proto3";
package com.github.ocsf.ocsf_schema;

option go_package = "github.com/ocsf/examples/sdk/go/pb";

import "google/protobuf/timestamp.proto";

// FileActivity is an OSF event in category "System Activity"
// called File System Activity
// defined in io.ocsf events/system/filesystem.json
//
// File System Activity events report when a process performs an action on a
// file or folder.
message FileActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId        = 0; 
        CREATE_ActivityId         = 1;  // A request to create a new file on a file
                                        // system.
        READ_ActivityId           = 2;  // A request to read data from a file on a file
                                        // system.
        UPDATE_ActivityId         = 3;  // A request to write data to a file on a file
                                        // system.
        DELETE_ActivityId         = 4;  // A request to delete a file on a file system.
        RENAME_ActivityId         = 5;  // A request to rename a file on a file system.
        SET_ATTRIBUTES_ActivityId = 6;  // A request to set attributes for a file on a
                                        // file system.
        SET_SECURITY_ActivityId   = 7;  // A request to set security for a file on a file
                                        // system.
        GET_ATTRIBUTES_ActivityId = 8;  // A request to get attributes for a file on a
                                        // file system.
        GET_SECURITY_ActivityId   = 9;  // A request to get security for a file on a file
                                        // system.
        ENCRYPT_ActivityId        = 10; // A request to encrypt a file on a file system.
        DECRYPT_ActivityId        = 11; // A request to decrypt a file on a file system.
        MOUNT_ActivityId          = 12; // A request to mount a file on a file system.
        UNMOUNT_ActivityId        = 13; // A request to unmount a file from a file system.
        OPEN_ActivityId           = 14; // A request to create a file handle.
        OTHER_ActivityId          = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid              = 0;   
        FILE_SYSTEM_ACTIVITY_ClassUid = 1001;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    int32 access_mask = 1;
    string action = 2;
    ActionId action_id = 3;
    ActivityId activity_id = 4;
    string activity_name = 5;
    Actor actor = 6;
    Api api = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    string component = 15;
    string connection_uid = 16;
    int32 count = 17;
    string create_mask = 18;
    Device device = 19;
    string disposition = 20;
    DispositionId disposition_id = 21;
    int32 duration = 22;
    int64 end_time = 23;
    google.protobuf.Timestamp end_time_dt = 24;
    repeated Enrichment enrichments = 25;
    File file = 26;
    string file_diff = 27;
    File file_result = 28;
    FirewallRule firewall_rule = 29;
    repeated Malware malware = 30;
    string message = 31;
    Metadata metadata = 32;
    repeated Observable observables = 33;
    string raw_data = 34;
    string severity = 35;
    SeverityId severity_id = 36;
    int64 start_time = 37;
    google.protobuf.Timestamp start_time_dt = 38;
    string status = 39;
    string status_code = 40;
    string status_detail = 41;
    StatusId status_id = 42;
    int64 time = 43;
    google.protobuf.Timestamp time_dt = 44;
    int32 timezone_offset = 45;
    string type_name = 46;
    int64 type_uid = 47;
    GenericObject unmapped = 48;
}

// RegistryKeyActivity is an OSF event in category "System Activity"
// called Registry Key Activity
// defined in win events/registry_key.json
//
// Registry Key Activity events report when a process performs an action on a
// Windows registry key.
message RegistryKeyActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId      = 0; 
        CREATE_ActivityId       = 1; 
        READ_ActivityId         = 2; 
        MODIFY_ActivityId       = 3; 
        DELETE_ActivityId       = 4; 
        RENAME_ActivityId       = 5; 
        SET_SECURITY_ActivityId = 6; 
        RESTORE_ActivityId      = 7; 
        IMPORT_ActivityId       = 8; 
        EXPORT_ActivityId       = 9; 
        OTHER_ActivityId        = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;     
        REGISTRY_KEY_ACTIVITY_ClassUid = 201001;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    int32 access_mask = 1;
    string action = 2;
    ActionId action_id = 3;
    ActivityId activity_id = 4;
    string activity_name = 5;
    Actor actor = 6;
    Api api = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    int32 count = 15;
    string create_mask = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    int32 duration = 20;
    int64 end_time = 21;
    google.protobuf.Timestamp end_time_dt = 22;
    repeated Enrichment enrichments = 23;
    FirewallRule firewall_rule = 24;
    repeated Malware malware = 25;
    string message = 26;
    Metadata metadata = 27;
    repeated Observable observables = 28;
    int32 open_mask = 29;
    string raw_data = 30;
    string severity = 31;
    SeverityId severity_id = 32;
    int64 start_time = 33;
    google.protobuf.Timestamp start_time_dt = 34;
    string status = 35;
    string status_code = 36;
    string status_detail = 37;
    StatusId status_id = 38;
    int64 time = 39;
    google.protobuf.Timestamp time_dt = 40;
    int32 timezone_offset = 41;
    string type_name = 42;
    int64 type_uid = 43;
    GenericObject unmapped = 44;
    RegKey prev_reg_key = 2001;
    RegKey reg_key = 2002;
}

// KernelExtension is an OSF event in category "System Activity"
// called Kernel Extension Activity
// defined in io.ocsf events/system/kernel_extension.json
//
// Kernel Extension events report when a driver/extension is loaded or
// unloaded into the kernel
message KernelExtension {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOAD_ActivityId    = 1;  // A driver/extension was loaded into the kernel
        UNLOAD_ActivityId  = 2;  // A driver/extension was unloaded (removed) from the
                                 // kernel
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                   = 0;   
        KERNEL_EXTENSION_ACTIVITY_ClassUid = 1002;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    KernelDriver driver = 18;
    int32 duration = 19;
    int64 end_time = 20;
    google.protobuf.Timestamp end_time_dt = 21;
    repeated Enrichment enrichments = 22;
    FirewallRule firewall_rule = 23;
    repeated Malware malware = 24;
    string message = 25;
    Metadata metadata = 26;
    repeated Observable observables = 27;
    string raw_data = 28;
    string severity = 29;
    SeverityId severity_id = 30;
    int64 start_time = 31;
    google.protobuf.Timestamp start_time_dt = 32;
    string status = 33;
    string status_code = 34;
    string status_detail = 35;
    StatusId status_id = 36;
    int64 time = 37;
    google.protobuf.Timestamp time_dt = 38;
    int32 timezone_offset = 39;
    string type_name = 40;
    int64 type_uid = 41;
    GenericObject unmapped = 42;
}

// RegistryValueActivity is an OSF event in category "System Activity"
// called Registry Value Activity
// defined in win events/registry_value.json
//
// Registry Value Activity events reports when a process performs an action on
// a Windows registry value.
message RegistryValueActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        GET_ActivityId     = 1; 
        SET_ActivityId     = 2; 
        MODIFY_ActivityId  = 3; 
        DELETE_ActivityId  = 4; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                 = 0;     
        REGISTRY_VALUE_ACTIVITY_ClassUid = 201002;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    FirewallRule firewall_rule = 22;
    repeated Malware malware = 23;
    string message = 24;
    Metadata metadata = 25;
    repeated Observable observables = 26;
    string raw_data = 27;
    string severity = 28;
    SeverityId severity_id = 29;
    int64 start_time = 30;
    google.protobuf.Timestamp start_time_dt = 31;
    string status = 32;
    string status_code = 33;
    string status_detail = 34;
    StatusId status_id = 35;
    int64 time = 36;
    google.protobuf.Timestamp time_dt = 37;
    int32 timezone_offset = 38;
    string type_name = 39;
    int64 type_uid = 40;
    GenericObject unmapped = 41;
    RegValue prev_reg_value = 2001;
    RegValue reg_value = 2002;
}

// ResourceActivity is an OSF event in category "System Activity"
// called Windows Resource Activity
// defined in win events/resource.json
//
// Windows Resource Activity events report when a process accesses a Windows
// managed resource object, successful or otherwise.
message ResourceActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        ACCESS_ActivityId  = 1; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                   = 0;     
        WINDOWS_RESOURCE_ACTIVITY_ClassUid = 201003;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    FirewallRule firewall_rule = 22;
    repeated Malware malware = 23;
    string message = 24;
    Metadata metadata = 25;
    repeated Observable observables = 26;
    string raw_data = 27;
    string severity = 28;
    SeverityId severity_id = 29;
    int64 start_time = 30;
    google.protobuf.Timestamp start_time_dt = 31;
    string status = 32;
    string status_code = 33;
    string status_detail = 34;
    StatusId status_id = 35;
    int64 time = 36;
    google.protobuf.Timestamp time_dt = 37;
    int32 timezone_offset = 38;
    string type_name = 39;
    int64 type_uid = 40;
    GenericObject unmapped = 41;
    WinResource win_resource = 2001;
}

// KernelActivity is an OSF event in category "System Activity"
// called Kernel Activity
// defined in io.ocsf events/system/kernel.json
//
// Kernel Activity events report when an process creates, reads, or deletes a
// kernel resource.
message KernelActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1; 
        READ_ActivityId    = 2; 
        DELETE_ActivityId  = 3; 
        INVOKE_ActivityId  = 4; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid         = 0;   
        KERNEL_ACTIVITY_ClassUid = 1003;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    FirewallRule firewall_rule = 22;
    Kernel kernel = 23;
    repeated Malware malware = 24;
    string message = 25;
    Metadata metadata = 26;
    repeated Observable observables = 27;
    string raw_data = 28;
    string severity = 29;
    SeverityId severity_id = 30;
    int64 start_time = 31;
    google.protobuf.Timestamp start_time_dt = 32;
    string status = 33;
    string status_code = 34;
    string status_detail = 35;
    StatusId status_id = 36;
    int64 time = 37;
    google.protobuf.Timestamp time_dt = 38;
    int32 timezone_offset = 39;
    string type_name = 40;
    int64 type_uid = 41;
    GenericObject unmapped = 42;
}

// MemoryActivity is an OSF event in category "System Activity"
// called Memory Activity
// defined in io.ocsf events/system/memory.json
//
// Memory Activity events report when a process has memory allocated,
// read/modified, or other manipulation activities - such as a buffer overflow
// or turning off data execution protection (DEP).
message MemoryActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId         = 0; 
        ALLOCATE_PAGE_ActivityId   = 1; 
        MODIFY_PAGE_ActivityId     = 2; 
        DELETE_PAGE_ActivityId     = 3; 
        BUFFER_OVERFLOW_ActivityId = 4; 
        DISABLE_DEP_ActivityId     = 5;  // Data Execution Permission
        ENABLE_DEP_ActivityId      = 6;  // Data Execution Permission
        READ_ActivityId            = 7;  // Read (Example: <code>ReadProcessMemory</code>)
        WRITE_ActivityId           = 8;  // Write (Example:
                                         // <code>WriteProcessMemory</code>)
        OTHER_ActivityId           = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid         = 0;   
        MEMORY_ACTIVITY_ClassUid = 1004;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    int32 actual_permissions = 6;
    Api api = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string base_address = 10;
    string category_name = 11;
    CategoryUid category_uid = 12;
    string class_name = 13;
    ClassUid class_uid = 14;
    Cloud cloud = 15;
    int32 count = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    int32 duration = 20;
    int64 end_time = 21;
    google.protobuf.Timestamp end_time_dt = 22;
    repeated Enrichment enrichments = 23;
    FirewallRule firewall_rule = 24;
    repeated Malware malware = 25;
    string message = 26;
    Metadata metadata = 27;
    repeated Observable observables = 28;
    Process process = 29;
    string raw_data = 30;
    int32 requested_permissions = 31;
    string severity = 32;
    SeverityId severity_id = 33;
    int64 size = 34;
    int64 start_time = 35;
    google.protobuf.Timestamp start_time_dt = 36;
    string status = 37;
    string status_code = 38;
    string status_detail = 39;
    StatusId status_id = 40;
    int64 time = 41;
    google.protobuf.Timestamp time_dt = 42;
    int32 timezone_offset = 43;
    string type_name = 44;
    int64 type_uid = 45;
    GenericObject unmapped = 46;
}

// ModuleActivity is an OSF event in category "System Activity"
// called Module Activity
// defined in io.ocsf events/system/module.json
//
// Module  Activity events report when a process loads or unloads the
// <code>module</code>.
message ModuleActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOAD_ActivityId    = 1; 
        UNLOAD_ActivityId  = 2; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid         = 0;   
        MODULE_ACTIVITY_ClassUid = 1005;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    FirewallRule firewall_rule = 22;
    repeated Malware malware = 23;
    string message = 24;
    Metadata metadata = 25;
    Module module = 26;
    repeated Observable observables = 27;
    string raw_data = 28;
    string severity = 29;
    SeverityId severity_id = 30;
    int64 start_time = 31;
    google.protobuf.Timestamp start_time_dt = 32;
    string status = 33;
    string status_code = 34;
    string status_detail = 35;
    StatusId status_id = 36;
    int64 time = 37;
    google.protobuf.Timestamp time_dt = 38;
    int32 timezone_offset = 39;
    string type_name = 40;
    int64 type_uid = 41;
    GenericObject unmapped = 42;
}

// ScheduledJobActivity is an OSF event in category "System Activity"
// called Scheduled Job Activity
// defined in io.ocsf events/system/scheduled_job.json
//
// Scheduled Job Activity events report activities related to scheduled jobs
// or tasks.
message ScheduledJobActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1; 
        UPDATE_ActivityId  = 2; 
        DELETE_ActivityId  = 3; 
        ENABLE_ActivityId  = 4; 
        DISABLE_ActivityId = 5; 
        START_ActivityId   = 6; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                = 0;   
        SCHEDULED_JOB_ACTIVITY_ClassUid = 1006;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    FirewallRule firewall_rule = 22;
    Job job = 23;
    repeated Malware malware = 24;
    string message = 25;
    Metadata metadata = 26;
    repeated Observable observables = 27;
    string raw_data = 28;
    string severity = 29;
    SeverityId severity_id = 30;
    int64 start_time = 31;
    google.protobuf.Timestamp start_time_dt = 32;
    string status = 33;
    string status_code = 34;
    string status_detail = 35;
    StatusId status_id = 36;
    int64 time = 37;
    google.protobuf.Timestamp time_dt = 38;
    int32 timezone_offset = 39;
    string type_name = 40;
    int64 type_uid = 41;
    GenericObject unmapped = 42;
}

// ProcessActivity is an OSF event in category "System Activity"
// called Process Activity
// defined in io.ocsf events/system/process.json
//
// Process Activity events report when a process launches, injects, opens or
// terminates another process, successful or otherwise.
message ProcessActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId     = 0; 
        LAUNCH_ActivityId      = 1; 
        TERMINATE_ActivityId   = 2; 
        OPEN_ActivityId        = 3; 
        INJECT_ActivityId      = 4; 
        SET_USER_ID_ActivityId = 5; 
        OTHER_ActivityId       = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid         = 0;
        SYSTEM_ACTIVITY_CategoryUid = 1;
    }
    enum ClassUid {
        UNKNOWN_ClassUid          = 0;   
        PROCESS_ACTIVITY_ClassUid = 1007;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum InjectionTypeId {
        UNKNOWN_InjectionTypeId       = 0;  // The injection type is unknown.
        REMOTE_THREAD_InjectionTypeId = 1; 
        LOAD_LIBRARY_InjectionTypeId  = 2; 
        OTHER_InjectionTypeId         = 99; // The injection type is not mapped. See the
                                            // <code>injection_type</code> attribute,
                                            // which contains a data source specific
                                            // value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    int32 actual_permissions = 6;
    Api api = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    int32 count = 15;
    Device device = 16;
    string disposition = 17;
    DispositionId disposition_id = 18;
    int32 duration = 19;
    int64 end_time = 20;
    google.protobuf.Timestamp end_time_dt = 21;
    repeated Enrichment enrichments = 22;
    int32 exit_code = 23;
    FirewallRule firewall_rule = 24;
    string injection_type = 25;
    InjectionTypeId injection_type_id = 26;
    repeated Malware malware = 27;
    string message = 28;
    Metadata metadata = 29;
    Module module = 30;
    repeated Observable observables = 31;
    Process process = 32;
    string raw_data = 33;
    int32 requested_permissions = 34;
    string severity = 35;
    SeverityId severity_id = 36;
    int64 start_time = 37;
    google.protobuf.Timestamp start_time_dt = 38;
    string status = 39;
    string status_code = 40;
    string status_detail = 41;
    StatusId status_id = 42;
    int64 time = 43;
    google.protobuf.Timestamp time_dt = 44;
    int32 timezone_offset = 45;
    string type_name = 46;
    int64 type_uid = 47;
    GenericObject unmapped = 48;
}

// SecurityFinding is an OSF event in category "Findings"
// called Security Finding
// defined in io.ocsf events/findings/security_finding.json
//
// Security Finding events describe findings, detections, anomalies, alerts
// and/or actions performed by security products
message SecurityFinding {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // A security finding was created.
        UPDATE_ActivityId  = 2;  // A security finding was updated.
        CLOSE_ActivityId   = 3;  // A security finding was closed.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid  = 0;
        FINDINGS_CategoryUid = 2;
    }
    enum ClassUid {
        UNKNOWN_ClassUid          = 0;   
        SECURITY_FINDING_ClassUid = 2001;
    }
    enum ConfidenceId {
        UNKNOWN_ConfidenceId = 0;  // The normalized confidence is unknown.
        LOW_ConfidenceId     = 1; 
        MEDIUM_ConfidenceId  = 2; 
        HIGH_ConfidenceId    = 3; 
        OTHER_ConfidenceId   = 99; // The confidence is not mapped to the defined enum
                                   // values. See the <code>confidence</code> attribute,
                                   // which contains a data source specific value.
    }
    enum ImpactId {
        UNKNOWN_ImpactId  = 0;  // The normalized impact is unknown.
        LOW_ImpactId      = 1; 
        MEDIUM_ImpactId   = 2; 
        HIGH_ImpactId     = 3; 
        CRITICAL_ImpactId = 4; 
        OTHER_ImpactId    = 99; // The impact is not mapped. See the <code>impact</code>
                                // attribute, which contains a data source specific value.
    }
    enum RiskLevelId {
        INFO_RiskLevelId     = 0;
        LOW_RiskLevelId      = 1;
        MEDIUM_RiskLevelId   = 2;
        HIGH_RiskLevelId     = 3;
        CRITICAL_RiskLevelId = 4;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StateId {
        UNKNOWN_StateId     = 0;  // The state is unknown.
        NEW_StateId         = 1;  // The finding is new and yet to be reviewed.
        IN_PROGRESS_StateId = 2;  // The finding is under review.
        SUPPRESSED_StateId  = 3;  // The finding was reviewed, considered as a false
                                  // positive and is now suppressed.
        RESOLVED_StateId    = 4;  // The finding was reviewed and remediated and is now
                                  // considered resolved.
        OTHER_StateId       = 99; // The state is not mapped. See the <code>state</code>
                                  // attribute, which contains a data source specific
                                  // value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Analytic analytic = 3;
    Api api = 4;
    repeated Attack attacks = 5;
    string category_name = 6;
    CategoryUid category_uid = 7;
    repeated CisCsc cis_csc = 8;
    string class_name = 9;
    ClassUid class_uid = 10;
    Cloud cloud = 11;
    Compliance compliance = 12;
    string confidence = 13;
    ConfidenceId confidence_id = 14;
    int32 confidence_score = 15;
    int32 count = 16;
    repeated string data_sources = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    bytes evidence = 22;
    Finding finding = 23;
    string impact = 24;
    ImpactId impact_id = 25;
    int32 impact_score = 26;
    repeated KillChainPhase kill_chain = 27;
    repeated Malware malware = 28;
    string message = 29;
    Metadata metadata = 30;
    repeated string nist = 31;
    repeated Observable observables = 32;
    Process process = 33;
    string raw_data = 34;
    repeated ResourceDetails resources = 35;
    string risk_level = 36;
    RiskLevelId risk_level_id = 37;
    int32 risk_score = 38;
    string severity = 39;
    SeverityId severity_id = 40;
    int64 start_time = 41;
    google.protobuf.Timestamp start_time_dt = 42;
    string state = 43;
    StateId state_id = 44;
    string status = 45;
    string status_code = 46;
    string status_detail = 47;
    StatusId status_id = 48;
    int64 time = 49;
    google.protobuf.Timestamp time_dt = 50;
    int32 timezone_offset = 51;
    string type_name = 52;
    int64 type_uid = 53;
    GenericObject unmapped = 54;
    repeated Vulnerability vulnerabilities = 55;
}

// VulnerabilityFinding is an OSF event in category "Findings"
// called Vulnerability Finding
// defined in io.ocsf events/findings/vulnerability_finding.json
//
// The Vulnerability Finding event is a notification about weakness in an
// information system, system security procedures, internal controls, or
// implementation that could be exploited or triggered by a threat source.
message VulnerabilityFinding {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // A finding was created.
        UPDATE_ActivityId  = 2;  // A finding was updated.
        CLOSE_ActivityId   = 3;  // A finding was closed.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid  = 0;
        FINDINGS_CategoryUid = 2;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;   
        VULNERABILITY_FINDING_ClassUid = 2002;
    }
    enum ConfidenceId {
        UNKNOWN_ConfidenceId = 0;  // The normalized confidence is unknown.
        LOW_ConfidenceId     = 1; 
        MEDIUM_ConfidenceId  = 2; 
        HIGH_ConfidenceId    = 3; 
        OTHER_ConfidenceId   = 99; // The confidence is not mapped to the defined enum
                                   // values. See the <code>confidence</code> attribute,
                                   // which contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId     = 0;  // The status is unknown.
        NEW_StatusId         = 1;  // The Finding is new and yet to be reviewed.
        IN_PROGRESS_StatusId = 2;  // The Finding is under review.
        SUPPRESSED_StatusId  = 3;  // The Finding was reviewed, determined to be benign or
                                   // a false positive and is now suppressed.
        RESOLVED_StatusId    = 4;  // The Finding was reviewed, remediated and is now
                                   // considered resolved.
        OTHER_StatusId       = 99; // The event status is not mapped. See the
                                   // <code>status</code> attribute, which contains a data
                                   // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    string comment = 10;
    string confidence = 11;
    ConfidenceId confidence_id = 12;
    int32 confidence_score = 13;
    int32 count = 14;
    Device device = 15;
    int32 duration = 16;
    int64 end_time = 17;
    google.protobuf.Timestamp end_time_dt = 18;
    repeated Enrichment enrichments = 19;
    FindingInfo finding_info = 20;
    string message = 21;
    Metadata metadata = 22;
    repeated Observable observables = 23;
    string raw_data = 24;
    ResourceDetails resource = 25;
    string severity = 26;
    SeverityId severity_id = 27;
    int64 start_time = 28;
    google.protobuf.Timestamp start_time_dt = 29;
    string status = 30;
    string status_code = 31;
    string status_detail = 32;
    StatusId status_id = 33;
    int64 time = 34;
    google.protobuf.Timestamp time_dt = 35;
    int32 timezone_offset = 36;
    string type_name = 37;
    int64 type_uid = 38;
    GenericObject unmapped = 39;
    repeated Vulnerability vulnerabilities = 40;
}

// ComplianceFinding is an OSF event in category "Findings"
// called Compliance Finding
// defined in io.ocsf events/findings/compliance_finding.json
//
// Compliance Finding events describe results of evaluations performed against
// resources, to check compliance with various Industry Frameworks or Security
// Standards such as <code>NIST SP 800-53, CIS AWS Foundations Benchmark
// v1.4.0, ISO/IEC 27001</code> etc.
message ComplianceFinding {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // A finding was created.
        UPDATE_ActivityId  = 2;  // A finding was updated.
        CLOSE_ActivityId   = 3;  // A finding was closed.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid  = 0;
        FINDINGS_CategoryUid = 2;
    }
    enum ClassUid {
        UNKNOWN_ClassUid            = 0;   
        COMPLIANCE_FINDING_ClassUid = 2003;
    }
    enum ConfidenceId {
        UNKNOWN_ConfidenceId = 0;  // The normalized confidence is unknown.
        LOW_ConfidenceId     = 1; 
        MEDIUM_ConfidenceId  = 2; 
        HIGH_ConfidenceId    = 3; 
        OTHER_ConfidenceId   = 99; // The confidence is not mapped to the defined enum
                                   // values. See the <code>confidence</code> attribute,
                                   // which contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId     = 0;  // The status is unknown.
        NEW_StatusId         = 1;  // The Finding is new and yet to be reviewed.
        IN_PROGRESS_StatusId = 2;  // The Finding is under review.
        SUPPRESSED_StatusId  = 3;  // The Finding was reviewed, determined to be benign or
                                   // a false positive and is now suppressed.
        RESOLVED_StatusId    = 4;  // The Finding was reviewed, remediated and is now
                                   // considered resolved.
        OTHER_StatusId       = 99; // The event status is not mapped. See the
                                   // <code>status</code> attribute, which contains a data
                                   // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    string comment = 10;
    Compliance compliance = 11;
    string confidence = 12;
    ConfidenceId confidence_id = 13;
    int32 confidence_score = 14;
    int32 count = 15;
    Device device = 16;
    int32 duration = 17;
    int64 end_time = 18;
    google.protobuf.Timestamp end_time_dt = 19;
    repeated Enrichment enrichments = 20;
    FindingInfo finding_info = 21;
    string message = 22;
    Metadata metadata = 23;
    repeated Observable observables = 24;
    string raw_data = 25;
    Remediation remediation = 26;
    ResourceDetails resource = 27;
    string severity = 28;
    SeverityId severity_id = 29;
    int64 start_time = 30;
    google.protobuf.Timestamp start_time_dt = 31;
    string status = 32;
    string status_code = 33;
    string status_detail = 34;
    StatusId status_id = 35;
    int64 time = 36;
    google.protobuf.Timestamp time_dt = 37;
    int32 timezone_offset = 38;
    string type_name = 39;
    int64 type_uid = 40;
    GenericObject unmapped = 41;
}

// DetectionFinding is an OSF event in category "Findings"
// called Detection Finding
// defined in io.ocsf events/findings/detection_finding.json
//
// A Detection Finding describes detections or alerts generated by security
// products using correlation engines, detection engines or other
// methodologies. Note: if the product is a security control, the
// <code>security_control</code> profile should be applied and its
// <code>attacks</code> information should be duplicated into the
// <code>finding_info</code> object.
message DetectionFinding {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // A finding was created.
        UPDATE_ActivityId  = 2;  // A finding was updated.
        CLOSE_ActivityId   = 3;  // A finding was closed.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid  = 0;
        FINDINGS_CategoryUid = 2;
    }
    enum ClassUid {
        UNKNOWN_ClassUid           = 0;   
        DETECTION_FINDING_ClassUid = 2004;
    }
    enum ConfidenceId {
        UNKNOWN_ConfidenceId = 0;  // The normalized confidence is unknown.
        LOW_ConfidenceId     = 1; 
        MEDIUM_ConfidenceId  = 2; 
        HIGH_ConfidenceId    = 3; 
        OTHER_ConfidenceId   = 99; // The confidence is not mapped to the defined enum
                                   // values. See the <code>confidence</code> attribute,
                                   // which contains a data source specific value.
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum ImpactId {
        UNKNOWN_ImpactId  = 0;  // The normalized impact is unknown.
        LOW_ImpactId      = 1; 
        MEDIUM_ImpactId   = 2; 
        HIGH_ImpactId     = 3; 
        CRITICAL_ImpactId = 4; 
        OTHER_ImpactId    = 99; // The impact is not mapped. See the <code>impact</code>
                                // attribute, which contains a data source specific value.
    }
    enum RiskLevelId {
        INFO_RiskLevelId     = 0;
        LOW_RiskLevelId      = 1;
        MEDIUM_RiskLevelId   = 2;
        HIGH_RiskLevelId     = 3;
        CRITICAL_RiskLevelId = 4;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId     = 0;  // The status is unknown.
        NEW_StatusId         = 1;  // The Finding is new and yet to be reviewed.
        IN_PROGRESS_StatusId = 2;  // The Finding is under review.
        SUPPRESSED_StatusId  = 3;  // The Finding was reviewed, determined to be benign or
                                   // a false positive and is now suppressed.
        RESOLVED_StatusId    = 4;  // The Finding was reviewed, remediated and is now
                                   // considered resolved.
        OTHER_StatusId       = 99; // The event status is not mapped. See the
                                   // <code>status</code> attribute, which contains a data
                                   // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    string comment = 14;
    string confidence = 15;
    ConfidenceId confidence_id = 16;
    int32 confidence_score = 17;
    int32 count = 18;
    Device device = 19;
    string disposition = 20;
    DispositionId disposition_id = 21;
    int32 duration = 22;
    int64 end_time = 23;
    google.protobuf.Timestamp end_time_dt = 24;
    repeated Enrichment enrichments = 25;
    repeated Evidences evidences = 26;
    FindingInfo finding_info = 27;
    FirewallRule firewall_rule = 28;
    string impact = 29;
    ImpactId impact_id = 30;
    int32 impact_score = 31;
    repeated Malware malware = 32;
    string message = 33;
    Metadata metadata = 34;
    repeated Observable observables = 35;
    string raw_data = 36;
    Remediation remediation = 37;
    repeated ResourceDetails resources = 38;
    string risk_details = 39;
    string risk_level = 40;
    RiskLevelId risk_level_id = 41;
    int32 risk_score = 42;
    string severity = 43;
    SeverityId severity_id = 44;
    int64 start_time = 45;
    google.protobuf.Timestamp start_time_dt = 46;
    string status = 47;
    string status_code = 48;
    string status_detail = 49;
    StatusId status_id = 50;
    int64 time = 51;
    google.protobuf.Timestamp time_dt = 52;
    int32 timezone_offset = 53;
    string type_name = 54;
    int64 type_uid = 55;
    GenericObject unmapped = 56;
    repeated Vulnerability vulnerabilities = 57;
}

// IncidentFinding is an OSF event in category "Findings"
// called Incident Finding
// defined in io.ocsf events/findings/incident_finding.json
//
// An Incident Finding reports the creation, update, or closure of security
// incidents as a result of detections and/or analytics.
message IncidentFinding {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // Reports the creation of an Incident.
        UPDATE_ActivityId  = 2;  // Reports updates to an Incident.
        CLOSE_ActivityId   = 3;  // Reports closure of an Incident .
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid  = 0;
        FINDINGS_CategoryUid = 2;
    }
    enum ClassUid {
        UNKNOWN_ClassUid          = 0;   
        INCIDENT_FINDING_ClassUid = 2005;
    }
    enum ConfidenceId {
        UNKNOWN_ConfidenceId = 0;  // The normalized confidence is unknown.
        LOW_ConfidenceId     = 1; 
        MEDIUM_ConfidenceId  = 2; 
        HIGH_ConfidenceId    = 3; 
        OTHER_ConfidenceId   = 99; // The confidence is not mapped to the defined enum
                                   // values. See the <code>confidence</code> attribute,
                                   // which contains a data source specific value.
    }
    enum ImpactId {
        UNKNOWN_ImpactId  = 0;  // The normalized impact is unknown.
        LOW_ImpactId      = 1; 
        MEDIUM_ImpactId   = 2; 
        HIGH_ImpactId     = 3; 
        CRITICAL_ImpactId = 4; 
        OTHER_ImpactId    = 99; // The impact is not mapped. See the <code>impact</code>
                                // attribute, which contains a data source specific value.
    }
    enum PriorityId {
        UNKNOWN_PriorityId  = 0;  // No priority is assigned.
        LOW_PriorityId      = 1;  // Application or personal procedure is unusable, where
                                  // a workaround is available or a repair is possible.
        MEDIUM_PriorityId   = 2;  // Non-critical function or procedure is unusable or hard
                                  // to use causing operational disruptions with no direct
                                  // impact on a service's availability. A workaround is
                                  // available.
        HIGH_PriorityId     = 3;  // Critical functionality or network access is
                                  // interrupted, degraded or unusable, having a severe
                                  // impact on services availability. No acceptable
                                  // alternative is possible.
        CRITICAL_PriorityId = 4;  // Interruption making a critical functionality
                                  // inaccessible or a complete network interruption
                                  // causing a severe impact on services availability.
                                  // There is no possible alternative.
        OTHER_PriorityId    = 99; // The priority is not normalized.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId     = 0;  // The status is unknown.
        NEW_StatusId         = 1;  // The service desk has received the incident but has
                                   // not assigned it to an agent.
        IN_PROGRESS_StatusId = 2;  // The incident has been assigned to an agent but has
                                   // not been resolved. The agent is actively working
                                   // with the user to diagnose and resolve the incident.
        ON_HOLD_StatusId     = 3;  // The incident requires some information or response
                                   // from the user or from a third party.
        RESOLVED_StatusId    = 4;  // The service desk has confirmed that the incident is
                                   // resolved.
        CLOSED_StatusId      = 5;  // The incident is resolved and no further action is
                                   // necessary.
        OTHER_StatusId       = 99; // The event status is not mapped. See the
                                   // <code>status</code> attribute, which contains a data
                                   // source specific value.
    }
    enum VerdictId {
        UNKNOWN_VerdictId            = 0;  // The type is unknown.
        FALSE_POSITIVE_VerdictId     = 1;  // The incident is a false positive.
        TRUE_POSITIVE_VerdictId      = 2;  // The incident is a true positive.
        DISREGARD_VerdictId          = 3;  // The incident can be disregarded as it is
                                           // unimportant, an error or accident.
        SUSPICIOUS_VerdictId         = 4;  // The incident is suspicious.
        BENIGN_VerdictId             = 5;  // The incident is benign.
        TEST_VerdictId               = 6;  // The incident is a test.
        INSUFFICIENT_DATA_VerdictId  = 7;  // The incident has insufficient data to make a
                                           // verdict.
        SECURITY_RISK_VerdictId      = 8;  // The incident is a security risk.
        MANAGED_EXTERNALLY_VerdictId = 9;  // The incident remediation or required actions
                                           // are managed externally.
        DUPLICATE_VerdictId          = 10; // The incident is a duplicate.
        OTHER_VerdictId              = 99; // The type is not mapped. See the
                                           // <code>type</code> attribute, which contains
                                           // a data source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Api api = 3;
    User assignee = 4;
    Group assignee_group = 5;
    repeated Attack attacks = 6;
    string category_name = 7;
    CategoryUid category_uid = 8;
    string class_name = 9;
    ClassUid class_uid = 10;
    Cloud cloud = 11;
    string comment = 12;
    string confidence = 13;
    ConfidenceId confidence_id = 14;
    int32 confidence_score = 15;
    int32 count = 16;
    string desc = 17;
    int32 duration = 18;
    int64 end_time = 19;
    google.protobuf.Timestamp end_time_dt = 20;
    repeated Enrichment enrichments = 21;
    repeated FindingInfo finding_info_list = 22;
    string impact = 23;
    ImpactId impact_id = 24;
    int32 impact_score = 25;
    bool is_suspected_breach = 26;
    string message = 27;
    Metadata metadata = 28;
    repeated Observable observables = 29;
    string priority = 30;
    PriorityId priority_id = 31;
    string raw_data = 32;
    string severity = 33;
    SeverityId severity_id = 34;
    string src_url = 35;
    int64 start_time = 36;
    google.protobuf.Timestamp start_time_dt = 37;
    string status = 38;
    string status_code = 39;
    string status_detail = 40;
    StatusId status_id = 41;
    int64 time = 42;
    google.protobuf.Timestamp time_dt = 43;
    int32 timezone_offset = 44;
    string type_name = 45;
    int64 type_uid = 46;
    GenericObject unmapped = 47;
    string verdict = 48;
    VerdictId verdict_id = 49;
}

// DataSecurityFinding is an OSF event in category "Findings"
// called Data Security Finding
// defined in io.ocsf events/findings/data_security_finding.json
//
// A Data Security Finding describes detections or alerts generated by various
// data security products such as Data Loss Prevention (DLP), Data
// Classification, Secrets Management, Digital Rights Management (DRM), Data
// Security Posture Management (DSPM), and similar tools. These detections or
// alerts can be created using fingerprinting, statistical analysis, machine
// learning or other methodologies. The finding describes the actors and
// endpoints who accessed or own the sensitive data, as well as the resources
// which store the sensitive data.
message DataSecurityFinding {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId    = 0; 
        CREATE_ActivityId     = 1;  // A new Data Security finding is created.
        UPDATE_ActivityId     = 2;  // An existing Data Security finding is updated with
                                    // more information.
        CLOSE_ActivityId      = 3;  // An existing Data Security finding is closed, this
                                    // can be due to any resolution (e.g., True Positive,
                                    // False Positive, etc.).
        SUPPRESSED_ActivityId = 4;  // An existing Data Security finding is suppressed due
                                    // to inaccurate detection techniques or a known true
                                    // negative.
        OTHER_ActivityId      = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid  = 0;
        FINDINGS_CategoryUid = 2;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;   
        DATA_SECURITY_FINDING_ClassUid = 2006;
    }
    enum ConfidenceId {
        UNKNOWN_ConfidenceId = 0;  // The normalized confidence is unknown.
        LOW_ConfidenceId     = 1; 
        MEDIUM_ConfidenceId  = 2; 
        HIGH_ConfidenceId    = 3; 
        OTHER_ConfidenceId   = 99; // The confidence is not mapped to the defined enum
                                   // values. See the <code>confidence</code> attribute,
                                   // which contains a data source specific value.
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum ImpactId {
        UNKNOWN_ImpactId  = 0;  // The normalized impact is unknown.
        LOW_ImpactId      = 1; 
        MEDIUM_ImpactId   = 2; 
        HIGH_ImpactId     = 3; 
        CRITICAL_ImpactId = 4; 
        OTHER_ImpactId    = 99; // The impact is not mapped. See the <code>impact</code>
                                // attribute, which contains a data source specific value.
    }
    enum RiskLevelId {
        INFO_RiskLevelId     = 0;
        LOW_RiskLevelId      = 1;
        MEDIUM_RiskLevelId   = 2;
        HIGH_RiskLevelId     = 3;
        CRITICAL_RiskLevelId = 4;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId     = 0;  // The status is unknown.
        NEW_StatusId         = 1;  // The Finding is new and yet to be reviewed.
        IN_PROGRESS_StatusId = 2;  // The Finding is under review.
        SUPPRESSED_StatusId  = 3;  // The Finding was reviewed, determined to be benign or
                                   // a false positive and is now suppressed.
        RESOLVED_StatusId    = 4;  // The Finding was reviewed, remediated and is now
                                   // considered resolved.
        OTHER_StatusId       = 99; // The event status is not mapped. See the
                                   // <code>status</code> attribute, which contains a data
                                   // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    string comment = 14;
    string confidence = 15;
    ConfidenceId confidence_id = 16;
    int32 confidence_score = 17;
    int32 count = 18;
    DataSecurity data_security = 19;
    Database database = 20;
    Databucket databucket = 21;
    Device device = 22;
    string disposition = 23;
    DispositionId disposition_id = 24;
    NetworkEndpoint dst_endpoint = 25;
    int32 duration = 26;
    int64 end_time = 27;
    google.protobuf.Timestamp end_time_dt = 28;
    repeated Enrichment enrichments = 29;
    File file = 30;
    FindingInfo finding_info = 31;
    FirewallRule firewall_rule = 32;
    string impact = 33;
    ImpactId impact_id = 34;
    int32 impact_score = 35;
    repeated Malware malware = 36;
    string message = 37;
    Metadata metadata = 38;
    repeated Observable observables = 39;
    string raw_data = 40;
    repeated ResourceDetails resources = 41;
    string risk_level = 42;
    RiskLevelId risk_level_id = 43;
    int32 risk_score = 44;
    string severity = 45;
    SeverityId severity_id = 46;
    NetworkEndpoint src_endpoint = 47;
    int64 start_time = 48;
    google.protobuf.Timestamp start_time_dt = 49;
    string status = 50;
    string status_code = 51;
    string status_detail = 52;
    StatusId status_id = 53;
    Table table = 54;
    int64 time = 55;
    google.protobuf.Timestamp time_dt = 56;
    int32 timezone_offset = 57;
    string type_name = 58;
    int64 type_uid = 59;
    GenericObject unmapped = 60;
}

// AccountChange is an OSF event in category "Identity & Access Management"
// called Account Change
// defined in io.ocsf events/iam/account_change.json
//
// Account Change events report when specific user account management tasks
// are performed, such as a user/role being created, changed, deleted,
// renamed, disabled, enabled, locked out or unlocked.
message AccountChange {
    enum ActivityId {
        UNKNOWN_ActivityId            = 0; 
        CREATE_ActivityId             = 1;  // A user/role was created.
        ENABLE_ActivityId             = 2;  // A user/role was enabled.
        PASSWORD_CHANGE_ActivityId    = 3;  // An attempt was made to change an account's
                                            // password.
        PASSWORD_RESET_ActivityId     = 4;  // An attempt was made to reset an account's
                                            // password.
        DISABLE_ActivityId            = 5;  // A user/role was disabled.
        DELETE_ActivityId             = 6;  // A user/role was deleted.
        ATTACH_POLICY_ActivityId      = 7;  // An IAM Policy was attached to a user/role.
        DETACH_POLICY_ActivityId      = 8;  // An IAM Policy was detached from a
                                            // user/role.
        LOCK_ActivityId               = 9;  // A user account was locked out.
        MFA_FACTOR_ENABLE_ActivityId  = 10; // An authentication factor was enabled for an
                                            // account.
        MFA_FACTOR_DISABLE_ActivityId = 11; // An authentication factor was disabled for
                                            // an account.
        OTHER_ActivityId              = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid                    = 0;
        IDENTITY_ACCESS_MANAGEMENT_CategoryUid = 3;
    }
    enum ClassUid {
        UNKNOWN_ClassUid        = 0;   
        ACCOUNT_CHANGE_ClassUid = 3001;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    HttpRequest http_request = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    Policy policy = 20;
    string raw_data = 21;
    string severity = 22;
    SeverityId severity_id = 23;
    NetworkEndpoint src_endpoint = 24;
    int64 start_time = 25;
    google.protobuf.Timestamp start_time_dt = 26;
    string status = 27;
    string status_code = 28;
    string status_detail = 29;
    StatusId status_id = 30;
    int64 time = 31;
    google.protobuf.Timestamp time_dt = 32;
    int32 timezone_offset = 33;
    string type_name = 34;
    int64 type_uid = 35;
    GenericObject unmapped = 36;
    User user = 37;
    User user_result = 38;
}

// Authentication is an OSF event in category "Identity & Access Management"
// called Authentication
// defined in io.ocsf events/iam/authentication.json
//
// Authentication events report authentication session activities such as user
// attempts a logon or logoff, successfully or otherwise.
message Authentication {
    enum ActivityId {
        UNKNOWN_ActivityId                = 0; 
        LOGON_ActivityId                  = 1;  // A new logon session was requested.
        LOGOFF_ActivityId                 = 2;  // A logon session was terminated and no
                                                // longer exists.
        AUTHENTICATION_TICKET_ActivityId  = 3;  // A Kerberos authentication ticket (TGT)
                                                // was requested.
        SERVICE_TICKET_REQUEST_ActivityId = 4;  // A Kerberos service ticket was
                                                // requested.
        SERVICE_TICKET_RENEW_ActivityId   = 5;  // A Kerberos service ticket was renewed.
        PREAUTH_ActivityId                = 6;  // A preauthentication stage was engaged.
        OTHER_ActivityId                  = 99;
    }
    enum AuthProtocolId {
        UNKNOWN_AuthProtocolId   = 0;  // The authentication protocol is unknown.
        NTLM_AuthProtocolId      = 1; 
        KERBEROS_AuthProtocolId  = 2; 
        DIGEST_AuthProtocolId    = 3; 
        OPENID_AuthProtocolId    = 4; 
        SAML_AuthProtocolId      = 5; 
        OAUTH_2_0_AuthProtocolId = 6; 
        PAP_AuthProtocolId       = 7; 
        CHAP_AuthProtocolId      = 8; 
        EAP_AuthProtocolId       = 9; 
        RADIUS_AuthProtocolId    = 10;
        OTHER_AuthProtocolId     = 99; // The authentication protocol is not mapped. See
                                       // the <code>auth_protocol</code> attribute, which
                                       // contains a data source specific value.
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid                    = 0;
        IDENTITY_ACCESS_MANAGEMENT_CategoryUid = 3;
    }
    enum ClassUid {
        UNKNOWN_ClassUid        = 0;   
        AUTHENTICATION_ClassUid = 3002;
    }
    enum LogonTypeId {
        UNKNOWN_LogonTypeId                   = 0;  // The logon type is unknown.
        SYSTEM_LogonTypeId                    = 1;  // Used only by the System account,
                                                    // for example at system startup.
        INTERACTIVE_LogonTypeId               = 2;  // A local logon to device console.
        NETWORK_LogonTypeId                   = 3;  // A user or device logged onto this
                                                    // device from the network.
        BATCH_LogonTypeId                     = 4;  // A batch server logon, where
                                                    // processes may be executing on
                                                    // behalf of a user without their
                                                    // direct intervention.
        OS_SERVICE_LogonTypeId                = 5;  // A logon by a service or daemon that
                                                    // was started by the OS.
        UNLOCK_LogonTypeId                    = 7;  // A user unlocked the device.
        NETWORK_CLEARTEXT_LogonTypeId         = 8;  // A user logged on to this device
                                                    // from the network. The user's
                                                    // password in the authentication
                                                    // package was not hashed.
        NEW_CREDENTIALS_LogonTypeId           = 9;  // A caller cloned its current token
                                                    // and specified new credentials for
                                                    // outbound connections. The new logon
                                                    // session has the same local
                                                    // identity, but uses different
                                                    // credentials for other network
                                                    // connections.
        REMOTE_INTERACTIVE_LogonTypeId        = 10; // A remote logon using Terminal
                                                    // Services or remote desktop
                                                    // application.
        CACHED_INTERACTIVE_LogonTypeId        = 11; // A user logged on to this device
                                                    // with network credentials that were
                                                    // stored locally on the device and
                                                    // the domain controller was not
                                                    // contacted to verify the
                                                    // credentials.
        CACHED_REMOTE_INTERACTIVE_LogonTypeId = 12; // Same as Remote Interactive. This is
                                                    // used for internal auditing.
        CACHED_UNLOCK_LogonTypeId             = 13; // Workstation logon.
        OTHER_LogonTypeId                     = 99; // The logon type is not mapped. See
                                                    // the <code>logon_type</code>
                                                    // attribute, which contains a data
                                                    // source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    repeated AuthFactor auth_factors = 5;
    string auth_protocol = 6;
    AuthProtocolId auth_protocol_id = 7;
    string category_name = 8;
    CategoryUid category_uid = 9;
    Certificate certificate = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    NetworkEndpoint dst_endpoint = 16;
    int32 duration = 17;
    int64 end_time = 18;
    google.protobuf.Timestamp end_time_dt = 19;
    repeated Enrichment enrichments = 20;
    HttpRequest http_request = 21;
    bool is_cleartext = 22;
    bool is_mfa = 23;
    bool is_new_logon = 24;
    bool is_remote = 25;
    Process logon_process = 26;
    string logon_type = 27;
    LogonTypeId logon_type_id = 28;
    string message = 29;
    Metadata metadata = 30;
    repeated Observable observables = 31;
    string raw_data = 32;
    Service service = 33;
    Session session = 34;
    string severity = 35;
    SeverityId severity_id = 36;
    NetworkEndpoint src_endpoint = 37;
    int64 start_time = 38;
    google.protobuf.Timestamp start_time_dt = 39;
    string status = 40;
    string status_code = 41;
    string status_detail = 42;
    StatusId status_id = 43;
    int64 time = 44;
    google.protobuf.Timestamp time_dt = 45;
    int32 timezone_offset = 46;
    string type_name = 47;
    int64 type_uid = 48;
    GenericObject unmapped = 49;
    User user = 50;
}

// AuthorizeSession is an OSF event in category "Identity & Access Management"
// called Authorize Session
// defined in io.ocsf events/iam/authorize_session.json
//
// Authorize Session events report privileges or groups assigned to a new user
// session, usually at login time.
message AuthorizeSession {
    enum ActivityId {
        UNKNOWN_ActivityId           = 0; 
        ASSIGN_PRIVILEGES_ActivityId = 1;  // Assign special privileges to a new logon.
        ASSIGN_GROUPS_ActivityId     = 2;  // Assign special groups to a new logon.
        OTHER_ActivityId             = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid                    = 0;
        IDENTITY_ACCESS_MANAGEMENT_CategoryUid = 3;
    }
    enum ClassUid {
        UNKNOWN_ClassUid           = 0;   
        AUTHORIZE_SESSION_ClassUid = 3003;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    NetworkEndpoint dst_endpoint = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    Group group = 17;
    HttpRequest http_request = 18;
    string message = 19;
    Metadata metadata = 20;
    repeated Observable observables = 21;
    repeated string privileges = 22;
    string raw_data = 23;
    Session session = 24;
    string severity = 25;
    SeverityId severity_id = 26;
    NetworkEndpoint src_endpoint = 27;
    int64 start_time = 28;
    google.protobuf.Timestamp start_time_dt = 29;
    string status = 30;
    string status_code = 31;
    string status_detail = 32;
    StatusId status_id = 33;
    int64 time = 34;
    google.protobuf.Timestamp time_dt = 35;
    int32 timezone_offset = 36;
    string type_name = 37;
    int64 type_uid = 38;
    GenericObject unmapped = 39;
    User user = 40;
}

// EntityManagement is an OSF event in category "Identity & Access Management"
// called Entity Management
// defined in io.ocsf events/iam/entity_management.json
//
// Entity Management events report activity by a managed client, a micro
// service, or a user at a management console. The activity can be a create,
// read, update, and delete operation on a managed entity.
message EntityManagement {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1; 
        READ_ActivityId    = 2; 
        UPDATE_ActivityId  = 3; 
        DELETE_ActivityId  = 4; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid                    = 0;
        IDENTITY_ACCESS_MANAGEMENT_CategoryUid = 3;
    }
    enum ClassUid {
        UNKNOWN_ClassUid           = 0;   
        ENTITY_MANAGEMENT_ClassUid = 3004;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    string comment = 10;
    int32 count = 11;
    Device device = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    ManagedEntity entity = 17;
    ManagedEntity entity_result = 18;
    HttpRequest http_request = 19;
    string message = 20;
    Metadata metadata = 21;
    repeated Observable observables = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    NetworkEndpoint src_endpoint = 26;
    int64 start_time = 27;
    google.protobuf.Timestamp start_time_dt = 28;
    string status = 29;
    string status_code = 30;
    string status_detail = 31;
    StatusId status_id = 32;
    int64 time = 33;
    google.protobuf.Timestamp time_dt = 34;
    int32 timezone_offset = 35;
    string type_name = 36;
    int64 type_uid = 37;
    GenericObject unmapped = 38;
}

// UserAccess is an OSF event in category "Identity & Access Management"
// called User Access Management
// defined in io.ocsf events/iam/user_access.json
//
// User Access Management events report management updates to a user's
// privileges.
message UserAccess {
    enum ActivityId {
        UNKNOWN_ActivityId           = 0; 
        ASSIGN_PRIVILEGES_ActivityId = 1;  // Assign privileges to a user.
        REVOKE_PRIVILEGES_ActivityId = 2;  // Revoke privileges from a user.
        OTHER_ActivityId             = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid                    = 0;
        IDENTITY_ACCESS_MANAGEMENT_CategoryUid = 3;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                = 0;   
        USER_ACCESS_MANAGEMENT_ClassUid = 3005;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    HttpRequest http_request = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    repeated string privileges = 20;
    string raw_data = 21;
    ResourceDetails resource = 22;
    string severity = 23;
    SeverityId severity_id = 24;
    NetworkEndpoint src_endpoint = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
    User user = 38;
}

// GroupManagement is an OSF event in category "Identity & Access Management"
// called Group Management
// defined in io.ocsf events/iam/group_management.json
//
// Group Management events report management updates to a group, including
// updates to membership and permissions.
message GroupManagement {
    enum ActivityId {
        UNKNOWN_ActivityId           = 0; 
        ASSIGN_PRIVILEGES_ActivityId = 1;  // Assign privileges to a group.
        REVOKE_PRIVILEGES_ActivityId = 2;  // Revoke privileges from a group.
        ADD_USER_ActivityId          = 3;  // Add user to a group.
        REMOVE_USER_ActivityId       = 4;  // Remove user from a group.
        DELETE_ActivityId            = 5;  // A group was deleted.
        CREATE_ActivityId            = 6;  // A group was created.
        OTHER_ActivityId             = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid                    = 0;
        IDENTITY_ACCESS_MANAGEMENT_CategoryUid = 3;
    }
    enum ClassUid {
        UNKNOWN_ClassUid          = 0;   
        GROUP_MANAGEMENT_ClassUid = 3006;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    Group group = 16;
    HttpRequest http_request = 17;
    string message = 18;
    Metadata metadata = 19;
    repeated Observable observables = 20;
    repeated string privileges = 21;
    string raw_data = 22;
    ResourceDetails resource = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    NetworkEndpoint src_endpoint = 26;
    int64 start_time = 27;
    google.protobuf.Timestamp start_time_dt = 28;
    string status = 29;
    string status_code = 30;
    string status_detail = 31;
    StatusId status_id = 32;
    int64 time = 33;
    google.protobuf.Timestamp time_dt = 34;
    int32 timezone_offset = 35;
    string type_name = 36;
    int64 type_uid = 37;
    GenericObject unmapped = 38;
    User user = 39;
}

// NetworkActivity is an OSF event in category "Network Activity"
// called Network Activity
// defined in io.ocsf events/network/network_activity.json
//
// Network Activity events report network connection and traffic activity.
message NetworkActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        OPEN_ActivityId    = 1;  // A new network connection was opened.
        CLOSE_ActivityId   = 2;  // The network connection was closed.
        RESET_ActivityId   = 3;  // The network connection was abnormally terminated or
                                 // closed by a middle device like firewalls.
        FAIL_ActivityId    = 4;  // The network connection failed. For example a
                                 // connection timeout or no route to host.
        REFUSE_ActivityId  = 5;  // The network connection was refused. For example an
                                 // attempt to connect to a server port which is not open.
        TRAFFIC_ActivityId = 6;  // Network traffic report.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid          = 0;   
        NETWORK_ACTIVITY_ClassUid = 4001;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    NetworkConnectionInfo connection_info = 15;
    int32 count = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    NetworkEndpoint dst_endpoint = 20;
    int32 duration = 21;
    int64 end_time = 22;
    google.protobuf.Timestamp end_time_dt = 23;
    repeated Enrichment enrichments = 24;
    FirewallRule firewall_rule = 25;
    LoadBalancer load_balancer = 26;
    repeated Malware malware = 27;
    string message = 28;
    Metadata metadata = 29;
    repeated Observable observables = 30;
    NetworkProxy proxy = 31;
    NetworkConnectionInfo proxy_connection_info = 32;
    NetworkProxy proxy_endpoint = 33;
    HttpRequest proxy_http_request = 34;
    HttpResponse proxy_http_response = 35;
    Tls proxy_tls = 36;
    NetworkTraffic proxy_traffic = 37;
    string raw_data = 38;
    string severity = 39;
    SeverityId severity_id = 40;
    NetworkEndpoint src_endpoint = 41;
    int64 start_time = 42;
    google.protobuf.Timestamp start_time_dt = 43;
    string status = 44;
    string status_code = 45;
    string status_detail = 46;
    StatusId status_id = 47;
    int64 time = 48;
    google.protobuf.Timestamp time_dt = 49;
    int32 timezone_offset = 50;
    Tls tls = 51;
    NetworkTraffic traffic = 52;
    string type_name = 53;
    int64 type_uid = 54;
    GenericObject unmapped = 55;
    Url url = 56;
}

// HttpActivity is an OSF event in category "Network Activity"
// called HTTP Activity
// defined in io.ocsf events/network/http.json
//
// HTTP Activity events report HTTP connection and traffic information.
message HttpActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CONNECT_ActivityId = 1;  // The CONNECT method establishes a tunnel to the server
                                 // identified by the target resource.
        DELETE_ActivityId  = 2;  // The DELETE method deletes the specified resource.
        GET_ActivityId     = 3;  // The GET method requests a representation of the
                                 // specified resource. Requests using GET should only
                                 // retrieve data.
        HEAD_ActivityId    = 4;  // The HEAD method asks for a response identical to a GET
                                 // request, but without the response body.
        OPTIONS_ActivityId = 5;  // The OPTIONS method describes the communication options
                                 // for the target resource.
        POST_ActivityId    = 6;  // The POST method submits an entity to the specified
                                 // resource, often causing a change in state or side
                                 // effects on the server.
        PUT_ActivityId     = 7;  // The PUT method replaces all current representations of
                                 // the target resource with the request payload.
        TRACE_ActivityId   = 8;  // The TRACE method performs a message loop-back test
                                 // along the path to the target resource.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid       = 0;   
        HTTP_ACTIVITY_ClassUid = 4002;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    NetworkConnectionInfo connection_info = 15;
    int32 count = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    NetworkEndpoint dst_endpoint = 20;
    int32 duration = 21;
    int64 end_time = 22;
    google.protobuf.Timestamp end_time_dt = 23;
    repeated Enrichment enrichments = 24;
    File file = 25;
    FirewallRule firewall_rule = 26;
    repeated HttpCookie http_cookies = 27;
    HttpRequest http_request = 28;
    HttpResponse http_response = 29;
    int32 http_status = 30;
    LoadBalancer load_balancer = 31;
    repeated Malware malware = 32;
    string message = 33;
    Metadata metadata = 34;
    repeated Observable observables = 35;
    NetworkProxy proxy = 36;
    NetworkConnectionInfo proxy_connection_info = 37;
    NetworkProxy proxy_endpoint = 38;
    HttpRequest proxy_http_request = 39;
    HttpResponse proxy_http_response = 40;
    Tls proxy_tls = 41;
    NetworkTraffic proxy_traffic = 42;
    string raw_data = 43;
    string severity = 44;
    SeverityId severity_id = 45;
    NetworkEndpoint src_endpoint = 46;
    int64 start_time = 47;
    google.protobuf.Timestamp start_time_dt = 48;
    string status = 49;
    string status_code = 50;
    string status_detail = 51;
    StatusId status_id = 52;
    int64 time = 53;
    google.protobuf.Timestamp time_dt = 54;
    int32 timezone_offset = 55;
    Tls tls = 56;
    NetworkTraffic traffic = 57;
    string type_name = 58;
    int64 type_uid = 59;
    GenericObject unmapped = 60;
}

// DnsActivity is an OSF event in category "Network Activity"
// called DNS Activity
// defined in io.ocsf events/network/dns.json
//
// DNS Activity events report DNS queries and answers as seen on the network.
message DnsActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId  = 0; 
        QUERY_ActivityId    = 1;  // The DNS query request.
        RESPONSE_ActivityId = 2;  // The DNS query response.
        TRAFFIC_ActivityId  = 6;  // Bidirectional DNS request and response traffic.
        OTHER_ActivityId    = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        DNS_ACTIVITY_ClassUid = 4003;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum RcodeId {
        NOERROR_RcodeId     = 0;  // No Error.
        FORMERROR_RcodeId   = 1;  // Format Error.
        SERVERROR_RcodeId   = 2;  // Server Failure.
        NXDOMAIN_RcodeId    = 3;  // Non-Existent Domain.
        NOTIMP_RcodeId      = 4;  // Not Implemented.
        REFUSED_RcodeId     = 5;  // Query Refused.
        YXDOMAIN_RcodeId    = 6;  // Name Exists when it should not.
        YXRRSET_RcodeId     = 7;  // RR Set Exists when it should not.
        NXRRSET_RcodeId     = 8;  // RR Set that should exist does not.
        NOTAUTH_RcodeId     = 9;  // Not Authorized or Server Not Authoritative for zone.
        NOTZONE_RcodeId     = 10; // Name not contained in zone.
        DSOTYPENI_RcodeId   = 11; // DSO-TYPE Not Implemented.
        BADSIG_VERS_RcodeId = 16; // TSIG Signature Failure or Bad OPT Version.
        BADKEY_RcodeId      = 17; // Key not recognized.
        BADTIME_RcodeId     = 18; // Signature out of time window.
        BADMODE_RcodeId     = 19; // Bad TKEY Mode.
        BADNAME_RcodeId     = 20; // Duplicate key name.
        BADALG_RcodeId      = 21; // Algorithm not supported.
        BADTRUNC_RcodeId    = 22; // Bad Truncation.
        BADCOOKIE_RcodeId   = 23; // Bad/missing Server Cookie.
        UNASSIGNED_RcodeId  = 24; // The codes deemed to be unassigned by the RFC
                                  // (unassigned codes: 12-15, 24-3840, 4096-65534).
        RESERVED_RcodeId    = 25; // The codes deemed to be reserved by the RFC (codes:
                                  // 3841-4095, 65535).
        OTHER_RcodeId       = 99; // The dns response code is not defined by the RFC.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    repeated DnsAnswer answers = 6;
    Api api = 7;
    string app_name = 8;
    repeated Attack attacks = 9;
    repeated Authorization authorizations = 10;
    string category_name = 11;
    CategoryUid category_uid = 12;
    string class_name = 13;
    ClassUid class_uid = 14;
    Cloud cloud = 15;
    NetworkConnectionInfo connection_info = 16;
    int32 count = 17;
    Device device = 18;
    string disposition = 19;
    DispositionId disposition_id = 20;
    NetworkEndpoint dst_endpoint = 21;
    int32 duration = 22;
    int64 end_time = 23;
    google.protobuf.Timestamp end_time_dt = 24;
    repeated Enrichment enrichments = 25;
    FirewallRule firewall_rule = 26;
    LoadBalancer load_balancer = 27;
    repeated Malware malware = 28;
    string message = 29;
    Metadata metadata = 30;
    repeated Observable observables = 31;
    NetworkProxy proxy = 32;
    NetworkConnectionInfo proxy_connection_info = 33;
    NetworkProxy proxy_endpoint = 34;
    HttpRequest proxy_http_request = 35;
    HttpResponse proxy_http_response = 36;
    Tls proxy_tls = 37;
    NetworkTraffic proxy_traffic = 38;
    DnsQuery query = 39;
    int64 query_time = 40;
    google.protobuf.Timestamp query_time_dt = 41;
    string raw_data = 42;
    string rcode = 43;
    RcodeId rcode_id = 44;
    int64 response_time = 45;
    google.protobuf.Timestamp response_time_dt = 46;
    string severity = 47;
    SeverityId severity_id = 48;
    NetworkEndpoint src_endpoint = 49;
    int64 start_time = 50;
    google.protobuf.Timestamp start_time_dt = 51;
    string status = 52;
    string status_code = 53;
    string status_detail = 54;
    StatusId status_id = 55;
    int64 time = 56;
    google.protobuf.Timestamp time_dt = 57;
    int32 timezone_offset = 58;
    Tls tls = 59;
    NetworkTraffic traffic = 60;
    string type_name = 61;
    int64 type_uid = 62;
    GenericObject unmapped = 63;
}

// DhcpActivity is an OSF event in category "Network Activity"
// called DHCP Activity
// defined in io.ocsf events/network/dhcp.json
//
// DHCP Activity events report MAC to IP assignment via DHCP from a client or
// server.
message DhcpActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId  = 0; 
        DISCOVER_ActivityId = 1;  // DHCPDISCOVER
        OFFER_ActivityId    = 2;  // DHCPOFFER
        REQUEST_ActivityId  = 3;  // DHCPREQUEST
        DECLINE_ActivityId  = 4;  // DHCPDECLINE
        ACK_ActivityId      = 5;  // DHCPACK: The server accepts the request by sending
                                  // the client a DHCP Acknowledgment message.
        NAK_ActivityId      = 6;  // DHCPNAK
        RELEASE_ActivityId  = 7;  // DHCPRELEASE: A DHCP client sends a DHCPRELEASE packet
                                  // to the server to release the IP address and cancel
                                  // any remaining lease.
        INFORM_ActivityId   = 8;  // DHCPINFORM
        EXPIRE_ActivityId   = 9;  // DHCPEXPIRE: A DHCP lease expired.
        OTHER_ActivityId    = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid       = 0;   
        DHCP_ACTIVITY_ClassUid = 4004;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    NetworkConnectionInfo connection_info = 15;
    int32 count = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    NetworkEndpoint dst_endpoint = 20;
    int32 duration = 21;
    int64 end_time = 22;
    google.protobuf.Timestamp end_time_dt = 23;
    repeated Enrichment enrichments = 24;
    FirewallRule firewall_rule = 25;
    bool is_renewal = 26;
    int32 lease_dur = 27;
    LoadBalancer load_balancer = 28;
    repeated Malware malware = 29;
    string message = 30;
    Metadata metadata = 31;
    repeated Observable observables = 32;
    NetworkProxy proxy = 33;
    NetworkConnectionInfo proxy_connection_info = 34;
    NetworkProxy proxy_endpoint = 35;
    HttpRequest proxy_http_request = 36;
    HttpResponse proxy_http_response = 37;
    Tls proxy_tls = 38;
    NetworkTraffic proxy_traffic = 39;
    string raw_data = 40;
    NetworkInterface relay = 41;
    string severity = 42;
    SeverityId severity_id = 43;
    NetworkEndpoint src_endpoint = 44;
    int64 start_time = 45;
    google.protobuf.Timestamp start_time_dt = 46;
    string status = 47;
    string status_code = 48;
    string status_detail = 49;
    StatusId status_id = 50;
    int64 time = 51;
    google.protobuf.Timestamp time_dt = 52;
    int32 timezone_offset = 53;
    Tls tls = 54;
    NetworkTraffic traffic = 55;
    string transaction_uid = 56;
    string type_name = 57;
    int64 type_uid = 58;
    GenericObject unmapped = 59;
}

// RdpActivity is an OSF event in category "Network Activity"
// called RDP Activity
// defined in io.ocsf events/network/rdp.json
//
// Remote Desktop Protocol (RDP) Activity events report remote client
// connections to a server as seen on the network.
message RdpActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId          = 0; 
        INITIAL_REQUEST_ActivityId  = 1;  // The initial RDP request.
        INITIAL_RESPONSE_ActivityId = 2;  // The initial RDP response.
        CONNECT_REQUEST_ActivityId  = 3;  // An RDP connection request.
        CONNECT_RESPONSE_ActivityId = 4;  // An RDP connection response.
        TLS_HANDSHAKE_ActivityId    = 5;  // The TLS handshake.
        TRAFFIC_ActivityId          = 6;  // Network traffic report.
        OTHER_ActivityId            = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        RDP_ACTIVITY_ClassUid = 4005;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    repeated string capabilities = 10;
    string category_name = 11;
    CategoryUid category_uid = 12;
    repeated string certificate_chain = 13;
    string class_name = 14;
    ClassUid class_uid = 15;
    Cloud cloud = 16;
    NetworkConnectionInfo connection_info = 17;
    int32 count = 18;
    Device device = 19;
    string disposition = 20;
    DispositionId disposition_id = 21;
    NetworkEndpoint dst_endpoint = 22;
    int32 duration = 23;
    int64 end_time = 24;
    google.protobuf.Timestamp end_time_dt = 25;
    repeated Enrichment enrichments = 26;
    File file = 27;
    FirewallRule firewall_rule = 28;
    string identifier_cookie = 29;
    LoadBalancer load_balancer = 30;
    repeated Malware malware = 31;
    string message = 32;
    Metadata metadata = 33;
    repeated Observable observables = 34;
    string protocol_ver = 35;
    NetworkProxy proxy = 36;
    NetworkConnectionInfo proxy_connection_info = 37;
    NetworkProxy proxy_endpoint = 38;
    HttpRequest proxy_http_request = 39;
    HttpResponse proxy_http_response = 40;
    Tls proxy_tls = 41;
    NetworkTraffic proxy_traffic = 42;
    string raw_data = 43;
    Display remote_display = 44;
    Request request = 45;
    Response response = 46;
    string severity = 47;
    SeverityId severity_id = 48;
    NetworkEndpoint src_endpoint = 49;
    int64 start_time = 50;
    google.protobuf.Timestamp start_time_dt = 51;
    string status = 52;
    string status_code = 53;
    string status_detail = 54;
    StatusId status_id = 55;
    int64 time = 56;
    google.protobuf.Timestamp time_dt = 57;
    int32 timezone_offset = 58;
    Tls tls = 59;
    NetworkTraffic traffic = 60;
    string type_name = 61;
    int64 type_uid = 62;
    GenericObject unmapped = 63;
}

// SmbActivity is an OSF event in category "Network Activity"
// called SMB Activity
// defined in io.ocsf events/network/smb.json
//
// Server Message Block (SMB) Protocol Activity events report client/server
// connections sharing resources within the network.
message SmbActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId           = 0; 
        FILE_SUPERSEDE_ActivityId    = 1;  // The event pertains to file superseded
                                           // activity (overwritten if it exists and
                                           // created if not).
        FILE_OPEN_ActivityId         = 2;  // The event pertains to file open activity
                                           // (the file is opened if it exists and fails
                                           // to open if it doesn't).
        FILE_CREATE_ActivityId       = 3;  // The event pertains to file creation activity
                                           // (a file is created if it does not exist and
                                           // fails if it does).
        FILE_OPEN_IF_ActivityId      = 4;  // The event pertains to file open activity
                                           // (the file is opened if it exists and is
                                           // created if it doesn't).
        FILE_OVERWRITE_ActivityId    = 5;  // The event pertains to file overwrite
                                           // activity (the file is opened in a truncated
                                           // form if it exists and fails if it doesn't).
        FILE_OVERWRITE_IF_ActivityId = 6;  // The event pertains to file overwrite
                                           // activity (the file is opened in a truncated
                                           // form if it exists and created otherwise)
        OTHER_ActivityId             = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        SMB_ACTIVITY_ClassUid = 4006;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum ShareTypeId {
        UNKNOWN_ShareTypeId = 0;  // The share type is unknown.
        FILE_ShareTypeId    = 1; 
        PIPE_ShareTypeId    = 2; 
        PRINT_ShareTypeId   = 3; 
        OTHER_ShareTypeId   = 99; // The share type is not mapped. See the
                                  // <code>share_type</code> attribute, which contains a
                                  // data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    repeated string client_dialects = 14;
    Cloud cloud = 15;
    string command = 16;
    NetworkConnectionInfo connection_info = 17;
    int32 count = 18;
    DceRpc dce_rpc = 19;
    Device device = 20;
    string dialect = 21;
    string disposition = 22;
    DispositionId disposition_id = 23;
    NetworkEndpoint dst_endpoint = 24;
    int32 duration = 25;
    int64 end_time = 26;
    google.protobuf.Timestamp end_time_dt = 27;
    repeated Enrichment enrichments = 28;
    File file = 29;
    FirewallRule firewall_rule = 30;
    LoadBalancer load_balancer = 31;
    repeated Malware malware = 32;
    string message = 33;
    Metadata metadata = 34;
    repeated Observable observables = 35;
    string open_type = 36;
    NetworkProxy proxy = 37;
    NetworkConnectionInfo proxy_connection_info = 38;
    NetworkProxy proxy_endpoint = 39;
    HttpRequest proxy_http_request = 40;
    HttpResponse proxy_http_response = 41;
    Tls proxy_tls = 42;
    NetworkTraffic proxy_traffic = 43;
    string raw_data = 44;
    Response response = 45;
    string severity = 46;
    SeverityId severity_id = 47;
    string share = 48;
    string share_type = 49;
    ShareTypeId share_type_id = 50;
    NetworkEndpoint src_endpoint = 51;
    int64 start_time = 52;
    google.protobuf.Timestamp start_time_dt = 53;
    string status = 54;
    string status_code = 55;
    string status_detail = 56;
    StatusId status_id = 57;
    int64 time = 58;
    google.protobuf.Timestamp time_dt = 59;
    int32 timezone_offset = 60;
    Tls tls = 61;
    NetworkTraffic traffic = 62;
    string tree_uid = 63;
    string type_name = 64;
    int64 type_uid = 65;
    GenericObject unmapped = 66;
}

// SshActivity is an OSF event in category "Network Activity"
// called SSH Activity
// defined in io.ocsf events/network/ssh.json
//
// SSH Activity events report remote client connections to a server using the
// Secure Shell (SSH) Protocol.
message SshActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        OPEN_ActivityId    = 1;  // A new network connection was opened.
        CLOSE_ActivityId   = 2;  // The network connection was closed.
        RESET_ActivityId   = 3;  // The network connection was abnormally terminated or
                                 // closed by a middle device like firewalls.
        FAIL_ActivityId    = 4;  // The network connection failed. For example a
                                 // connection timeout or no route to host.
        REFUSE_ActivityId  = 5;  // The network connection was refused. For example an
                                 // attempt to connect to a server port which is not open.
        TRAFFIC_ActivityId = 6;  // Network traffic report.
        OTHER_ActivityId   = 99;
    }
    enum AuthTypeId {
        UNKNOWN_AuthTypeId              = 0; 
        CERTIFICATE_BASED_AuthTypeId    = 1;  // Authentication using digital
                                              // certificates.
        GSSAPI_AuthTypeId               = 2;  // GSSAPI for centralized authentication.
        HOST_BASED_AuthTypeId           = 3;  // Authentication based on the client host's
                                              // identity.
        KEYBOARD_INTERACTIVE_AuthTypeId = 4;  // Multi-step, interactive authentication.
        PASSWORD_AuthTypeId             = 5;  // Password Authentication.
        PUBLIC_KEY_AuthTypeId           = 6;  // Paired public key authentication.
        OTHER_AuthTypeId                = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        SSH_ACTIVITY_ClassUid = 4007;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    string auth_type = 9;
    AuthTypeId auth_type_id = 10;
    repeated Authorization authorizations = 11;
    string category_name = 12;
    CategoryUid category_uid = 13;
    string class_name = 14;
    ClassUid class_uid = 15;
    Hassh client_hassh = 16;
    Cloud cloud = 17;
    NetworkConnectionInfo connection_info = 18;
    int32 count = 19;
    Device device = 20;
    string disposition = 21;
    DispositionId disposition_id = 22;
    NetworkEndpoint dst_endpoint = 23;
    int32 duration = 24;
    int64 end_time = 25;
    google.protobuf.Timestamp end_time_dt = 26;
    repeated Enrichment enrichments = 27;
    File file = 28;
    FirewallRule firewall_rule = 29;
    LoadBalancer load_balancer = 30;
    repeated Malware malware = 31;
    string message = 32;
    Metadata metadata = 33;
    repeated Observable observables = 34;
    string protocol_ver = 35;
    NetworkProxy proxy = 36;
    NetworkConnectionInfo proxy_connection_info = 37;
    NetworkProxy proxy_endpoint = 38;
    HttpRequest proxy_http_request = 39;
    HttpResponse proxy_http_response = 40;
    Tls proxy_tls = 41;
    NetworkTraffic proxy_traffic = 42;
    string raw_data = 43;
    Hassh server_hassh = 44;
    string severity = 45;
    SeverityId severity_id = 46;
    NetworkEndpoint src_endpoint = 47;
    int64 start_time = 48;
    google.protobuf.Timestamp start_time_dt = 49;
    string status = 50;
    string status_code = 51;
    string status_detail = 52;
    StatusId status_id = 53;
    int64 time = 54;
    google.protobuf.Timestamp time_dt = 55;
    int32 timezone_offset = 56;
    Tls tls = 57;
    NetworkTraffic traffic = 58;
    string type_name = 59;
    int64 type_uid = 60;
    GenericObject unmapped = 61;
}

// FtpActivity is an OSF event in category "Network Activity"
// called FTP Activity
// defined in io.ocsf events/network/ftp.json
//
// File Transfer Protocol (FTP) Activity events report file transfers between
// a server and a client as seen on the network.
message FtpActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        PUT_ActivityId     = 1;  // File upload to the FTP or SFTP site.
        GET_ActivityId     = 2;  // File download from the FTP or SFTP site.
        POLL_ActivityId    = 3;  // Poll directory for specific file(s) or folder(s) at
                                 // the FTP or SFTP site location.
        DELETE_ActivityId  = 4;  // Delete file(s) from the FTP or SFTP site.
        RENAME_ActivityId  = 5;  // Rename the file(s) in the FTP or SFTP site.
        LIST_ActivityId    = 6;  // List files in a specified directory.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        FTP_ACTIVITY_ClassUid = 4008;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    repeated int32 codes = 15;
    string command = 16;
    repeated string command_responses = 17;
    NetworkConnectionInfo connection_info = 18;
    int32 count = 19;
    Device device = 20;
    string disposition = 21;
    DispositionId disposition_id = 22;
    NetworkEndpoint dst_endpoint = 23;
    int32 duration = 24;
    int64 end_time = 25;
    google.protobuf.Timestamp end_time_dt = 26;
    repeated Enrichment enrichments = 27;
    File file = 28;
    FirewallRule firewall_rule = 29;
    LoadBalancer load_balancer = 30;
    repeated Malware malware = 31;
    string message = 32;
    Metadata metadata = 33;
    string name = 34;
    repeated Observable observables = 35;
    int32 port = 36;
    NetworkProxy proxy = 37;
    NetworkConnectionInfo proxy_connection_info = 38;
    NetworkProxy proxy_endpoint = 39;
    HttpRequest proxy_http_request = 40;
    HttpResponse proxy_http_response = 41;
    Tls proxy_tls = 42;
    NetworkTraffic proxy_traffic = 43;
    string raw_data = 44;
    string severity = 45;
    SeverityId severity_id = 46;
    NetworkEndpoint src_endpoint = 47;
    int64 start_time = 48;
    google.protobuf.Timestamp start_time_dt = 49;
    string status = 50;
    string status_code = 51;
    string status_detail = 52;
    StatusId status_id = 53;
    int64 time = 54;
    google.protobuf.Timestamp time_dt = 55;
    int32 timezone_offset = 56;
    Tls tls = 57;
    NetworkTraffic traffic = 58;
    string type = 59;
    string type_name = 60;
    int64 type_uid = 61;
    GenericObject unmapped = 62;
}

// EmailActivity is an OSF event in category "Network Activity"
// called Email Activity
// defined in io.ocsf events/network/email.json
//
// Email events report activities of emails.
message EmailActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        SEND_ActivityId    = 1; 
        RECEIVE_ActivityId = 2; 
        SCAN_ActivityId    = 3;  // Email being scanned (example: security scanning)
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid        = 0;   
        EMAIL_ACTIVITY_ClassUid = 4009;
    }
    enum DirectionId {
        UNKNOWN_DirectionId  = 0;  // The email direction is unknown.
        INBOUND_DirectionId  = 1;  // Email Inbound, from the Internet or outside network
                                   // destined for an entity inside network.
        OUTBOUND_DirectionId = 2;  // Email Outbound, from inside the network destined for
                                   // an entity outside network.
        INTERNAL_DirectionId = 3;  // Email Internal, from inside the network destined for
                                   // an entity inside network.
        OTHER_DirectionId    = 99;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    int32 attempt = 8;
    repeated Authorization authorizations = 9;
    string banner = 10;
    string category_name = 11;
    CategoryUid category_uid = 12;
    string class_name = 13;
    ClassUid class_uid = 14;
    Cloud cloud = 15;
    int32 count = 16;
    Device device = 17;
    string direction = 18;
    DirectionId direction_id = 19;
    string disposition = 20;
    DispositionId disposition_id = 21;
    NetworkEndpoint dst_endpoint = 22;
    int32 duration = 23;
    Email email = 24;
    EmailAuth email_auth = 25;
    int64 end_time = 26;
    google.protobuf.Timestamp end_time_dt = 27;
    repeated Enrichment enrichments = 28;
    FirewallRule firewall_rule = 29;
    repeated Malware malware = 30;
    string message = 31;
    Metadata metadata = 32;
    repeated Observable observables = 33;
    string raw_data = 34;
    string severity = 35;
    SeverityId severity_id = 36;
    string smtp_hello = 37;
    NetworkEndpoint src_endpoint = 38;
    int64 start_time = 39;
    google.protobuf.Timestamp start_time_dt = 40;
    string status = 41;
    string status_code = 42;
    string status_detail = 43;
    StatusId status_id = 44;
    int64 time = 45;
    google.protobuf.Timestamp time_dt = 46;
    int32 timezone_offset = 47;
    string type_name = 48;
    int64 type_uid = 49;
    GenericObject unmapped = 50;
}

// NetworkFileActivity is an OSF event in category "Network Activity"
// called Network File Activity
// defined in io.ocsf events/network/file_activity.json
//
// Network File Activity events report file activities traversing the network,
// including file storage services such as Box, MS OneDrive, or Google Drive.
message NetworkFileActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId  = 0; 
        UPLOAD_ActivityId   = 1;  // Upload a file.
        DOWNLOAD_ActivityId = 2;  // Download a file.
        UPDATE_ActivityId   = 3;  // Update a file.
        DELETE_ActivityId   = 4;  // Delete a file.
        RENAME_ActivityId   = 5;  // Rename a file.
        COPY_ActivityId     = 6;  // Copy a file.
        MOVE_ActivityId     = 7;  // Move a file.
        RESTORE_ActivityId  = 8;  // Restore a file.
        PREVIEW_ActivityId  = 9;  // Preview a file.
        LOCK_ActivityId     = 10; // Lock a file.
        UNLOCK_ActivityId   = 11; // Unlock a file.
        SHARE_ActivityId    = 12; // Share a file.
        UNSHARE_ActivityId  = 13; // Unshare a file.
        OPEN_ActivityId     = 14; // Open a file.
        SYNC_ActivityId     = 15; // Mark a file or folder to sync with a computer.
        UNSYNC_ActivityId   = 16; // Mark a file or folder to not sync with a computer.
        OTHER_ActivityId    = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;   
        NETWORK_FILE_ACTIVITY_ClassUid = 4010;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    NetworkConnectionInfo connection_info = 15;
    int32 count = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    NetworkEndpoint dst_endpoint = 20;
    int32 duration = 21;
    int64 end_time = 22;
    google.protobuf.Timestamp end_time_dt = 23;
    repeated Enrichment enrichments = 24;
    int64 expiration_time = 25;
    google.protobuf.Timestamp expiration_time_dt = 26;
    File file = 27;
    FirewallRule firewall_rule = 28;
    LoadBalancer load_balancer = 29;
    repeated Malware malware = 30;
    string message = 31;
    Metadata metadata = 32;
    repeated Observable observables = 33;
    NetworkProxy proxy = 34;
    NetworkConnectionInfo proxy_connection_info = 35;
    NetworkProxy proxy_endpoint = 36;
    HttpRequest proxy_http_request = 37;
    HttpResponse proxy_http_response = 38;
    Tls proxy_tls = 39;
    NetworkTraffic proxy_traffic = 40;
    string raw_data = 41;
    string severity = 42;
    SeverityId severity_id = 43;
    NetworkEndpoint src_endpoint = 44;
    int64 start_time = 45;
    google.protobuf.Timestamp start_time_dt = 46;
    string status = 47;
    string status_code = 48;
    string status_detail = 49;
    StatusId status_id = 50;
    int64 time = 51;
    google.protobuf.Timestamp time_dt = 52;
    int32 timezone_offset = 53;
    Tls tls = 54;
    NetworkTraffic traffic = 55;
    string type_name = 56;
    int64 type_uid = 57;
    GenericObject unmapped = 58;
}

// EmailFileActivity is an OSF event in category "Network Activity"
// called Email File Activity
// defined in io.ocsf events/network/email_file.json
//
// Email File Activity events report files within emails.
message EmailFileActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        SEND_ActivityId    = 1; 
        RECEIVE_ActivityId = 2; 
        SCAN_ActivityId    = 3;  // Email file being scanned (example: security scanning).
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid             = 0;   
        EMAIL_FILE_ACTIVITY_ClassUid = 4011;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    string email_uid = 19;
    int64 end_time = 20;
    google.protobuf.Timestamp end_time_dt = 21;
    repeated Enrichment enrichments = 22;
    File file = 23;
    FirewallRule firewall_rule = 24;
    repeated Malware malware = 25;
    string message = 26;
    Metadata metadata = 27;
    repeated Observable observables = 28;
    string raw_data = 29;
    string severity = 30;
    SeverityId severity_id = 31;
    int64 start_time = 32;
    google.protobuf.Timestamp start_time_dt = 33;
    string status = 34;
    string status_code = 35;
    string status_detail = 36;
    StatusId status_id = 37;
    int64 time = 38;
    google.protobuf.Timestamp time_dt = 39;
    int32 timezone_offset = 40;
    string type_name = 41;
    int64 type_uid = 42;
    GenericObject unmapped = 43;
}

// EmailUrlActivity is an OSF event in category "Network Activity"
// called Email URL Activity
// defined in io.ocsf events/network/email_url.json
//
// Email URL Activity events report URLs within an email.
message EmailUrlActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        SEND_ActivityId    = 1; 
        RECEIVE_ActivityId = 2; 
        SCAN_ActivityId    = 3;  // Email URL being scanned (example: security scanning).
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid            = 0;   
        EMAIL_URL_ACTIVITY_ClassUid = 4012;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    int32 duration = 18;
    string email_uid = 19;
    int64 end_time = 20;
    google.protobuf.Timestamp end_time_dt = 21;
    repeated Enrichment enrichments = 22;
    FirewallRule firewall_rule = 23;
    repeated Malware malware = 24;
    string message = 25;
    Metadata metadata = 26;
    repeated Observable observables = 27;
    string raw_data = 28;
    string severity = 29;
    SeverityId severity_id = 30;
    int64 start_time = 31;
    google.protobuf.Timestamp start_time_dt = 32;
    string status = 33;
    string status_code = 34;
    string status_detail = 35;
    StatusId status_id = 36;
    int64 time = 37;
    google.protobuf.Timestamp time_dt = 38;
    int32 timezone_offset = 39;
    string type_name = 40;
    int64 type_uid = 41;
    GenericObject unmapped = 42;
    Url url = 43;
}

// NtpActivity is an OSF event in category "Network Activity"
// called NTP Activity
// defined in io.ocsf events/network/ntp.json
//
// The Network Time Protocol (NTP) Activity events report instances of remote
// clients synchronizing their clocks with an NTP server, as observed on the
// network.
message NtpActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId                    = 0;  // Not used in standard NTP
                                                    // implementations.
        SYMMETRIC_ACTIVE_EXCHANGE_ActivityId  = 1;  // Bidirectional time exchange between
                                                    // devices.
        SYMMETRIC_PASSIVE_RESPONSE_ActivityId = 2;  // Device responds as a server to
                                                    // peers in symmetric active mode.
        CLIENT_SYNCHRONIZATION_ActivityId     = 3;  // NTP client, syncs with servers.
        SERVER_RESPONSE_ActivityId            = 4;  // Dedicated NTP time server, responds
                                                    // to clients.
        BROADCAST_ActivityId                  = 5;  // Broadcast time info to network
                                                    // devices.
        CONTROL_ActivityId                    = 6;  // Monitoring and control messaging.
        PRIVATE_USE_CASE_ActivityId           = 7;  // Reserved - Not defined in standard
                                                    // NTP specifications.
        OTHER_ActivityId                      = 99; // The event activity is not mapped.
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        NTP_ACTIVITY_ClassUid = 4013;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    enum StratumId {
        UNKNOWN_StratumId          = 0;  // Unspecified or invalid.
        PRIMARY_SERVER_StratumId   = 1;  // The highest precision primary server (e.g
                                         // atomic clock or GPS).
        SECONDARY_SERVER_StratumId = 2;  // A secondary level server (possible values: 2-
                                         // 15).
        UNSYNCHRONIZED_StratumId   = 16;
        RESERVED_StratumId         = 17; // Reserved stratum (possible values: 17-255).
        OTHER_StratumId            = 99; // The stratum level is not mapped. See the
                                         // <code>stratum</code> attribute, which contains
                                         // a data source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    NetworkConnectionInfo connection_info = 15;
    int32 count = 16;
    int32 delay = 17;
    Device device = 18;
    int32 dispersion = 19;
    string disposition = 20;
    DispositionId disposition_id = 21;
    NetworkEndpoint dst_endpoint = 22;
    int32 duration = 23;
    int64 end_time = 24;
    google.protobuf.Timestamp end_time_dt = 25;
    repeated Enrichment enrichments = 26;
    FirewallRule firewall_rule = 27;
    LoadBalancer load_balancer = 28;
    repeated Malware malware = 29;
    string message = 30;
    Metadata metadata = 31;
    repeated Observable observables = 32;
    int32 precision = 33;
    NetworkProxy proxy = 34;
    NetworkConnectionInfo proxy_connection_info = 35;
    NetworkProxy proxy_endpoint = 36;
    HttpRequest proxy_http_request = 37;
    HttpResponse proxy_http_response = 38;
    Tls proxy_tls = 39;
    NetworkTraffic proxy_traffic = 40;
    string raw_data = 41;
    string severity = 42;
    SeverityId severity_id = 43;
    NetworkEndpoint src_endpoint = 44;
    int64 start_time = 45;
    google.protobuf.Timestamp start_time_dt = 46;
    string status = 47;
    string status_code = 48;
    string status_detail = 49;
    StatusId status_id = 50;
    string stratum = 51;
    StratumId stratum_id = 52;
    int64 time = 53;
    google.protobuf.Timestamp time_dt = 54;
    int32 timezone_offset = 55;
    Tls tls = 56;
    NetworkTraffic traffic = 57;
    string type_name = 58;
    int64 type_uid = 59;
    GenericObject unmapped = 60;
    string version = 61;
}

// TunnelActivity is an OSF event in category "Network Activity"
// called Tunnel Activity
// defined in io.ocsf events/network/tunnel_activity.json
//
// Tunnel Activity events report secure tunnel establishment (such as VPN),
// teardowns, renewals, and other network tunnel specific actions.
message TunnelActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0;  // The event activity is unknown.
        OPEN_ActivityId    = 1;  // Open a tunnel.
        CLOSE_ActivityId   = 2;  // Close a tunnel.
        RENEW_ActivityId   = 3;  // Renew a tunnel.
        OTHER_ActivityId   = 99; // The event activity is not mapped. See the
                                 // <code>activity_name</code> attribute, which contains a
                                 // data source specific value.
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid          = 0;
        NETWORK_ACTIVITY_CategoryUid = 4;
    }
    enum ClassUid {
        UNKNOWN_ClassUid         = 0;   
        TUNNEL_ACTIVITY_ClassUid = 4014;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    enum TunnelTypeId {
        UNKNOWN_TunnelTypeId      = 0; 
        SPLIT_TUNNEL_TunnelTypeId = 1; 
        FULL_TUNNEL_TunnelTypeId  = 2; 
        OTHER_TunnelTypeId        = 99;
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    string app_name = 7;
    repeated Attack attacks = 8;
    repeated Authorization authorizations = 9;
    string category_name = 10;
    CategoryUid category_uid = 11;
    string class_name = 12;
    ClassUid class_uid = 13;
    Cloud cloud = 14;
    NetworkConnectionInfo connection_info = 15;
    int32 count = 16;
    Device device = 17;
    string disposition = 18;
    DispositionId disposition_id = 19;
    NetworkEndpoint dst_endpoint = 20;
    int32 duration = 21;
    int64 end_time = 22;
    google.protobuf.Timestamp end_time_dt = 23;
    repeated Enrichment enrichments = 24;
    FirewallRule firewall_rule = 25;
    LoadBalancer load_balancer = 26;
    repeated Malware malware = 27;
    string message = 28;
    Metadata metadata = 29;
    repeated Observable observables = 30;
    string protocol_name = 31;
    NetworkProxy proxy = 32;
    NetworkConnectionInfo proxy_connection_info = 33;
    NetworkProxy proxy_endpoint = 34;
    HttpRequest proxy_http_request = 35;
    HttpResponse proxy_http_response = 36;
    Tls proxy_tls = 37;
    NetworkTraffic proxy_traffic = 38;
    string raw_data = 39;
    Session session = 40;
    string severity = 41;
    SeverityId severity_id = 42;
    NetworkEndpoint src_endpoint = 43;
    int64 start_time = 44;
    google.protobuf.Timestamp start_time_dt = 45;
    string status = 46;
    string status_code = 47;
    string status_detail = 48;
    StatusId status_id = 49;
    int64 time = 50;
    google.protobuf.Timestamp time_dt = 51;
    int32 timezone_offset = 52;
    Tls tls = 53;
    NetworkTraffic traffic = 54;
    NetworkInterface tunnel_interface = 55;
    string tunnel_type = 56;
    TunnelTypeId tunnel_type_id = 57;
    string type_name = 58;
    int64 type_uid = 59;
    GenericObject unmapped = 60;
    User user = 61;
}

// InventoryInfo is an OSF event in category "Discovery"
// called Device Inventory Info
// defined in io.ocsf events/discovery/inventory_info.json
//
// Device Inventory Info events report device inventory data that is either
// logged or proactively collected. For example, when collecting device
// information from a CMDB or running a network sweep of connected devices.
message InventoryInfo {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOG_ActivityId     = 1;  // The discovered information is via a log.
        COLLECT_ActivityId = 2;  // The discovered information is via a collection
                                 // process.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;   
        DEVICE_INVENTORY_INFO_ClassUid = 5001;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    string raw_data = 19;
    string severity = 20;
    SeverityId severity_id = 21;
    int64 start_time = 22;
    google.protobuf.Timestamp start_time_dt = 23;
    string status = 24;
    string status_code = 25;
    string status_detail = 26;
    StatusId status_id = 27;
    int64 time = 28;
    google.protobuf.Timestamp time_dt = 29;
    int32 timezone_offset = 30;
    string type_name = 31;
    int64 type_uid = 32;
    GenericObject unmapped = 33;
}

// ConfigState is an OSF event in category "Discovery"
// called Device Config State
// defined in io.ocsf events/discovery/config_state.json
//
// Device Config State events report device configuration data and CIS
// Benchmark results.
message ConfigState {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOG_ActivityId     = 1;  // The discovered information is via a log.
        COLLECT_ActivityId = 2;  // The discovered information is via a collection
                                 // process.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid             = 0;   
        DEVICE_CONFIG_STATE_ClassUid = 5002;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    CisBenchmarkResult cis_benchmark_result = 7;
    string class_name = 8;
    ClassUid class_uid = 9;
    Cloud cloud = 10;
    int32 count = 11;
    Device device = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    string raw_data = 20;
    string severity = 21;
    SeverityId severity_id = 22;
    int64 start_time = 23;
    google.protobuf.Timestamp start_time_dt = 24;
    string status = 25;
    string status_code = 26;
    string status_detail = 27;
    StatusId status_id = 28;
    int64 time = 29;
    google.protobuf.Timestamp time_dt = 30;
    int32 timezone_offset = 31;
    string type_name = 32;
    int64 type_uid = 33;
    GenericObject unmapped = 34;
}

// UserInventory is an OSF event in category "Discovery"
// called User Inventory Info
// defined in io.ocsf events/discovery/user_inventory.json
//
// User Inventory Info events report user inventory data that is either logged
// or proactively collected. For example, when collecting user information
// from Active Directory entries.
message UserInventory {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOG_ActivityId     = 1;  // The discovered information is via a log.
        COLLECT_ActivityId = 2;  // The discovered information is via a collection
                                 // process.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid             = 0;   
        USER_INVENTORY_INFO_ClassUid = 5003;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    int32 duration = 11;
    int64 end_time = 12;
    google.protobuf.Timestamp end_time_dt = 13;
    repeated Enrichment enrichments = 14;
    string message = 15;
    Metadata metadata = 16;
    repeated Observable observables = 17;
    string raw_data = 18;
    string severity = 19;
    SeverityId severity_id = 20;
    int64 start_time = 21;
    google.protobuf.Timestamp start_time_dt = 22;
    string status = 23;
    string status_code = 24;
    string status_detail = 25;
    StatusId status_id = 26;
    int64 time = 27;
    google.protobuf.Timestamp time_dt = 28;
    int32 timezone_offset = 29;
    string type_name = 30;
    int64 type_uid = 31;
    GenericObject unmapped = 32;
    User user = 33;
}

// RegistryKeyQuery is an OSF event in category "Discovery"
// called Registry Key Query
// defined in win events/registry_key_query.json
//
// Registry Key Query events report information about discovered Windows
// registry keys.
message RegistryKeyQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid            = 0;     
        REGISTRY_KEY_QUERY_ClassUid = 205004;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    QueryInfo query_info = 19;
    string query_result = 20;
    QueryResultId query_result_id = 21;
    string raw_data = 22;
    string severity = 23;
    SeverityId severity_id = 24;
    int64 start_time = 25;
    google.protobuf.Timestamp start_time_dt = 26;
    string status = 27;
    string status_code = 28;
    string status_detail = 29;
    StatusId status_id = 30;
    int64 time = 31;
    google.protobuf.Timestamp time_dt = 32;
    int32 timezone_offset = 33;
    string type_name = 34;
    int64 type_uid = 35;
    GenericObject unmapped = 36;
    RegKey reg_key = 2001;
}

// PatchState is an OSF event in category "Discovery"
// called Operating System Patch State
// defined in io.ocsf events/discovery/patch_state.json
//
// Operating System Patch State reports the installation of an OS patch to a
// device and any associated knowledgebase articles.
message PatchState {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOG_ActivityId     = 1;  // The discovered information is via a log.
        COLLECT_ActivityId = 2;  // The discovered information is via a collection
                                 // process.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                      = 0;   
        OPERATING_SYSTEM_PATCH_STATE_ClassUid = 5004;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Api api = 3;
    string category_name = 4;
    CategoryUid category_uid = 5;
    string class_name = 6;
    ClassUid class_uid = 7;
    Cloud cloud = 8;
    int32 count = 9;
    Device device = 10;
    int32 duration = 11;
    int64 end_time = 12;
    google.protobuf.Timestamp end_time_dt = 13;
    repeated Enrichment enrichments = 14;
    repeated KbArticle kb_article_list = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    string raw_data = 19;
    string severity = 20;
    SeverityId severity_id = 21;
    int64 start_time = 22;
    google.protobuf.Timestamp start_time_dt = 23;
    string status = 24;
    string status_code = 25;
    string status_detail = 26;
    StatusId status_id = 27;
    int64 time = 28;
    google.protobuf.Timestamp time_dt = 29;
    int32 timezone_offset = 30;
    string type_name = 31;
    int64 type_uid = 32;
    GenericObject unmapped = 33;
}

// RegistryValueQuery is an OSF event in category "Discovery"
// called Registry Value Query
// defined in win events/registry_value_query.json
//
// Registry Value Query events report information about discovered Windows
// registry values.
message RegistryValueQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid              = 0;     
        REGISTRY_VALUE_QUERY_ClassUid = 205005;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    QueryInfo query_info = 19;
    string query_result = 20;
    QueryResultId query_result_id = 21;
    string raw_data = 22;
    string severity = 23;
    SeverityId severity_id = 24;
    int64 start_time = 25;
    google.protobuf.Timestamp start_time_dt = 26;
    string status = 27;
    string status_code = 28;
    string status_detail = 29;
    StatusId status_id = 30;
    int64 time = 31;
    google.protobuf.Timestamp time_dt = 32;
    int32 timezone_offset = 33;
    string type_name = 34;
    int64 type_uid = 35;
    GenericObject unmapped = 36;
    RegValue reg_value = 2001;
}

// KernelObjectQuery is an OSF event in category "Discovery"
// called Kernel Object Query
// defined in io.ocsf events/discovery/kernel_object_query.json
//
// Kernel Object Query events report information about discovered kernel
// resources.
message KernelObjectQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid             = 0;   
        KERNEL_OBJECT_QUERY_ClassUid = 5006;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    Kernel kernel = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// FileQuery is an OSF event in category "Discovery"
// called File Query
// defined in io.ocsf events/discovery/file_query.json
//
// File Query events report information about files that are present on the
// system.
message FileQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid    = 0;   
        FILE_QUERY_ClassUid = 5007;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    File file = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// FolderQuery is an OSF event in category "Discovery"
// called Folder Query
// defined in io.ocsf events/discovery/folder_query.json
//
// Folder Query events report information about folders that are present on
// the system.
message FolderQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        FOLDER_QUERY_ClassUid = 5008;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    File folder = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// AdminGroupQuery is an OSF event in category "Discovery"
// called Admin Group Query
// defined in io.ocsf events/discovery/group_query.json
//
// Admin Group Query events report information about administrative groups.
message AdminGroupQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid           = 0;   
        ADMIN_GROUP_QUERY_ClassUid = 5009;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    Group group = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
    repeated User users = 38;
}

// JobQuery is an OSF event in category "Discovery"
// called Job Query
// defined in io.ocsf events/discovery/job_query.json
//
// Job Query events report information about scheduled jobs.
message JobQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid   = 0;   
        JOB_QUERY_ClassUid = 5010;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    Job job = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// ModuleQuery is an OSF event in category "Discovery"
// called Module Query
// defined in io.ocsf events/discovery/module_query.json
//
// Module Query events report information about loaded modules.
message ModuleQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        MODULE_QUERY_ClassUid = 5011;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    Module module = 18;
    repeated Observable observables = 19;
    Process process = 20;
    QueryInfo query_info = 21;
    string query_result = 22;
    QueryResultId query_result_id = 23;
    string raw_data = 24;
    string severity = 25;
    SeverityId severity_id = 26;
    int64 start_time = 27;
    google.protobuf.Timestamp start_time_dt = 28;
    string status = 29;
    string status_code = 30;
    string status_detail = 31;
    StatusId status_id = 32;
    int64 time = 33;
    google.protobuf.Timestamp time_dt = 34;
    int32 timezone_offset = 35;
    string type_name = 36;
    int64 type_uid = 37;
    GenericObject unmapped = 38;
}

// NetworkConnectionQuery is an OSF event in category "Discovery"
// called Network Connection Query
// defined in io.ocsf events/discovery/network_connection_query.json
//
// Network Connection Query events report information about active network
// connections.
message NetworkConnectionQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                  = 0;   
        NETWORK_CONNECTION_QUERY_ClassUid = 5012;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StateId {
        UNKNOWN_StateId     = 0;  // The socket state is unknown.
        ESTABLISHED_StateId = 1;  // The socket has an established connection between a
                                  // local application and a remote peer.
        SYN_SENT_StateId    = 2;  // The socket is actively trying to establish a
                                  // connection to a remote peer.
        SYN_RECV_StateId    = 3;  // The socket has passively received a connection
                                  // request from a remote peer.
        FIN_WAIT1_StateId   = 4;  // The socket connection has been closed by the local
                                  // application, the remote peer has not yet acknowledged
                                  // the close, and the system is waiting for it to close
                                  // its half of the connection.
        FIN_WAIT2_StateId   = 5;  // The socket connection has been closed by the local
                                  // application, the remote peer has acknowledged the
                                  // close, and the system is waiting for it to close its
                                  // half of the connection.
        TIME_WAIT_StateId   = 6;  // The socket connection has been closed by the local
                                  // application, the remote peer has closed its half of
                                  // the connection, and the system is waiting to be sure
                                  // that the remote peer received the last
                                  // acknowledgement.
        CLOSED_StateId      = 7;  // The socket is not in use.
        CLOSE_WAIT_StateId  = 8;  // The socket connection has been closed by the remote
                                  // peer, and the system is waiting for the local
                                  // application to close its half of the connection.
        LAST_ACK_StateId    = 9;  // The socket connection has been closed by the remote
                                  // peer, the local application has closed its half of
                                  // the connection, and the system is waiting for the
                                  // remote peer to acknowledge the close.
        LISTEN_StateId      = 10; // The socket is listening for incoming connections.
        CLOSING_StateId     = 11; // The socket connection has been closed by the local
                                  // application and the remote peer simultaneously, and
                                  // the remote peer has not yet acknowledged the close
                                  // attempt of the local application.
        OTHER_StateId       = 99; // The state is not mapped. See the <code>state</code>
                                  // attribute, which contains a data source specific
                                  // value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    NetworkConnectionInfo connection_info = 10;
    int32 count = 11;
    Device device = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    Process process = 20;
    QueryInfo query_info = 21;
    string query_result = 22;
    QueryResultId query_result_id = 23;
    string raw_data = 24;
    string severity = 25;
    SeverityId severity_id = 26;
    int64 start_time = 27;
    google.protobuf.Timestamp start_time_dt = 28;
    string state = 29;
    StateId state_id = 30;
    string status = 31;
    string status_code = 32;
    string status_detail = 33;
    StatusId status_id = 34;
    int64 time = 35;
    google.protobuf.Timestamp time_dt = 36;
    int32 timezone_offset = 37;
    string type_name = 38;
    int64 type_uid = 39;
    GenericObject unmapped = 40;
}

// NetworksQuery is an OSF event in category "Discovery"
// called Networks Query
// defined in io.ocsf events/discovery/networks_query.json
//
// Networks Query events report information about network adapters.
message NetworksQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid        = 0;   
        NETWORKS_QUERY_ClassUid = 5013;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated NetworkInterface network_interfaces = 18;
    repeated Observable observables = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// PeripheralDeviceQuery is an OSF event in category "Discovery"
// called Peripheral Device Query
// defined in io.ocsf events/discovery/peripheral_device_query.json
//
// Peripheral Device Query events report information about peripheral devices.
message PeripheralDeviceQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                 = 0;   
        PERIPHERAL_DEVICE_QUERY_ClassUid = 5014;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    PeripheralDevice peripheral_device = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// ProcessQuery is an OSF event in category "Discovery"
// called Process Query
// defined in io.ocsf events/discovery/process_query.json
//
// Process Query events report information about running processes.
message ProcessQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid       = 0;   
        PROCESS_QUERY_ClassUid = 5015;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    Process process = 19;
    QueryInfo query_info = 20;
    string query_result = 21;
    QueryResultId query_result_id = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// ServiceQuery is an OSF event in category "Discovery"
// called Service Query
// defined in io.ocsf events/discovery/service_query.json
//
// Service Query events report information about running services.
message ServiceQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid       = 0;   
        SERVICE_QUERY_ClassUid = 5016;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    QueryInfo query_info = 19;
    string query_result = 20;
    QueryResultId query_result_id = 21;
    string raw_data = 22;
    Service service = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// SessionQuery is an OSF event in category "Discovery"
// called User Session Query
// defined in io.ocsf events/discovery/session_query.json
//
// User Session Query events report information about existing user sessions.
message SessionQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid            = 0;   
        USER_SESSION_QUERY_ClassUid = 5017;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    QueryInfo query_info = 19;
    string query_result = 20;
    QueryResultId query_result_id = 21;
    string raw_data = 22;
    Session session = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    int64 start_time = 26;
    google.protobuf.Timestamp start_time_dt = 27;
    string status = 28;
    string status_code = 29;
    string status_detail = 30;
    StatusId status_id = 31;
    int64 time = 32;
    google.protobuf.Timestamp time_dt = 33;
    int32 timezone_offset = 34;
    string type_name = 35;
    int64 type_uid = 36;
    GenericObject unmapped = 37;
}

// UserQuery is an OSF event in category "Discovery"
// called User Query
// defined in io.ocsf events/discovery/user_query.json
//
// User Query events report user data that have been discovered, queried,
// polled or searched. This event differs from User Inventory as it describes
// the result of a targeted search by filtering a subset of user attributes.
message UserQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid    = 0;   
        USER_QUERY_ClassUid = 5018;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    QueryInfo query_info = 19;
    string query_result = 20;
    QueryResultId query_result_id = 21;
    string raw_data = 22;
    string severity = 23;
    SeverityId severity_id = 24;
    int64 start_time = 25;
    google.protobuf.Timestamp start_time_dt = 26;
    string status = 27;
    string status_code = 28;
    string status_detail = 29;
    StatusId status_id = 30;
    int64 time = 31;
    google.protobuf.Timestamp time_dt = 32;
    int32 timezone_offset = 33;
    string type_name = 34;
    int64 type_uid = 35;
    GenericObject unmapped = 36;
    User user = 37;
}

// PrefetchQuery is an OSF event in category "Discovery"
// called Prefetch Query
// defined in win events/prefetch_query.json
//
// Prefetch Query events report information about Windows prefetch files.
message PrefetchQuery {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        QUERY_ActivityId   = 1;  // The discovered results are via a query request.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid        = 0;     
        PREFETCH_QUERY_ClassUid = 205019;
    }
    enum QueryResultId {
        UNKNOWN_QueryResultId        = 0;  // The query result is unknown.
        EXISTS_QueryResultId         = 1;  // The target was found.
        PARTIAL_QueryResultId        = 2;  // The target was partially found.
        DOES_NOT_EXIST_QueryResultId = 3;  // The target was not found.
        ERROR_QueryResultId          = 4;  // The discovery attempt failed.
        UNSUPPORTED_QueryResultId    = 5;  // Discovery of the target was not supported.
        OTHER_QueryResultId          = 99; // The query result is not mapped. See the
                                           // <code>query_result</code> attribute, which
                                           // contains a data source specific value.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    int64 last_run_time = 16;
    google.protobuf.Timestamp last_run_time_dt = 17;
    string message = 18;
    Metadata metadata = 19;
    string name = 20;
    repeated Observable observables = 21;
    QueryInfo query_info = 22;
    string query_result = 23;
    QueryResultId query_result_id = 24;
    string raw_data = 25;
    string severity = 26;
    SeverityId severity_id = 27;
    int64 start_time = 28;
    google.protobuf.Timestamp start_time_dt = 29;
    string status = 30;
    string status_code = 31;
    string status_detail = 32;
    StatusId status_id = 33;
    int64 time = 34;
    google.protobuf.Timestamp time_dt = 35;
    int32 timezone_offset = 36;
    string type_name = 37;
    int64 type_uid = 38;
    GenericObject unmapped = 39;
    int32 run_count = 2001;
}

// DeviceConfigStateChange is an OSF event in category "Discovery"
// called Device Config State Change
// defined in io.ocsf events/discovery/device_config_state_change.json
//
// Device Config State Change events report state changes that impact the
// security of the device.
message DeviceConfigStateChange {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        LOG_ActivityId     = 1;  // The discovered information is via a log.
        COLLECT_ActivityId = 2;  // The discovered information is via a collection
                                 // process.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid   = 0;
        DISCOVERY_CategoryUid = 5;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                    = 0;   
        DEVICE_CONFIG_STATE_CHANGE_ClassUid = 5019;
    }
    enum PrevSecurityLevelId {
        UNKNOWN_PrevSecurityLevelId     = 0; 
        SECURE_PrevSecurityLevelId      = 1; 
        AT_RISK_PrevSecurityLevelId     = 2; 
        COMPROMISED_PrevSecurityLevelId = 3; 
        OTHER_PrevSecurityLevelId       = 99; // The security level is not mapped. See the
                                              // <code>prev_security_level</code>
                                              // attribute, which contains data source
                                              // specific values.
    }
    enum SecurityLevelId {
        UNKNOWN_SecurityLevelId     = 0; 
        SECURE_SecurityLevelId      = 1; 
        AT_RISK_SecurityLevelId     = 2; 
        COMPROMISED_SecurityLevelId = 3; 
        OTHER_SecurityLevelId       = 99; // The security level is not mapped. See the
                                          // <code>security_level</code> attribute, which
                                          // contains data source specific values.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    string message = 16;
    Metadata metadata = 17;
    repeated Observable observables = 18;
    string prev_security_level = 19;
    PrevSecurityLevelId prev_security_level_id = 20;
    repeated SecurityState prev_security_states = 21;
    string raw_data = 22;
    string security_level = 23;
    SecurityLevelId security_level_id = 24;
    repeated SecurityState security_states = 25;
    string severity = 26;
    SeverityId severity_id = 27;
    int64 start_time = 28;
    google.protobuf.Timestamp start_time_dt = 29;
    string status = 30;
    string status_code = 31;
    string status_detail = 32;
    StatusId status_id = 33;
    int64 time = 34;
    google.protobuf.Timestamp time_dt = 35;
    int32 timezone_offset = 36;
    string type_name = 37;
    int64 type_uid = 38;
    GenericObject unmapped = 39;
}

// WebResourcesActivity is an OSF event in category "Application Activity"
// called Web Resources Activity
// defined in io.ocsf events/application/web_resources_activity.json
//
// Web Resources Activity events describe actions executed on a set of Web
// Resources.
message WebResourcesActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // One or more web resources were created.
        READ_ActivityId    = 2;  // One or more web resources were read / viewed.
        UPDATE_ActivityId  = 3;  // One or more web resources were updated.
        DELETE_ActivityId  = 4;  // One or more web resources were deleted.
        SEARCH_ActivityId  = 5;  // A search was performed on one or more web resources.
        IMPORT_ActivityId  = 6;  // One or more web resources were imported into an
                                 // Application.
        EXPORT_ActivityId  = 7;  // One or more web resources were exported from an
                                 // Application.
        SHARE_ActivityId   = 8;  // One or more web resources were shared.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                = 0;   
        WEB_RESOURCES_ACTIVITY_ClassUid = 6001;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Device device = 15;
    string disposition = 16;
    DispositionId disposition_id = 17;
    NetworkEndpoint dst_endpoint = 18;
    int32 duration = 19;
    int64 end_time = 20;
    google.protobuf.Timestamp end_time_dt = 21;
    repeated Enrichment enrichments = 22;
    FirewallRule firewall_rule = 23;
    HttpRequest http_request = 24;
    HttpResponse http_response = 25;
    repeated Malware malware = 26;
    string message = 27;
    Metadata metadata = 28;
    repeated Observable observables = 29;
    NetworkConnectionInfo proxy_connection_info = 30;
    NetworkProxy proxy_endpoint = 31;
    HttpRequest proxy_http_request = 32;
    HttpResponse proxy_http_response = 33;
    Tls proxy_tls = 34;
    NetworkTraffic proxy_traffic = 35;
    string raw_data = 36;
    string severity = 37;
    SeverityId severity_id = 38;
    NetworkEndpoint src_endpoint = 39;
    int64 start_time = 40;
    google.protobuf.Timestamp start_time_dt = 41;
    string status = 42;
    string status_code = 43;
    string status_detail = 44;
    StatusId status_id = 45;
    int64 time = 46;
    google.protobuf.Timestamp time_dt = 47;
    int32 timezone_offset = 48;
    Tls tls = 49;
    string type_name = 50;
    int64 type_uid = 51;
    GenericObject unmapped = 52;
    repeated WebResource web_resources = 53;
    repeated WebResource web_resources_result = 54;
}

// ApplicationLifecycle is an OSF event in category "Application Activity"
// called Application Lifecycle
// defined in io.ocsf events/application/application_lifecycle.json
//
// Application Lifecycle events report installation, removal, start, stop of
// an application or service.
message ApplicationLifecycle {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        INSTALL_ActivityId = 1; 
        REMOVE_ActivityId  = 2; 
        START_ActivityId   = 3; 
        STOP_ActivityId    = 4; 
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;   
        APPLICATION_LIFECYCLE_ClassUid = 6002;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    Product app = 5;
    string category_name = 6;
    CategoryUid category_uid = 7;
    string class_name = 8;
    ClassUid class_uid = 9;
    Cloud cloud = 10;
    int32 count = 11;
    Device device = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    string raw_data = 20;
    string severity = 21;
    SeverityId severity_id = 22;
    int64 start_time = 23;
    google.protobuf.Timestamp start_time_dt = 24;
    string status = 25;
    string status_code = 26;
    string status_detail = 27;
    StatusId status_id = 28;
    int64 time = 29;
    google.protobuf.Timestamp time_dt = 30;
    int32 timezone_offset = 31;
    string type_name = 32;
    int64 type_uid = 33;
    GenericObject unmapped = 34;
}

// ApiActivity is an OSF event in category "Application Activity"
// called API Activity
// defined in io.ocsf events/application/api.json
//
// API events describe general CRUD (Create, Read, Update, Delete) API
// activities, e.g. (AWS Cloudtrail)
message ApiActivity {
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        CREATE_ActivityId  = 1;  // The API call in the event pertains to a 'create'
                                 // activity.
        READ_ActivityId    = 2;  // The API call in the event pertains to a 'read'
                                 // activity.
        UPDATE_ActivityId  = 3;  // The API call in the event pertains to a 'update'
                                 // activity.
        DELETE_ActivityId  = 4;  // The API call in the event pertains to a 'delete'
                                 // activity.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid      = 0;   
        API_ACTIVITY_ClassUid = 6003;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    NetworkEndpoint dst_endpoint = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    HttpRequest http_request = 16;
    string message = 17;
    Metadata metadata = 18;
    repeated Observable observables = 19;
    string raw_data = 20;
    repeated ResourceDetails resources = 21;
    string severity = 22;
    SeverityId severity_id = 23;
    NetworkEndpoint src_endpoint = 24;
    int64 start_time = 25;
    google.protobuf.Timestamp start_time_dt = 26;
    string status = 27;
    string status_code = 28;
    string status_detail = 29;
    StatusId status_id = 30;
    int64 time = 31;
    google.protobuf.Timestamp time_dt = 32;
    int32 timezone_offset = 33;
    string type_name = 34;
    int64 type_uid = 35;
    GenericObject unmapped = 36;
}

// WebResourceAccessActivity is an OSF event in category "Application Activity"
// called Web Resource Access Activity
// defined in io.ocsf events/application/web_resource_access_activity.json
//
// Web Resource Access Activity events describe successful/failed attempts to
// access a web resource over HTTP.
message WebResourceAccessActivity {
    enum ActivityId {
        UNKNOWN_ActivityId       = 0; 
        ACCESS_GRANT_ActivityId  = 1;  // The incoming request has permission to the web
                                       // resource.
        ACCESS_DENY_ActivityId   = 2;  // The incoming request does not have permission to
                                       // the web resource.
        ACCESS_REVOKE_ActivityId = 3;  // The incoming request's access has been revoked
                                       // due to security policy enforcements.
        ACCESS_ERROR_ActivityId  = 4;  // An error occurred during processing the request.
        OTHER_ActivityId         = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid                      = 0;   
        WEB_RESOURCE_ACCESS_ACTIVITY_ClassUid = 6004;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    int32 count = 10;
    Device device = 11;
    int32 duration = 12;
    int64 end_time = 13;
    google.protobuf.Timestamp end_time_dt = 14;
    repeated Enrichment enrichments = 15;
    HttpRequest http_request = 16;
    HttpResponse http_response = 17;
    string message = 18;
    Metadata metadata = 19;
    repeated Observable observables = 20;
    NetworkProxy proxy = 21;
    NetworkConnectionInfo proxy_connection_info = 22;
    NetworkProxy proxy_endpoint = 23;
    HttpRequest proxy_http_request = 24;
    HttpResponse proxy_http_response = 25;
    Tls proxy_tls = 26;
    NetworkTraffic proxy_traffic = 27;
    string raw_data = 28;
    string severity = 29;
    SeverityId severity_id = 30;
    NetworkEndpoint src_endpoint = 31;
    int64 start_time = 32;
    google.protobuf.Timestamp start_time_dt = 33;
    string status = 34;
    string status_code = 35;
    string status_detail = 36;
    StatusId status_id = 37;
    int64 time = 38;
    google.protobuf.Timestamp time_dt = 39;
    int32 timezone_offset = 40;
    Tls tls = 41;
    string type_name = 42;
    int64 type_uid = 43;
    GenericObject unmapped = 44;
    repeated WebResource web_resources = 45;
}

// DatastoreActivity is an OSF event in category "Application Activity"
// called Datastore Activity
// defined in io.ocsf events/application/datastore_activity.json
//
// Datastore events describe general activities (Read, Update, Query, Delete,
// etc.) which affect datastores or data within those datastores, e.g. (AWS
// RDS, AWS S3).
message DatastoreActivity {
    enum ActionId {
        UNKNOWN_ActionId = 0;  // The action was unknown. The <code>disposition_id</code>
                               // attribute may still be set to a non-unknown value, for
                               // example 'Count', 'Uncorrected', 'Isolated',
                               // 'Quarantined' or 'Exonerated'.
        ALLOWED_ActionId = 1;  // The activity was allowed. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Allowed', 'Approved', 'Delayed', 'No Action', 'Count'
                               // etc.
        DENIED_ActionId  = 2;  // The attempted activity was denied. The
                               // <code>disposition_id</code> attribute should be set to a
                               // value that conforms to this action, for example
                               // 'Blocked', 'Rejected', 'Quarantined', 'Isolated',
                               // 'Dropped', 'Access Revoked, etc.
        OTHER_ActionId   = 99; // The action was not mapped. See the <code>action</code>
                               // attribute, which contains a data source specific value.
    }
    enum ActivityId {
        UNKNOWN_ActivityId = 0; 
        READ_ActivityId    = 1;  // The 'Read' activity involves accessing specific data
                                 // record details.
        UPDATE_ActivityId  = 2;  // The 'Update' activity pertains to modifying specific
                                 // data record details.
        CONNECT_ActivityId = 3;  // The 'Connect' activity involves establishing a
                                 // connection to the datastore.
        QUERY_ActivityId   = 4;  // The 'Query' activity involves retrieving a filtered
                                 // subset of data based on specific criteria.
        WRITE_ActivityId   = 5;  // The 'Write' activity involves writing specific data
                                 // record details.
        CREATE_ActivityId  = 6;  // The 'Create' activity involves generating new data
                                 // record details.
        DELETE_ActivityId  = 7;  // The 'Delete' activity involves removing specific data
                                 // record details.
        LIST_ActivityId    = 8;  // The 'List' activity provides an overview of existing
                                 // data records.
        ENCRYPT_ActivityId = 9;  // The 'Encrypt' activity involves securing data by
                                 // encrypting a specific data record.
        DECRYPT_ActivityId = 10; // The 'Decrypt' activity involves converting encrypted
                                 // data back to its original format.
        OTHER_ActivityId   = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid            = 0;   
        DATASTORE_ACTIVITY_ClassUid = 6005;
    }
    enum DispositionId {
        UNKNOWN_DispositionId             = 0;  // The disposition was not known.
        ALLOWED_DispositionId             = 1;  // Granted access or allowed the action to
                                                // the protected resource.
        BLOCKED_DispositionId             = 2;  // Denied access or blocked the action to
                                                // the protected resource.
        QUARANTINED_DispositionId         = 3;  // A suspicious file or other content was
                                                // moved to a benign location.
        ISOLATED_DispositionId            = 4;  // A session was isolated on the network
                                                // or within a browser.
        DELETED_DispositionId             = 5;  // A file or other content was deleted.
        DROPPED_DispositionId             = 6;  // The request was detected as a threat
                                                // and resulted in the connection being
                                                // dropped.
        CUSTOM_ACTION_DispositionId       = 7;  // A custom action was executed such as
                                                // running of a command script. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        APPROVED_DispositionId            = 8;  // A request or submission was approved.
                                                // For example, when a form was properly
                                                // filled out and submitted. This is
                                                // distinct from <code>1</code> 'Allowed'.
        RESTORED_DispositionId            = 9;  // A quarantined file or other content was
                                                // restored to its original location.
        EXONERATED_DispositionId          = 10; // A suspicious or risky entity was deemed
                                                // to no longer be suspicious (re-scored).
        CORRECTED_DispositionId           = 11; // A corrupt file or configuration was
                                                // corrected.
        PARTIALLY_CORRECTED_DispositionId = 12; // A corrupt file or configuration was
                                                // partially corrected.
        UNCORRECTED_DispositionId         = 13; // A corrupt file or configuration was not
                                                // corrected.
        DELAYED_DispositionId             = 14; // An operation was delayed, for example
                                                // if a restart was required to finish the
                                                // operation.
        DETECTED_DispositionId            = 15; // Suspicious activity or a policy
                                                // violation was detected without further
                                                // action.
        NO_ACTION_DispositionId           = 16; // The outcome of an operation had no
                                                // action taken.
        LOGGED_DispositionId              = 17; // The operation or action was logged
                                                // without further action.
        TAGGED_DispositionId              = 18; // A file or other entity was marked with
                                                // extended attributes.
        ALERT_DispositionId               = 19; // The request or activity was detected as
                                                // a threat and resulted in a notification
                                                // but request was not blocked.
        COUNT_DispositionId               = 20; // Counted the request or activity but did
                                                // not determine whether to allow it or
                                                // block it.
        RESET_DispositionId               = 21; // The request was detected as a threat
                                                // and resulted in the connection being
                                                // reset.
        CAPTCHA_DispositionId             = 22; // Required the end user to solve a
                                                // CAPTCHA puzzle to prove that a human
                                                // being is sending the request.
        CHALLENGE_DispositionId           = 23; // Ran a silent challenge that required
                                                // the client session to verify that it's
                                                // a browser, and not a bot.
        ACCESS_REVOKED_DispositionId      = 24; // The requestor's access has been revoked
                                                // due to security policy enforcements.
                                                // Note: use the <code>Host</code> profile
                                                // if the <code>User</code> or
                                                // <code>Actor</code> requestor is not
                                                // present in the event class.
        REJECTED_DispositionId            = 25; // A request or submission was rejected.
                                                // For example, when a form was improperly
                                                // filled out and submitted. This is
                                                // distinct from <code>2</code> 'Blocked'.
        UNAUTHORIZED_DispositionId        = 26; // An attempt to access a resource was
                                                // denied due to an authorization check
                                                // that failed. This is a more specific
                                                // disposition than <code>2</code>
                                                // 'Blocked' and can be complemented with
                                                // the <code>authorizations</code>
                                                // attribute for more detail.
        ERROR_DispositionId               = 27; // An error occurred during the processing
                                                // of the activity or request. Use the
                                                // <code>message</code> attribute of the
                                                // base class for details.
        OTHER_DispositionId               = 99; // The disposition is not listed. The
                                                // <code>disposition</code> attribute
                                                // should be populated with a source
                                                // specific caption.
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    enum TypeId {
        UNKNOWN_TypeId    = 0;  // The datastore resource type is unknown.
        DATABASE_TypeId   = 1; 
        DATABUCKET_TypeId = 2; 
        TABLE_TypeId      = 3; 
        OTHER_TypeId      = 99; // The datastore resource type is not mapped.
    }
    string action = 1;
    ActionId action_id = 2;
    ActivityId activity_id = 3;
    string activity_name = 4;
    Actor actor = 5;
    Api api = 6;
    repeated Attack attacks = 7;
    repeated Authorization authorizations = 8;
    string category_name = 9;
    CategoryUid category_uid = 10;
    string class_name = 11;
    ClassUid class_uid = 12;
    Cloud cloud = 13;
    int32 count = 14;
    Database database = 15;
    Databucket databucket = 16;
    string disposition = 17;
    DispositionId disposition_id = 18;
    NetworkEndpoint dst_endpoint = 19;
    int32 duration = 20;
    int64 end_time = 21;
    google.protobuf.Timestamp end_time_dt = 22;
    repeated Enrichment enrichments = 23;
    FirewallRule firewall_rule = 24;
    HttpRequest http_request = 25;
    repeated Malware malware = 26;
    string message = 27;
    Metadata metadata = 28;
    repeated Observable observables = 29;
    QueryInfo query_info = 30;
    string raw_data = 31;
    string severity = 32;
    SeverityId severity_id = 33;
    NetworkEndpoint src_endpoint = 34;
    int64 start_time = 35;
    google.protobuf.Timestamp start_time_dt = 36;
    string status = 37;
    string status_code = 38;
    string status_detail = 39;
    StatusId status_id = 40;
    Table table = 41;
    int64 time = 42;
    google.protobuf.Timestamp time_dt = 43;
    int32 timezone_offset = 44;
    string type = 45;
    TypeId type_id = 46;
    string type_name = 47;
    int64 type_uid = 48;
    GenericObject unmapped = 49;
}

// FileHosting is an OSF event in category "Application Activity"
// called File Hosting Activity
// defined in io.ocsf events/application/file_hosting.json
//
// File Hosting Activity events report the actions taken by file management
// applications, including file sharing servers like Sharepoint and services
// such as Box, MS OneDrive, or Google Drive.
message FileHosting {
    enum ActivityId {
        UNKNOWN_ActivityId  = 0; 
        UPLOAD_ActivityId   = 1;  // Upload a file.
        DOWNLOAD_ActivityId = 2;  // Download a file.
        UPDATE_ActivityId   = 3;  // Update a file.
        DELETE_ActivityId   = 4;  // Delete a file.
        RENAME_ActivityId   = 5;  // Rename a file.
        COPY_ActivityId     = 6;  // Copy a file.
        MOVE_ActivityId     = 7;  // Move a file.
        RESTORE_ActivityId  = 8;  // Restore a file.
        PREVIEW_ActivityId  = 9;  // Preview a file.
        LOCK_ActivityId     = 10; // Lock a file.
        UNLOCK_ActivityId   = 11; // Unlock a file.
        SHARE_ActivityId    = 12; // Share a file.
        UNSHARE_ActivityId  = 13; // Unshare a file.
        OPEN_ActivityId     = 14; // Open a file.
        SYNC_ActivityId     = 15; // Mark a file or folder to sync with a computer.
        UNSYNC_ActivityId   = 16; // Mark a file or folder to not sync with a computer.
        OTHER_ActivityId    = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid               = 0;   
        FILE_HOSTING_ACTIVITY_ClassUid = 6006;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    NetworkConnectionInfo connection_info = 10;
    int32 count = 11;
    NetworkEndpoint dst_endpoint = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    int64 expiration_time = 17;
    google.protobuf.Timestamp expiration_time_dt = 18;
    File file = 19;
    string message = 20;
    Metadata metadata = 21;
    repeated Observable observables = 22;
    string raw_data = 23;
    string severity = 24;
    SeverityId severity_id = 25;
    NetworkEndpoint src_endpoint = 26;
    int64 start_time = 27;
    google.protobuf.Timestamp start_time_dt = 28;
    string status = 29;
    string status_code = 30;
    string status_detail = 31;
    StatusId status_id = 32;
    int64 time = 33;
    google.protobuf.Timestamp time_dt = 34;
    int32 timezone_offset = 35;
    string type_name = 36;
    int64 type_uid = 37;
    GenericObject unmapped = 38;
}

// ScanActivity is an OSF event in category "Application Activity"
// called Scan Activity
// defined in io.ocsf events/application/scan_activity.json
//
// Scan events report the start, completion, and results of a scan job. The
// scan event includes the number of items that were scanned and the number of
// detections that were resolved.
message ScanActivity {
    enum ActivityId {
        UNKNOWN_ActivityId            = 0; 
        STARTED_ActivityId            = 1;  // The scan was started.
        COMPLETED_ActivityId          = 2;  // The scan was completed.
        CANCELLED_ActivityId          = 3;  // The scan was cancelled.
        DURATION_VIOLATION_ActivityId = 4;  // The allocated scan time was insufficient to
                                            // complete the requested scan.
        PAUSE_VIOLATION_ActivityId    = 5;  // The scan was paused, either by the user or
                                            // by program constraints (e.g. scans that are
                                            // suspended during certain time intervals),
                                            // and not resumed within the allotted time.
        ERROR_ActivityId              = 6;  // The scan could not be completed due to an
                                            // internal error.
        PAUSED_ActivityId             = 7;  // The scan was paused.
        RESUMED_ActivityId            = 8;  // The scan was resumed from the pause point.
        RESTARTED_ActivityId          = 9;  // The scan restarted from the beginning of
                                            // the file enumeration.
        DELAYED_ActivityId            = 10; // The user delayed the scan.
        OTHER_ActivityId              = 99;
    }
    enum CategoryUid {
        UNKNOWN_CategoryUid              = 0;
        APPLICATION_ACTIVITY_CategoryUid = 6;
    }
    enum ClassUid {
        UNKNOWN_ClassUid       = 0;   
        SCAN_ACTIVITY_ClassUid = 6007;
    }
    enum SeverityId {
        UNKNOWN_SeverityId       = 0;  // The event/finding severity is unknown.
        INFORMATIONAL_SeverityId = 1;  // Informational message. No action required.
        LOW_SeverityId           = 2;  // The user decides if action is needed.
        MEDIUM_SeverityId        = 3;  // Action is required but the situation is not
                                       // serious at this time.
        HIGH_SeverityId          = 4;  // Action is required immediately.
        CRITICAL_SeverityId      = 5;  // Action is required immediately and the scope is
                                       // broad.
        FATAL_SeverityId         = 6;  // An error occurred but it is too late to take
                                       // remedial action.
        OTHER_SeverityId         = 99; // The event/finding severity is not mapped. See
                                       // the <code>severity</code> attribute, which
                                       // contains a data source specific value.
    }
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        SUCCESS_StatusId = 1; 
        FAILURE_StatusId = 2; 
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    ActivityId activity_id = 1;
    string activity_name = 2;
    Actor actor = 3;
    Api api = 4;
    string category_name = 5;
    CategoryUid category_uid = 6;
    string class_name = 7;
    ClassUid class_uid = 8;
    Cloud cloud = 9;
    string command_uid = 10;
    int32 count = 11;
    Device device = 12;
    int32 duration = 13;
    int64 end_time = 14;
    google.protobuf.Timestamp end_time_dt = 15;
    repeated Enrichment enrichments = 16;
    string message = 17;
    Metadata metadata = 18;
    int32 num_detections = 19;
    int32 num_files = 20;
    int32 num_folders = 21;
    int32 num_network_items = 22;
    int32 num_processes = 23;
    int32 num_registry_items = 24;
    int32 num_resolutions = 25;
    int32 num_skipped_items = 26;
    int32 num_trusted_items = 27;
    repeated Observable observables = 28;
    Policy policy = 29;
    string raw_data = 30;
    Scan scan = 31;
    string schedule_uid = 32;
    string severity = 33;
    SeverityId severity_id = 34;
    int64 start_time = 35;
    google.protobuf.Timestamp start_time_dt = 36;
    string status = 37;
    string status_code = 38;
    string status_detail = 39;
    StatusId status_id = 40;
    int64 time = 41;
    google.protobuf.Timestamp time_dt = 42;
    int32 timezone_offset = 43;
    int32 total = 44;
    string type_name = 45;
    int64 type_uid = 46;
    GenericObject unmapped = 47;
}

// Actor is an OSF object
// defined in io.ocsf objects/actor.json
//
// The Actor object contains details about the user, role, application,
// service, or process that initiated or performed a specific activity.
message Actor {
    string app_name = 1;
    string app_uid = 2;
    repeated Authorization authorizations = 3;
    Idp idp = 4;
    string invoked_by = 5;
    Process process = 6;
    Session session = 7;
    User user = 8;
}

// Api is an OSF object
// defined in io.ocsf objects/api.json
//
// The API, or Application Programming Interface, object represents
// information pertaining to an API request and response.
message Api {
    Group group = 1;
    string operation = 2;
    Request request = 3;
    Response response = 4;
    Service service = 5;
    string version = 6;
}

// Attack is an OSF object
// defined in io.ocsf objects/attack.json
//
// The <a target='_blank' href='https://attack.mitre.org'>MITRE ATT&CK®</a>
// object describes the tactic, technique & sub-technique associated to an
// attack as defined in <a target='_blank'
// href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK
// Matrix<sup>TM</sup></a>.
message Attack {
    SubTechnique sub_technique = 1;
    Tactic tactic = 2;
    repeated Tactic tactics = 3;
    Technique technique = 4;
    string version = 5;
}

// Authorization is an OSF object
// defined in io.ocsf objects/authorization.json
//
// The Authorization Result object provides details about the authorization
// outcome and associated policies related to activity.
message Authorization {
    string decision = 1;
    Policy policy = 2;
}

// Cloud is an OSF object
// defined in io.ocsf objects/cloud.json
//
// The Cloud object contains information about a cloud account such as AWS
// Account ID, regions, etc.
message Cloud {
    Account account = 1;
    Organization org = 2;
    string project_uid = 3;
    string provider = 4;
    string region = 5;
    string zone = 6;
}

// Device is an OSF object
// defined in io.ocsf objects/device.json
//
// The Device object represents an addressable computer system or host, which
// is typically connected to a computer network and participates in the
// transmission or processing of data within the computer network. Defined by
// D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:Host/'>d3f:Host</a>.
message Device {
    enum RiskLevelId {
        INFO_RiskLevelId     = 0;
        LOW_RiskLevelId      = 1;
        MEDIUM_RiskLevelId   = 2;
        HIGH_RiskLevelId     = 3;
        CRITICAL_RiskLevelId = 4;
    }
    enum TypeId {
        UNKNOWN_TypeId  = 0;  // The type is unknown.
        SERVER_TypeId   = 1;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Server/'>server</a>.
        DESKTOP_TypeId  = 2;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:DesktopComputer/'>desktop
                              // computer</a>.
        LAPTOP_TypeId   = 3;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:LaptopComputer/'>laptop
                              // computer</a>.
        TABLET_TypeId   = 4;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:TabletComputer/'>tablet
                              // computer</a>.
        MOBILE_TypeId   = 5;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:MobilePhone/'>mobile
                              // phone</a>.
        VIRTUAL_TypeId  = 6;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:VirtualizationSoftware/'>virtual
                              // machine</a>.
        IOT_TypeId      = 7;  // A <a target='_blank'
                              // href='https://www.techtarget.com/iotagenda/definition/IoT-
                              // device'>IOT (Internet of Things) device</a>.
        BROWSER_TypeId  = 8;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Browser/'>web
                              // browser</a>.
        FIREWALL_TypeId = 9;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Firewall/'>networking
                              // firewall</a>.
        SWITCH_TypeId   = 10; // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Switch/'>networking
                              // switch</a>.
        HUB_TypeId      = 11; // A <a target='_blank'
                              // href='https://en.wikipedia.org/wiki/Ethernet_hub'>networking
                              // hub</a>.
        OTHER_TypeId    = 99; // The type is not mapped. See the <code>type</code>
                              // attribute, which contains a data source specific value.
    }
    repeated Agent agent_list = 1;
    string autoscale_uid = 2;
    Container container = 3;
    int64 created_time = 4;
    google.protobuf.Timestamp created_time_dt = 5;
    string desc = 6;
    string domain = 7;
    int64 first_seen_time = 8;
    google.protobuf.Timestamp first_seen_time_dt = 9;
    repeated Group groups = 10;
    string hostname = 11;
    DeviceHwInfo hw_info = 12;
    string hypervisor = 13;
    Image image = 14;
    string imei = 15;
    string instance_uid = 16;
    string interface_name = 17;
    string interface_uid = 18;
    string ip = 19;
    bool is_compliant = 20;
    bool is_managed = 21;
    bool is_personal = 22;
    bool is_trusted = 23;
    int64 last_seen_time = 24;
    google.protobuf.Timestamp last_seen_time_dt = 25;
    Location location = 26;
    string mac = 27;
    int64 modified_time = 28;
    google.protobuf.Timestamp modified_time_dt = 29;
    string name = 30;
    int32 namespace_pid = 31;
    repeated NetworkInterface network_interfaces = 32;
    Organization org = 33;
    Os os = 34;
    User owner = 35;
    string region = 36;
    string risk_level = 37;
    RiskLevelId risk_level_id = 38;
    int32 risk_score = 39;
    string subnet = 40;
    string subnet_uid = 41;
    string type = 42;
    TypeId type_id = 43;
    string uid = 44;
    string uid_alt = 45;
    string vlan_uid = 46;
    string vpc_uid = 47;
    string zone = 48;
}

// Enrichment is an OSF object
// defined in io.ocsf objects/enrichment.json
//
// The Enrichment object provides inline enrichment data for specific
// attributes of interest within an event. It serves as a mechanism to enhance
// or supplement the information associated with the event by adding
// additional relevant details or context.
message Enrichment {
    bytes data = 1;
    string name = 2;
    string provider = 3;
    string type = 4;
    string value = 5;
}

// File is an OSF object
// defined in io.ocsf objects/file.json
//
// The File object represents the metadata associated with a file stored in a
// computer system. It encompasses information about the file itself,
// including its attributes, properties, and organizational details. Defined
// by D3FEND <a target='_blank'
// href='https://next.d3fend.mitre.org/dao/artifact/d3f:File/'>d3f:File</a>.
message File {
    enum ConfidentialityId {
        UNKNOWN_ConfidentialityId          = 0;  // The confidentiality is unknown.
        NOT_CONFIDENTIAL_ConfidentialityId = 1; 
        CONFIDENTIAL_ConfidentialityId     = 2; 
        SECRET_ConfidentialityId           = 3; 
        TOP_SECRET_ConfidentialityId       = 4; 
        PRIVATE_ConfidentialityId          = 5; 
        RESTRICTED_ConfidentialityId       = 6; 
        OTHER_ConfidentialityId            = 99; // The confidentiality is not mapped. See
                                                 // the <code>confidentiality</code>
                                                 // attribute, which contains a data
                                                 // source specific value.
    }
    enum TypeId {
        UNKNOWN_TypeId          = 0; 
        REGULAR_FILE_TypeId     = 1; 
        FOLDER_TypeId           = 2; 
        CHARACTER_DEVICE_TypeId = 3; 
        BLOCK_DEVICE_TypeId     = 4; 
        LOCAL_SOCKET_TypeId     = 5; 
        NAMED_PIPE_TypeId       = 6; 
        SYMBOLIC_LINK_TypeId    = 7; 
        OTHER_TypeId            = 99;
    }
    int64 accessed_time = 1;
    google.protobuf.Timestamp accessed_time_dt = 2;
    User accessor = 3;
    int32 attributes = 4;
    string company_name = 5;
    string confidentiality = 6;
    ConfidentialityId confidentiality_id = 7;
    int64 created_time = 8;
    google.protobuf.Timestamp created_time_dt = 9;
    User creator = 10;
    DataClassification data_classification = 11;
    string desc = 12;
    repeated Fingerprint hashes = 13;
    bool is_system = 14;
    string mime_type = 15;
    int64 modified_time = 16;
    google.protobuf.Timestamp modified_time_dt = 17;
    User modifier = 18;
    string name = 19;
    User owner = 20;
    string parent_folder = 21;
    string path = 22;
    Product product = 23;
    string security_descriptor = 24;
    DigitalSignature signature = 25;
    int64 size = 26;
    string type = 27;
    TypeId type_id = 28;
    string uid = 29;
    string version = 30;
    GenericObject xattributes = 31;
}

// FirewallRule is an OSF object
// defined in io.ocsf objects/firewall_rule.json
//
// The Firewall Rule object represents a specific rule within a firewall
// policy or event. It contains information about a rule's configuration,
// properties, and associated actions that define how network traffic is
// handled by the firewall.
message FirewallRule {
    string category = 1;
    string condition = 2;
    string desc = 3;
    int32 duration = 4;
    repeated string match_details = 5;
    string match_location = 6;
    string name = 7;
    int32 rate_limit = 8;
    string sensitivity = 9;
    string type = 10;
    string uid = 11;
    string version = 12;
}

// Malware is an OSF object
// defined in io.ocsf objects/malware.json
//
// The Malware object describes the classification of known malicious
// software, which is intentionally designed to cause damage to a computer,
// server, client, or computer network.
message Malware {
    enum ClassificationIds {
        UNKNOWN_ClassificationIds                 = 0; 
        ADWARE_ClassificationIds                  = 1; 
        BACKDOOR_ClassificationIds                = 2; 
        BOT_ClassificationIds                     = 3; 
        BOOTKIT_ClassificationIds                 = 4; 
        DDOS_ClassificationIds                    = 5; 
        DOWNLOADER_ClassificationIds              = 6; 
        DROPPER_ClassificationIds                 = 7; 
        EXPLOIT_KIT_ClassificationIds             = 8; 
        KEYLOGGER_ClassificationIds               = 9; 
        RANSOMWARE_ClassificationIds              = 10;
        REMOTE_ACCESS_TROJAN_ClassificationIds    = 11;
        RESOURCE_EXPLOITATION_ClassificationIds   = 13;
        ROGUE_SECURITY_SOFTWARE_ClassificationIds = 14;
        ROOTKIT_ClassificationIds                 = 15;
        SCREEN_CAPTURE_ClassificationIds          = 16;
        SPYWARE_ClassificationIds                 = 17;
        TROJAN_ClassificationIds                  = 18;
        VIRUS_ClassificationIds                   = 19;
        WEBSHELL_ClassificationIds                = 20;
        WIPER_ClassificationIds                   = 21;
        WORM_ClassificationIds                    = 22;
        OTHER_ClassificationIds                   = 99;
    }
    repeated ClassificationIds classification_ids = 1;
    repeated string classifications = 2;
    repeated Cve cves = 3;
    string name = 4;
    string path = 5;
    string provider = 6;
    string uid = 7;
}

// Metadata is an OSF object
// defined in io.ocsf objects/metadata.json
//
// The Metadata object describes the metadata associated with the event.
// Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:Metadata/'>d3f:Metadata</a>.
message Metadata {
    string correlation_uid = 1;
    DataClassification data_classification = 2;
    string event_code = 3;
    Extension extension = 4;
    repeated Extension extensions = 5;
    repeated string labels = 6;
    string log_level = 7;
    string log_name = 8;
    string log_provider = 9;
    string log_version = 10;
    int64 logged_time = 11;
    google.protobuf.Timestamp logged_time_dt = 12;
    repeated Logger loggers = 13;
    int64 modified_time = 14;
    google.protobuf.Timestamp modified_time_dt = 15;
    string original_time = 16;
    int64 processed_time = 17;
    google.protobuf.Timestamp processed_time_dt = 18;
    Product product = 19;
    repeated string profiles = 20;
    int32 sequence = 21;
    string tenant_uid = 22;
    string uid = 23;
    string version = 24;
}

// Observable is an OSF object
// defined in io.ocsf objects/observable.json
//
// The observable object is a pivot element that contains related information
// found in many places in the event.
message Observable {
    enum TypeId {
        UNKNOWN_TypeId         = 0;  // Unknown observable data type.
        HOSTNAME_TypeId        = 1; 
        IP_ADDRESS_TypeId      = 2; 
        MAC_ADDRESS_TypeId     = 3; 
        USER_NAME_TypeId       = 4; 
        EMAIL_ADDRESS_TypeId   = 5; 
        URL_STRING_TypeId      = 6; 
        FILE_NAME_TypeId       = 7; 
        HASH_TypeId            = 8; 
        PROCESS_NAME_TypeId    = 9; 
        RESOURCE_UID_TypeId    = 10;
        PORT_TypeId            = 11;
        SUBNET_TypeId          = 12;
        COMMAND_LINE_TypeId    = 13;
        COUNTRY_TypeId         = 14;
        PROCESS_ID_TypeId      = 15;
        HTTP_USER_AGENT_TypeId = 16;
        OTHER_TypeId           = 99; // The observable data type is not mapped. See the
                                     // <code>type</code> attribute, which may contain
                                     // data source specific value.
    }
    string name = 1;
    Reputation reputation = 2;
    string type = 3;
    TypeId type_id = 4;
    string value = 5;
}

// RegKey is an OSF object
// defined in win objects/registry_key.json
//
// The registry key object describes a Windows registry key. Defined by D3FEND
// <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:WindowsRegistryKey/'>d3f:WindowsRegistryKey</a>.
message RegKey {
    bool is_system = 1;
    int64 modified_time = 2;
    google.protobuf.Timestamp modified_time_dt = 3;
    string path = 4;
    string security_descriptor = 5;
}

// KernelDriver is an OSF object
// defined in io.ocsf objects/kernel_driver.json
//
// The Kernel Extension object describes a kernel driver that has been loaded
// or unloaded into the operating system (OS) kernel. Defined by D3FEND <a
// target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:KernelModule/'>d3f:KernelModule</a>.
message KernelDriver {
    File file = 1;
}

// RegValue is an OSF object
// defined in win objects/registry_value.json
//
// The registry value object describes a Windows registry value.
message RegValue {
    enum TypeId {
        UNKNOWN_TypeId                 = 0;  // The type is unknown.
        REG_BINARY_TypeId              = 1; 
        REG_DWORD_TypeId               = 2; 
        REG_DWORD_BIG_ENDIAN_TypeId    = 3; 
        REG_EXPAND_SZ_TypeId           = 4; 
        REG_LINK_TypeId                = 5; 
        REG_MULTI_SZ_TypeId            = 6; 
        REG_NONE_TypeId                = 7; 
        REG_QWORD_TypeId               = 8; 
        REG_QWORD_LITTLE_ENDIAN_TypeId = 9; 
        REG_SZ_TypeId                  = 10;
        OTHER_TypeId                   = 99; // The type is not mapped. See the
                                             // <code>type</code> attribute, which
                                             // contains a data source specific value.
    }
    bytes data = 1;
    bool is_default = 2;
    bool is_system = 3;
    int64 modified_time = 4;
    google.protobuf.Timestamp modified_time_dt = 5;
    string name = 6;
    string path = 7;
    string type = 8;
    TypeId type_id = 9;
}

// WinResource is an OSF object
// defined in win objects/win_resource.json
//
// The Windows resource object describes a resource object managed by Windows,
// such as mutant or timer.
message WinResource {
    enum TypeId {
        UNKNOWN_TypeId                 = 0;  // The resource object type is unknown.
        DIRECTORY_TypeId               = 1; 
        EVENT_TypeId                   = 2; 
        TIMER_TypeId                   = 3; 
        DEVICE_TypeId                  = 4; 
        MUTANT_TypeId                  = 5; 
        TYPE_TypeId                    = 6; 
        FILE_TypeId                    = 7; 
        TOKEN_TypeId                   = 8; 
        THREAD_TypeId                  = 9; 
        SECTION_TypeId                 = 10;
        WINDOWSTATION_TypeId           = 11;
        DEBUGOBJECT_TypeId             = 12;
        FILTERCOMMUNICATIONPORT_TypeId = 13;
        EVENTPAIR_TypeId               = 14;
        DRIVER_TypeId                  = 15;
        IOCOMPLETION_TypeId            = 16;
        CONTROLLER_TypeId              = 17;
        SYMBOLICLINK_TypeId            = 18;
        WMIGUID_TypeId                 = 19;
        PROCESS_TypeId                 = 20;
        PROFILE_TypeId                 = 21;
        DESKTOP_TypeId                 = 22;
        KEYEDEVENT_TypeId              = 23;
        ADAPTER_TypeId                 = 24;
        KEY_TypeId                     = 25;
        WAITABLEPORT_TypeId            = 26;
        CALLBACK_TypeId                = 27;
        SEMAPHORE_TypeId               = 28;
        JOB_TypeId                     = 29;
        PORT_TypeId                    = 30;
        FILTERCONNECTIONPORT_TypeId    = 31;
        ALPC_PORT_TypeId               = 32;
        SAM_ALIAS_TypeId               = 33;
        SAM_GROUP_TypeId               = 34;
        SAM_USER_TypeId                = 35;
        SAM_DOMAIN_TypeId              = 36;
        SAM_SERVER_TypeId              = 37;
        OTHER_TypeId                   = 99; // The resource object type is not mapped.
                                             // See the <code>type</code> attribute, which
                                             // may contain a data source specific value.
    }
    bytes data = 1;
    DataClassification data_classification = 2;
    string details = 3;
    repeated string labels = 4;
    string name = 5;
    string svc_name = 6;
    string type = 7;
    TypeId type_id = 8;
    string uid = 9;
}

// Kernel is an OSF object
// defined in io.ocsf objects/kernel.json
//
// The Kernel Resource object provides information about a specific kernel
// resource, including its name and type. It describes essential attributes
// associated with a resource managed by the kernel of an operating system.
// Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:Kernel/'>d3f:Kernel</a>.
message Kernel {
    enum TypeId {
        UNKNOWN_TypeId      = 0;  // The type is unknown.
        SHARED_MUTEX_TypeId = 1; 
        SYSTEM_CALL_TypeId  = 2; 
        OTHER_TypeId        = 99; // The type is not mapped. See the <code>type</code>
                                  // attribute, which contains a data source specific
                                  // value.
    }
    bool is_system = 1;
    string name = 2;
    string path = 3;
    string system_call = 4;
    string type = 5;
    TypeId type_id = 6;
}

// Process is an OSF object
// defined in io.ocsf objects/process.json
// and linux objects/process.json
//
// Extends the process object to add Linux specific fields
message Process {
    enum IntegrityId {
        UNKNOWN_IntegrityId   = 0; 
        UNTRUSTED_IntegrityId = 1; 
        LOW_IntegrityId       = 2; 
        MEDIUM_IntegrityId    = 3; 
        HIGH_IntegrityId      = 4; 
        SYSTEM_IntegrityId    = 5; 
        PROTECTED_IntegrityId = 6; 
        OTHER_IntegrityId     = 99;
    }
    string cmd_line = 1;
    Container container = 2;
    int64 created_time = 3;
    google.protobuf.Timestamp created_time_dt = 4;
    File file = 5;
    Group group = 6;
    string integrity = 7;
    IntegrityId integrity_id = 8;
    repeated string lineage = 9;
    repeated string loaded_modules = 10;
    string name = 11;
    int32 namespace_pid = 12;
    Process parent_process = 13;
    int32 pid = 14;
    string sandbox = 15;
    Session session = 16;
    int64 terminated_time = 17;
    google.protobuf.Timestamp terminated_time_dt = 18;
    int32 tid = 19;
    string uid = 20;
    User user = 21;
    GenericObject xattributes = 22;
    int32 auid = 1001;
    int32 egid = 1002;
    int32 euid = 1003;
}

// Module is an OSF object
// defined in io.ocsf objects/module.json
//
// The Module object describes the load attributes of a module.
message Module {
    enum LoadTypeId {
        UNKNOWN_LoadTypeId            = 0; 
        STANDARD_LoadTypeId           = 1;  // A normal module loaded by the normal
                                            // windows loading mechanism i.e. LoadLibrary.
        NON_STANDARD_LoadTypeId       = 2;  // A module loaded in a way avoidant of normal
                                            // windows procedures. i.e. Bootstrapped
                                            // Loading/Manual Dll Loading.
        SHELLCODE_LoadTypeId          = 3;  // A raw module in process memory that is
                                            // READWRITE_EXECUTE and had a thread started
                                            // in its range.
        MAPPED_LoadTypeId             = 4;  // A memory mapped file, typically created
                                            // with CreatefileMapping/MapViewOfFile.
        NONSTANDARD_BACKED_LoadTypeId = 5;  // A module loaded in a non standard way.
                                            // However, GetModuleFileName succeeds on this
                                            // allocation.
        OTHER_LoadTypeId              = 99;
    }
    string base_address = 1;
    File file = 2;
    string function_name = 3;
    string load_type = 4;
    LoadTypeId load_type_id = 5;
    string start_address = 6;
    string type = 7;
}

// Job is an OSF object
// defined in io.ocsf objects/job.json
//
// The Job object provides information about a scheduled job or task,
// including its name, command line, and state. It encompasses attributes that
// describe the properties and status of the scheduled job.
message Job {
    enum RunStateId {
        UNKNOWN_RunStateId = 0; 
        READY_RunStateId   = 1; 
        QUEUED_RunStateId  = 2; 
        RUNNING_RunStateId = 3; 
        STOPPED_RunStateId = 4; 
        OTHER_RunStateId   = 99;
    }
    string cmd_line = 1;
    int64 created_time = 2;
    google.protobuf.Timestamp created_time_dt = 3;
    string desc = 4;
    File file = 5;
    int64 last_run_time = 6;
    google.protobuf.Timestamp last_run_time_dt = 7;
    string name = 8;
    int64 next_run_time = 9;
    google.protobuf.Timestamp next_run_time_dt = 10;
    string run_state = 11;
    RunStateId run_state_id = 12;
    User user = 13;
}

// Analytic is an OSF object
// defined in io.ocsf objects/analytic.json
//
// The Analytic object contains details about the analytic technique used to
// analyze and derive insights from the data or information that led to the
// creation of a finding or conclusion.
message Analytic {
    enum TypeId {
        UNKNOWN_TypeId             = 0; 
        RULE_TypeId                = 1;  // A Rule in security analytics refers to
                                         // predefined criteria or conditions set to
                                         // monitor, alert, or enforce policies, playing a
                                         // crucial role in access control, threat
                                         // detection, and regulatory compliance across
                                         // security systems.
        BEHAVIORAL_TypeId          = 2;  // Behavioral analytics focus on monitoring and
                                         // analyzing user or system actions to identify
                                         // deviations from established patterns, aiding
                                         // in the detection of insider threats, fraud,
                                         // and advanced persistent threats (APTs).
        STATISTICAL_TypeId         = 3;  // Statistical analytics pertains to analyzing
                                         // data patterns and anomalies using statistical
                                         // models to predict, detect, and respond to
                                         // potential threats, enhancing overall security
                                         // posture through informed decision-making.
        FINGERPRINTING_TypeId      = 5;  // Fingerprinting is the technique of collecting
                                         // detailed system data, including software
                                         // versions and configurations, to enhance threat
                                         // detection, data loss prevention (DLP), and
                                         // endpoint detection and response (EDR)
                                         // capabilities.
        TAGGING_TypeId             = 6;  // Tagging refers to the practice of assigning
                                         // labels or identifiers to data, users, assets,
                                         // or activities to monitor, control access, and
                                         // facilitate incident response across various
                                         // security domains such as DLP and EDR.
        KEYWORD_MATCH_TypeId       = 7;  // Keyword Match involves scanning content for
                                         // specific terms to identify sensitive
                                         // information, potential threats, or policy
                                         // violations, aiding in DLP and compliance
                                         // monitoring.
        REGULAR_EXPRESSIONS_TypeId = 8;  // Regular Expressions are used to define complex
                                         // search patterns for identifying, validating,
                                         // and extracting specific data sets or threats
                                         // within digital content, enhancing DLP, EDR,
                                         // and threat detection mechanisms.
        EXACT_DATA_MATCH_TypeId    = 9;  // Exact Data Match is a precise comparison
                                         // technique used to detect the unauthorized use
                                         // or exposure of specific, sensitive
                                         // information, crucial for enforcing DLP
                                         // policies and protecting against data breaches.
        PARTIAL_DATA_MATCH_TypeId  = 10; // Partial Data Match involves identifying
                                         // instances where segments of sensitive
                                         // information or patterns match, facilitating
                                         // nuanced DLP and threat detection without
                                         // requiring complete data conformity.
        INDEXED_DATA_MATCH_TypeId  = 11; // Indexed Data Match refers to comparing content
                                         // against a pre-compiled index of sensitive
                                         // information to efficiently detect and prevent
                                         // unauthorized access or breaches, streamlining
                                         // DLP and compliance efforts.
        OTHER_TypeId               = 99;
    }
    string category = 1;
    string desc = 2;
    string name = 3;
    repeated Analytic related_analytics = 4;
    string type = 5;
    TypeId type_id = 6;
    string uid = 7;
    string version = 8;
}

// CisCsc is an OSF object
// defined in io.ocsf objects/cis_csc.json
//
// The CIS Critical Security Control (CSC) contains information as defined by
// the Center for Internet Security Critical Security Control <a
// target='_blank' href='https://www.cisecurity.org/controls'>(CIS CSC)</a>.
// Prioritized set of actions to protect your organization and data from cyber-
// attack vectors.
message CisCsc {
    string control = 1;
    string version = 2;
}

// Compliance is an OSF object
// defined in io.ocsf objects/compliance.json
//
// The Compliance object contains information about Industry and Regulatory
// Framework standards, controls and requirements.
message Compliance {
    enum StatusId {
        UNKNOWN_StatusId = 0;  // The status is unknown.
        PASS_StatusId    = 1;  // The compliance check passed for all the evaluated
                               // resources.
        WARNING_StatusId = 2;  // The compliance check did not yield a result due to
                               // missing information.
        FAIL_StatusId    = 3;  // The compliance check failed for at least one of the
                               // evaluated resources.
        OTHER_StatusId   = 99; // The event status is not mapped. See the
                               // <code>status</code> attribute, which contains a data
                               // source specific value.
    }
    string control = 1;
    repeated string requirements = 2;
    repeated string standards = 3;
    string status = 4;
    string status_code = 5;
    string status_detail = 6;
    StatusId status_id = 7;
}

// Finding is an OSF object
// defined in io.ocsf objects/finding.json
//
// The Finding object describes metadata related to a security finding
// generated by a security tool or system.
message Finding {
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    string desc = 3;
    int64 first_seen_time = 4;
    google.protobuf.Timestamp first_seen_time_dt = 5;
    int64 last_seen_time = 6;
    google.protobuf.Timestamp last_seen_time_dt = 7;
    int64 modified_time = 8;
    google.protobuf.Timestamp modified_time_dt = 9;
    string product_uid = 10;
    repeated RelatedEvent related_events = 11;
    Remediation remediation = 12;
    string src_url = 13;
    bytes supporting_data = 14;
    string title = 15;
    repeated string types = 16;
    string uid = 17;
}

// KillChainPhase is an OSF object
// defined in io.ocsf objects/kill_chain_phase.json
//
// The Kill Chain Phase object represents a single phase of a cyber attack,
// including the initial reconnaissance and planning stages up to the final
// objective of the attacker. It provides a detailed description of each phase
// and its associated activities within the broader context of a cyber attack.
// See <a target='_blank' href='https://www.lockheedmartin.com/en-
// us/capabilities/cyber/cyber-kill-chain.html'>Cyber Kill Chain®</a>.
message KillChainPhase {
    enum PhaseId {
        UNKNOWN_PhaseId               = 0;  // The kill chain phase is unknown.
        RECONNAISSANCE_PhaseId        = 1;  // The attackers pick a target and perform a
                                            // detailed analysis, start collecting
                                            // information (email addresses, conferences
                                            // information, etc.) and evaluate the
                                            // victim’s vulnerabilities to determine how
                                            // to exploit them.
        WEAPONIZATION_PhaseId         = 2;  // The attackers develop a malware weapon and
                                            // aim to exploit the discovered
                                            // vulnerabilities.
        DELIVERY_PhaseId              = 3;  // The intruders will use various tactics,
                                            // such as phishing, infected USB drives, etc.
        EXPLOITATION_PhaseId          = 4;  // The intruders start leveraging
                                            // vulnerabilities to executed code on the
                                            // victim’s system.
        INSTALLATION_PhaseId          = 5;  // The intruders install malware on the
                                            // victim’s system.
        COMMAND_CONTROL_PhaseId       = 6;  // Malware opens a command channel to enable
                                            // the intruders to remotely manipulate the
                                            // victim's system.
        ACTIONS_ON_OBJECTIVES_PhaseId = 7;  // With hands-on keyboard access, intruders
                                            // accomplish the mission’s goal.
        OTHER_PhaseId                 = 99; // The kill chain phase is not mapped. See the
                                            // <code>phase</code> attribute, which
                                            // contains a data source specific value.
    }
    string phase = 1;
    PhaseId phase_id = 2;
}

// ResourceDetails is an OSF object
// defined in io.ocsf objects/resource_details.json
//
// The Resource Details object describes details about resources that were
// affected by the activity/event.
message ResourceDetails {
    repeated Agent agent_list = 1;
    string cloud_partition = 2;
    string criticality = 3;
    bytes data = 4;
    DataClassification data_classification = 5;
    Group group = 6;
    repeated string labels = 7;
    string name = 8;
    string namespace = 9;
    User owner = 10;
    string region = 11;
    string type = 12;
    string uid = 13;
    string version = 14;
}

// Vulnerability is an OSF object
// defined in io.ocsf objects/vulnerability.json
//
// The vulnerability is an unintended characteristic of a computing component
// or system configuration that multiplies the risk of an adverse event or a
// loss occurring either due to accidental exposure, deliberate attack, or
// conflict with new system components.
message Vulnerability {
    repeated AffectedCode affected_code = 1;
    repeated AffectedPackage affected_packages = 2;
    Cve cve = 3;
    Cwe cwe = 4;
    string desc = 5;
    int64 first_seen_time = 6;
    google.protobuf.Timestamp first_seen_time_dt = 7;
    bool fix_available = 8;
    bool is_exploit_available = 9;
    bool is_fix_available = 10;
    repeated KbArticle kb_article_list = 11;
    repeated string kb_articles = 12;
    int64 last_seen_time = 13;
    google.protobuf.Timestamp last_seen_time_dt = 14;
    repeated Package packages = 15;
    repeated string references = 16;
    repeated string related_vulnerabilities = 17;
    Remediation remediation = 18;
    string severity = 19;
    string title = 20;
    string vendor_name = 21;
}

// FindingInfo is an OSF object
// defined in io.ocsf objects/finding_info.json
//
// The Finding Information object describes metadata related to a security
// finding generated by a security tool or system.
message FindingInfo {
    Analytic analytic = 1;
    repeated Attack attacks = 2;
    int64 created_time = 3;
    google.protobuf.Timestamp created_time_dt = 4;
    repeated string data_sources = 5;
    string desc = 6;
    int64 first_seen_time = 7;
    google.protobuf.Timestamp first_seen_time_dt = 8;
    repeated KillChainPhase kill_chain = 9;
    int64 last_seen_time = 10;
    google.protobuf.Timestamp last_seen_time_dt = 11;
    int64 modified_time = 12;
    google.protobuf.Timestamp modified_time_dt = 13;
    string product_uid = 14;
    repeated Analytic related_analytics = 15;
    repeated RelatedEvent related_events = 16;
    string src_url = 17;
    string title = 18;
    repeated string types = 19;
    string uid = 20;
}

// Remediation is an OSF object
// defined in io.ocsf objects/remediation.json
//
// The Remediation object describes the recommended remediation steps to
// address identified issue(s).
message Remediation {
    string desc = 1;
    repeated KbArticle kb_article_list = 2;
    repeated string kb_articles = 3;
    repeated string references = 4;
}

// Evidences is an OSF object
// defined in io.ocsf objects/evidences.json
//
// A collection of evidence artifacts associated to the activity/activities
// that triggered a security detection.
message Evidences {
    Actor actor = 1;
    Api api = 2;
    NetworkConnectionInfo connection_info = 3;
    Container container = 4;
    bytes data = 5;
    Database database = 6;
    Databucket databucket = 7;
    NetworkEndpoint dst_endpoint = 8;
    File file = 9;
    Process process = 10;
    DnsQuery query = 11;
    NetworkEndpoint src_endpoint = 12;
}

// User is an OSF object
// defined in io.ocsf objects/user.json
//
// The User object describes the characteristics of a user/person or a
// security principal. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:UserAccount/'>d3f:UserAccount</a>.
message User {
    enum RiskLevelId {
        INFO_RiskLevelId     = 0;
        LOW_RiskLevelId      = 1;
        MEDIUM_RiskLevelId   = 2;
        HIGH_RiskLevelId     = 3;
        CRITICAL_RiskLevelId = 4;
    }
    enum TypeId {
        UNKNOWN_TypeId = 0; 
        USER_TypeId    = 1;  // Regular user account.
        ADMIN_TypeId   = 2;  // Admin/root user account.
        SYSTEM_TypeId  = 3;  // System account. For example, Windows computer accounts
                             // with a trailing dollar sign ($).
        OTHER_TypeId   = 99;
    }
    Account account = 1;
    string credential_uid = 2;
    string domain = 3;
    string email_addr = 4;
    string full_name = 5;
    repeated Group groups = 6;
    LdapPerson ldap_person = 7;
    string name = 8;
    Organization org = 9;
    string risk_level = 10;
    RiskLevelId risk_level_id = 11;
    int32 risk_score = 12;
    string type = 13;
    TypeId type_id = 14;
    string uid = 15;
    string uid_alt = 16;
}

// Group is an OSF object
// defined in io.ocsf objects/group.json
//
// The Group object represents a collection or association of entities, such
// as users, policies, or devices. It serves as a logical grouping mechanism
// to organize and manage entities with similar characteristics or permissions
// within a system or organization.
message Group {
    string desc = 1;
    string domain = 2;
    string name = 3;
    repeated string privileges = 4;
    string type = 5;
    string uid = 6;
}

// DataSecurity is an OSF object
// defined in io.ocsf objects/data_security.json
//
// The Data Security object describes the characteristics, techniques and
// content of a Data Loss Prevention (DLP), Data Loss Detection (DLD), Data
// Classification, or similar tools' finding, alert, or detection
// mechanism(s).
message DataSecurity {
    enum CategoryId {
        UNKNOWN_CategoryId                      = 0;  // The type is not mapped. See the
                                                      // <code>data_type</code> attribute,
                                                      // which contains a data source
                                                      // specific value.
        PERSONAL_CategoryId                     = 1;  // Any Personally Identifiable
                                                      // Information (PII), Electronic
                                                      // Personal Health Information
                                                      // (ePHI), or similarly personal
                                                      // information. E.g., full name,
                                                      // home address, date of birth, etc.
        GOVERNMENTAL_CategoryId                 = 2;  // Any sensitive government
                                                      // identification number related to
                                                      // a person or other classified
                                                      // material. E.g., Passport numbers,
                                                      // driver license numbers, business
                                                      // identification, taxation
                                                      // identifiers, etc.
        FINANCIAL_CategoryId                    = 3;  // Any financially-related sensitive
                                                      // information or Cardholder Data
                                                      // (CHD). E.g., banking account
                                                      // numbers, credit card numbers,
                                                      // International Banking Account
                                                      // Numbers (IBAN), SWIFT codes, etc.
        BUSINESS_CategoryId                     = 4;  // Any business-specific sensitive
                                                      // data such as intellectual
                                                      // property, trademarks, copyrights,
                                                      // human resource data, Board of
                                                      // Directors meeting minutes, and
                                                      // similar.
        MILITARY_AND_LAW_ENFORCEMENT_CategoryId = 5;  // Any mission-specific sensitive
                                                      // data for military, law
                                                      // enforcement, or other government
                                                      // agencies such as specifically
                                                      // classified data, weapon systems
                                                      // information, or other planning
                                                      // data.
        SECURITY_CategoryId                     = 6;  // Any sensitive security-related
                                                      // data such as passwords, passkeys,
                                                      // IP addresses, API keys,
                                                      // credentials and similar secrets.
                                                      // E.g., AWS Access Secret Key, SaaS
                                                      // API Keys, user passwords,
                                                      // database credentials, etc.
        OTHER_CategoryId                        = 99; // Any other type of data
                                                      // classification or a multi-variate
                                                      // classification made up of several
                                                      // other classification categories.
    }
    enum ConfidentialityId {
        UNKNOWN_ConfidentialityId          = 0;  // The confidentiality is unknown.
        NOT_CONFIDENTIAL_ConfidentialityId = 1; 
        CONFIDENTIAL_ConfidentialityId     = 2; 
        SECRET_ConfidentialityId           = 3; 
        TOP_SECRET_ConfidentialityId       = 4; 
        PRIVATE_ConfidentialityId          = 5; 
        RESTRICTED_ConfidentialityId       = 6; 
        OTHER_ConfidentialityId            = 99; // The confidentiality is not mapped. See
                                                 // the <code>confidentiality</code>
                                                 // attribute, which contains a data
                                                 // source specific value.
    }
    enum DataLifecycleStateId {
        UNKNOWN_DataLifecycleStateId         = 0; // The type is not mapped. See the
                                                  // <code>data_lifecycle_state</code>
                                                  // attribute, which contains a data
                                                  // source specific value.
        DATA_AT_REST_DataLifecycleStateId    = 1; // The data was stored on physical or
                                                  // logcial media and was not actively
                                                  // moving through the network nor was
                                                  // being processed. E.g., data stored in
                                                  // a database, PDF files in a file
                                                  // share, or EHR records in object
                                                  // storage.
        DATA_IN_TRANSIT_DataLifecycleStateId = 2; // The data was actively moving through
                                                  // the network or from one physical or
                                                  // logical location to another. E.g.,
                                                  // emails being send, data replication
                                                  // or Change Data Capture (CDC) streams,
                                                  // or sensitive data processed on an
                                                  // API.
        DATA_IN_USE_DataLifecycleStateId     = 3; // The data was being processed,
                                                  // accessed, or read by a system, making
                                                  // it active in memory or CPU. E.g.,
                                                  // sensitive data in a Business
                                                  // Intelligence tool, ePHI being
                                                  // processed in an EHR application or a
                                                  // user viewing data stored in a
                                                  // spreadsheet or PDF.
    }
    enum DetectionSystemId {
        UNKNOWN_DetectionSystemId                          = 0;  // The type is not
                                                                 // mapped. See the
                                                                 // <code>detection_system</code>
                                                                 // attribute, which
                                                                 // contains a data source
                                                                 // specific value.
        ENDPOINT_DetectionSystemId                         = 1;  // A dedicated agent or
                                                                 // sensor installed on a
                                                                 // device, either a
                                                                 // dedicated data
                                                                 // security tool or an
                                                                 // Endpoint Detection &
                                                                 // Response (EDR) tool
                                                                 // that can detect
                                                                 // sensitive data and/or
                                                                 // enforce data security
                                                                 // policies. E.g.,
                                                                 // Forcepoint DLP,
                                                                 // Symantec DLP,
                                                                 // Microsoft Defender for
                                                                 // Endpoint (MDE).
        DLP_GATEWAY_DetectionSystemId                      = 2;  // A Data Loss Prevention
                                                                 // (DLP) gateway that is
                                                                 // positioned in-line of
                                                                 // an information store
                                                                 // such as a network
                                                                 // share, a database, or
                                                                 // otherwise that can
                                                                 // detect sensitive data
                                                                 // and/or enforce data
                                                                 // security policies.
        MOBILE_DEVICE_MANAGEMENT_DetectionSystemId         = 3;  // A Mobile Device
                                                                 // Management (MDM) or
                                                                 // Enterprise Mobility
                                                                 // Management (EMM) tool
                                                                 // that can detect
                                                                 // sensitive data and/or
                                                                 // enforce data security
                                                                 // policies on mobile
                                                                 // devices (e.g.,
                                                                 // cellphones, tablets,
                                                                 // End User Devices
                                                                 // [EUDs]).
        DATA_DISCOVERY_CLASSIFICATION_DetectionSystemId    = 4;  // A tool that actively
                                                                 // identifies and
                                                                 // classifies sensitive
                                                                 // data in digitial media
                                                                 // and information stores
                                                                 // in accordance with a
                                                                 // policy or automated
                                                                 // functionality. E.g,
                                                                 // Amazon Macie,
                                                                 // Microsoft Purview.
        SECURE_WEB_GATEWAY_DetectionSystemId               = 5;  // A Secure Web Gateway
                                                                 // (SWG) is any tool that
                                                                 // can detect sensitive
                                                                 // data and/or enforce
                                                                 // data security policies
                                                                 // at a network-edge such
                                                                 // as within a proxy or
                                                                 // firewall service.
        SECURE_EMAIL_GATEWAY_DetectionSystemId             = 6;  // A Secure Email Gateway
                                                                 // (SEG) is any tool that
                                                                 // can detect sensitive
                                                                 // data and/or enforce
                                                                 // data security policies
                                                                 // within email systems.
                                                                 // E.g., Microsoft
                                                                 // Defender for Office,
                                                                 // Google Workspaces.
        DIGITAL_RIGHTS_MANAGEMENT_DetectionSystemId        = 7;  // A Digital Rights
                                                                 // Management (DRM) or a
                                                                 // dedicated Information
                                                                 // Rights Management
                                                                 // (IRM) are tools which
                                                                 // can detect sensitive
                                                                 // data and/or enforce
                                                                 // data security policies
                                                                 // on digitial media via
                                                                 // policy or user access
                                                                 // rights.
        CLOUD_ACCESS_SECURITY_BROKER_DetectionSystemId     = 8;  // A Cloud Access
                                                                 // Security Broker (CASB)
                                                                 // that can detect
                                                                 // sensitive data and/or
                                                                 // enforce data security
                                                                 // policies in-line to
                                                                 // cloud systems such as
                                                                 // the public cloud or
                                                                 // Software-as-a-Service
                                                                 // (SaaS) tool. E.g.,
                                                                 // Forcepoint CASB,
                                                                 // SkyHigh Security.
        DATABASE_ACTIVITY_MONITORING_DetectionSystemId     = 9;  // A Database Activity
                                                                 // Monitoring (DAM) tool
                                                                 // that can detect
                                                                 // sensitive data and/or
                                                                 // enforce data security
                                                                 // policies as part of a
                                                                 // dedicated database or
                                                                 // warehouse monitoring
                                                                 // solution.
        APPLICATION_LEVEL_DLP_DetectionSystemId            = 10; // A built in Data Loss
                                                                 // Prevention (DLP) or
                                                                 // other data security
                                                                 // capability within a
                                                                 // tool or platform such
                                                                 // as an Enterprise
                                                                 // Resource Planning
                                                                 // (ERP) or Customer
                                                                 // Relations Management
                                                                 // (CRM) tool that can
                                                                 // detect sensitive data
                                                                 // and/or enforce data
                                                                 // security policies.
        DEVELOPER_SECURITY_DetectionSystemId               = 11; // Any Developer Security
                                                                 // tool such as an
                                                                 // Infrastrucre-as-Securty
                                                                 // (IAC) scanner, Secrets
                                                                 // Detection, or Secure
                                                                 // Software Development
                                                                 // Lifecycle (SSDLC) tool
                                                                 // that can detect
                                                                 // sensitive data and/or
                                                                 // enforce data security
                                                                 // policies. E.g.,
                                                                 // TruffleHog,
                                                                 // GitGuardian, Git-
                                                                 // Secrets.
        DATA_SECURITY_POSTURE_MANAGEMENT_DetectionSystemId = 12; // A Data Security
                                                                 // Posture Management
                                                                 // (DSPM) tool is a
                                                                 // continuous monitoring
                                                                 // and data discovery
                                                                 // solution that can
                                                                 // detect sensitive data
                                                                 // and/or enforce data
                                                                 // security policies for
                                                                 // local and cloud
                                                                 // environments. E.g.,
                                                                 // Cyera, Sentra, IBM
                                                                 // Polar Security.
        OTHER_DetectionSystemId                            = 99; // Any other type of
                                                                 // detection system or a
                                                                 // multi-variate system
                                                                 // made up of several
                                                                 // other systems.
    }
    string category = 1;
    CategoryId category_id = 2;
    string confidentiality = 3;
    ConfidentialityId confidentiality_id = 4;
    string data_lifecycle_state = 5;
    DataLifecycleStateId data_lifecycle_state_id = 6;
    string detection_pattern = 7;
    string detection_system = 8;
    DetectionSystemId detection_system_id = 9;
    string pattern_match = 10;
    Policy policy = 11;
}

// Database is an OSF object
// defined in io.ocsf objects/database.json
//
// The database object is used for databases which are typically datastore
// services that contain an organized collection of structured and
// unstructured data or a types of data.
message Database {
    enum TypeId {
        UNKNOWN_TypeId         = 0; 
        RELATIONAL_TypeId      = 1; 
        NETWORK_TypeId         = 2; 
        OBJECT_ORIENTED_TypeId = 3; 
        CENTRALIZED_TypeId     = 4; 
        OPERATIONAL_TypeId     = 5; 
        NOSQL_TypeId           = 6; 
        OTHER_TypeId           = 99;
    }
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    DataClassification data_classification = 3;
    string desc = 4;
    repeated Group groups = 5;
    int64 modified_time = 6;
    google.protobuf.Timestamp modified_time_dt = 7;
    string name = 8;
    int64 size = 9;
    string type = 10;
    TypeId type_id = 11;
    string uid = 12;
}

// Databucket is an OSF object
// defined in io.ocsf objects/databucket.json
//
// The databucket object is a basic container that holds data, typically
// organized through the use of data partitions.
message Databucket {
    enum TypeId {
        UNKNOWN_TypeId    = 0; 
        S3_TypeId         = 1; 
        AZURE_BLOB_TypeId = 2; 
        GCP_BUCKET_TypeId = 3; 
        OTHER_TypeId      = 99;
    }
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    DataClassification data_classification = 3;
    string desc = 4;
    File file = 5;
    repeated Group groups = 6;
    int64 modified_time = 7;
    google.protobuf.Timestamp modified_time_dt = 8;
    string name = 9;
    int64 size = 10;
    string type = 11;
    TypeId type_id = 12;
    string uid = 13;
}

// NetworkEndpoint is an OSF object
// defined in io.ocsf objects/network_endpoint.json
//
// The Network Endpoint object describes characteristics of a network
// endpoint. These can be a source or destination of a network connection.
message NetworkEndpoint {
    enum TypeId {
        UNKNOWN_TypeId  = 0;  // The type is unknown.
        SERVER_TypeId   = 1;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Server/'>server</a>.
        DESKTOP_TypeId  = 2;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:DesktopComputer/'>desktop
                              // computer</a>.
        LAPTOP_TypeId   = 3;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:LaptopComputer/'>laptop
                              // computer</a>.
        TABLET_TypeId   = 4;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:TabletComputer/'>tablet
                              // computer</a>.
        MOBILE_TypeId   = 5;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:MobilePhone/'>mobile
                              // phone</a>.
        VIRTUAL_TypeId  = 6;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:VirtualizationSoftware/'>virtual
                              // machine</a>.
        IOT_TypeId      = 7;  // A <a target='_blank'
                              // href='https://www.techtarget.com/iotagenda/definition/IoT-
                              // device'>IOT (Internet of Things) device</a>.
        BROWSER_TypeId  = 8;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Browser/'>web
                              // browser</a>.
        FIREWALL_TypeId = 9;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Firewall/'>networking
                              // firewall</a>.
        SWITCH_TypeId   = 10; // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Switch/'>networking
                              // switch</a>.
        HUB_TypeId      = 11; // A <a target='_blank'
                              // href='https://en.wikipedia.org/wiki/Ethernet_hub'>networking
                              // hub</a>.
        OTHER_TypeId    = 99; // The type is not mapped. See the <code>type</code>
                              // attribute, which contains a data source specific value.
    }
    repeated Agent agent_list = 1;
    AutonomousSystem autonomous_system = 2;
    Container container = 3;
    string domain = 4;
    string hostname = 5;
    DeviceHwInfo hw_info = 6;
    string instance_uid = 7;
    string interface_name = 8;
    string interface_uid = 9;
    repeated string intermediate_ips = 10;
    string ip = 11;
    Location location = 12;
    string mac = 13;
    string name = 14;
    int32 namespace_pid = 15;
    Os os = 16;
    User owner = 17;
    int32 port = 18;
    NetworkProxy proxy_endpoint = 19;
    string subnet_uid = 20;
    string svc_name = 21;
    string type = 22;
    TypeId type_id = 23;
    string uid = 24;
    string vlan_uid = 25;
    string vpc_uid = 26;
    string zone = 27;
}

// Table is an OSF object
// defined in io.ocsf objects/table.json
//
// The table object represents a table within a structured relational database
// or datastore, which contains columns and rows of data that are able to be
// create, updated, deleted and queried.
message Table {
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    string desc = 3;
    repeated Group groups = 4;
    int64 modified_time = 5;
    google.protobuf.Timestamp modified_time_dt = 6;
    string name = 7;
    int64 size = 8;
    string uid = 9;
}

// HttpRequest is an OSF object
// defined in io.ocsf objects/http_request.json
//
// The HTTP Request object represents the attributes of a request made to a
// web server. It encapsulates the details and metadata associated with an
// HTTP request, including the request method, headers, URL, query parameters,
// body content, and other relevant information.
message HttpRequest {
    string args = 1;
    repeated HttpHeader http_headers = 2;
    string http_method = 3;
    int32 length = 4;
    string referrer = 5;
    string uid = 6;
    Url url = 7;
    string user_agent = 8;
    string version = 9;
    repeated string x_forwarded_for = 10;
}

// Policy is an OSF object
// defined in io.ocsf objects/policy.json
//
// The Policy object describes the policies that are applicable. <p>Policy
// attributes provide traceability to the operational state of the security
// product at the time that the event was captured, facilitating forensics,
// troubleshooting, and policy tuning/adjustments.</p>
message Policy {
    string desc = 1;
    Group group = 2;
    bool is_applied = 3;
    string name = 4;
    string uid = 5;
    string version = 6;
}

// AuthFactor is an OSF object
// defined in io.ocsf objects/auth_factor.json
//
// An Authentication Factor object describes a category of methods used for
// identity verification in an authentication attempt.
message AuthFactor {
    enum FactorTypeId {
        UNKNOWN_FactorTypeId           = 0; 
        SMS_FactorTypeId               = 1;  // User receives and inputs a code sent to
                                             // their mobile device via SMS text message.
        SECURITY_QUESTION_FactorTypeId = 2;  // The user responds to a security question
                                             // as part of a question-based authentication
                                             // factor
        PHONE_CALL_FactorTypeId        = 3;  // System calls the user's registered phone
                                             // number and requires the user to answer and
                                             // provide a response.
        BIOMETRIC_FactorTypeId         = 4;  // Devices that verify identity-based on
                                             // user's physical identifiers, such as
                                             // fingerprint scanners or retina scanners.
        PUSH_NOTIFICATION_FactorTypeId = 5;  // Push notification is sent to user's
                                             // registered device and requires the user to
                                             // acknowledge.
        HARDWARE_TOKEN_FactorTypeId    = 6;  // Physical device that generates a code to
                                             // be used for authentication.
        OTP_FactorTypeId               = 7;  // Application generates a one-time password
                                             // (OTP) for use in authentication.
        EMAIL_FactorTypeId             = 8;  // A code or link is sent to a user's
                                             // registered email address.
        U2F_FactorTypeId               = 9;  // Typically involves a hardware token, which
                                             // the user physically interacts with to
                                             // authenticate.
        WEBAUTHN_FactorTypeId          = 10; // Web-based API that enables users to
                                             // register devices as authentication
                                             // factors.
        PASSWORD_FactorTypeId          = 11; // The user enters a password that they have
                                             // previously established.
        OTHER_FactorTypeId             = 99;
    }
    Device device = 1;
    string email_addr = 2;
    string factor_type = 3;
    FactorTypeId factor_type_id = 4;
    bool is_hotp = 5;
    bool is_totp = 6;
    string phone_number = 7;
    string provider = 8;
    repeated string security_questions = 9;
}

// Certificate is an OSF object
// defined in io.ocsf objects/certificate.json
//
// The Digital Certificate, also known as a Public Key Certificate, object
// contains information about the ownership and usage of a public key. It
// serves as a means to establish trust in the authenticity and integrity of
// the public key and the associated entity. Defined by D3FEND <a
// target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:Certificate/'>d3f:Certificate</a>.
message Certificate {
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    int64 expiration_time = 3;
    google.protobuf.Timestamp expiration_time_dt = 4;
    repeated Fingerprint fingerprints = 5;
    string issuer = 6;
    string serial_number = 7;
    string subject = 8;
    string uid = 9;
    string version = 10;
}

// Service is an OSF object
// defined in io.ocsf objects/service.json
//
// The Service object describes characteristics of a service, <code> e.g. AWS
// EC2. </code>
message Service {
    repeated string labels = 1;
    string name = 2;
    string uid = 3;
    string version = 4;
}

// Session is an OSF object
// defined in io.ocsf objects/session.json
//
// The Session object describes details about an authenticated session. e.g.
// Session Creation Time, Session Issuer. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:Session/'>d3f:Session</a>.
message Session {
    int32 count = 1;
    int64 created_time = 2;
    google.protobuf.Timestamp created_time_dt = 3;
    string credential_uid = 4;
    string expiration_reason = 5;
    int64 expiration_time = 6;
    google.protobuf.Timestamp expiration_time_dt = 7;
    bool is_mfa = 8;
    bool is_remote = 9;
    bool is_vpn = 10;
    string issuer = 11;
    string terminal = 12;
    string uid = 13;
    string uid_alt = 14;
    string uuid = 15;
}

// ManagedEntity is an OSF object
// defined in io.ocsf objects/managed_entity.json
//
// The Managed Entity object describes the type and version of an entity, such
// as a policy or configuration.
message ManagedEntity {
    bytes data = 1;
    string name = 2;
    string type = 3;
    string uid = 4;
    string version = 5;
}

// NetworkConnectionInfo is an OSF object
// defined in io.ocsf objects/network_connection_info.json
//
// The Network Connection Information object describes characteristics of a
// network connection. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:NetworkSession/'>d3f:NetworkSession</a>.
message NetworkConnectionInfo {
    enum BoundaryId {
        UNKNOWN_BoundaryId                 = 0;  // The connection boundary is unknown.
        LOCALHOST_BoundaryId               = 1;  // Local network traffic on the same
                                                 // endpoint.
        INTERNAL_BoundaryId                = 2;  // Internal network traffic between two
                                                 // endpoints inside network.
        EXTERNAL_BoundaryId                = 3;  // External network traffic between two
                                                 // endpoints on the Internet or outside
                                                 // the network.
        SAME_VPC_BoundaryId                = 4;  // Through another resource in the same
                                                 // VPC
        INTERNET_VPC_GATEWAY_BoundaryId    = 5;  // Through an Internet gateway or a
                                                 // gateway VPC endpoint
        VIRTUAL_PRIVATE_GATEWAY_BoundaryId = 6;  // Through a virtual private gateway
        INTRA_REGION_VPC_BoundaryId        = 7;  // Through an intra-region VPC peering
                                                 // connection
        INTER_REGION_VPC_BoundaryId        = 8;  // Through an inter-region VPC peering
                                                 // connection
        LOCAL_GATEWAY_BoundaryId           = 9;  // Through a local gateway
        GATEWAY_VPC_BoundaryId             = 10; // Through a gateway VPC endpoint (Nitro-
                                                 // based instances only)
        INTERNET_GATEWAY_BoundaryId        = 11; // Through an Internet gateway (Nitro-
                                                 // based instances only)
        OTHER_BoundaryId                   = 99; // The boundary is not mapped. See the
                                                 // <code>boundary</code> attribute, which
                                                 // contains a data source specific value.
    }
    enum DirectionId {
        UNKNOWN_DirectionId  = 0;  // The connection direction is unknown.
        INBOUND_DirectionId  = 1;  // Inbound network connection. The connection was
                                   // originated from the Internet or outside network,
                                   // destined for services on the inside network.
        OUTBOUND_DirectionId = 2;  // Outbound network connection. The connection was
                                   // originated from inside the network, destined for
                                   // services on the Internet or outside network.
        LATERAL_DirectionId  = 3;  // Lateral network connection. The connection was
                                   // originated from inside the network, destined for
                                   // services on the inside network.
        OTHER_DirectionId    = 99; // The direction is not mapped. See the
                                   // <code>direction</code> attribute, which contains a
                                   // data source specific value.
    }
    enum ProtocolVerId {
        UNKNOWN_ProtocolVerId                          = 0; 
        INTERNET_PROTOCOL_VERSION_4_IPV4_ProtocolVerId = 4; 
        INTERNET_PROTOCOL_VERSION_6_IPV6_ProtocolVerId = 6; 
        OTHER_ProtocolVerId                            = 99;
    }
    string boundary = 1;
    BoundaryId boundary_id = 2;
    string direction = 3;
    DirectionId direction_id = 4;
    string protocol_name = 5;
    int32 protocol_num = 6;
    string protocol_ver = 7;
    ProtocolVerId protocol_ver_id = 8;
    Session session = 9;
    int32 tcp_flags = 10;
    string uid = 11;
}

// LoadBalancer is an OSF object
// defined in io.ocsf objects/load_balancer.json
//
// The load balancer object describes the load balancer entity and contains
// additional information regarding the distribution of traffic across a
// network.
message LoadBalancer {
    string classification = 1;
    int32 code = 2;
    NetworkEndpoint dst_endpoint = 3;
    repeated EndpointConnection endpoint_connections = 4;
    string error_message = 5;
    string message = 6;
    repeated Metric metrics = 7;
    string name = 8;
    string status_detail = 9;
    string uid = 10;
}

// NetworkProxy is an OSF object
// defined in io.ocsf objects/network_proxy.json
//
// The network proxy endpoint object describes a proxy server, which acts as
// an intermediary between a client requesting a resource and the server
// providing that resource.  Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:ProxyServer/'>d3f:ProxyServer</a>.
message NetworkProxy {
    enum TypeId {
        UNKNOWN_TypeId  = 0;  // The type is unknown.
        SERVER_TypeId   = 1;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Server/'>server</a>.
        DESKTOP_TypeId  = 2;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:DesktopComputer/'>desktop
                              // computer</a>.
        LAPTOP_TypeId   = 3;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:LaptopComputer/'>laptop
                              // computer</a>.
        TABLET_TypeId   = 4;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:TabletComputer/'>tablet
                              // computer</a>.
        MOBILE_TypeId   = 5;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:MobilePhone/'>mobile
                              // phone</a>.
        VIRTUAL_TypeId  = 6;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:VirtualizationSoftware/'>virtual
                              // machine</a>.
        IOT_TypeId      = 7;  // A <a target='_blank'
                              // href='https://www.techtarget.com/iotagenda/definition/IoT-
                              // device'>IOT (Internet of Things) device</a>.
        BROWSER_TypeId  = 8;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Browser/'>web
                              // browser</a>.
        FIREWALL_TypeId = 9;  // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Firewall/'>networking
                              // firewall</a>.
        SWITCH_TypeId   = 10; // A <a target='_blank'
                              // href='https://d3fend.mitre.org/dao/artifact/d3f:Switch/'>networking
                              // switch</a>.
        HUB_TypeId      = 11; // A <a target='_blank'
                              // href='https://en.wikipedia.org/wiki/Ethernet_hub'>networking
                              // hub</a>.
        OTHER_TypeId    = 99; // The type is not mapped. See the <code>type</code>
                              // attribute, which contains a data source specific value.
    }
    repeated Agent agent_list = 1;
    AutonomousSystem autonomous_system = 2;
    Container container = 3;
    string domain = 4;
    string hostname = 5;
    DeviceHwInfo hw_info = 6;
    string instance_uid = 7;
    string interface_name = 8;
    string interface_uid = 9;
    repeated string intermediate_ips = 10;
    string ip = 11;
    Location location = 12;
    string mac = 13;
    string name = 14;
    int32 namespace_pid = 15;
    Os os = 16;
    User owner = 17;
    int32 port = 18;
    NetworkProxy proxy_endpoint = 19;
    string subnet_uid = 20;
    string svc_name = 21;
    string type = 22;
    TypeId type_id = 23;
    string uid = 24;
    string vlan_uid = 25;
    string vpc_uid = 26;
    string zone = 27;
}

// HttpResponse is an OSF object
// defined in io.ocsf objects/http_response.json
//
// The HTTP Response object contains detailed information about the response
// sent from a web server to the requester. It encompasses attributes and
// metadata that describe the response status, headers, body content, and
// other relevant information.
message HttpResponse {
    int32 code = 1;
    string content_type = 2;
    repeated HttpHeader http_headers = 3;
    int32 latency = 4;
    int32 length = 5;
    string message = 6;
    string status = 7;
}

// Tls is an OSF object
// defined in io.ocsf objects/tls.json
//
// The Transport Layer Security (TLS) object describes the negotiated TLS
// protocol used for secure communications over an establish network
// connection.
message Tls {
    int32 alert = 1;
    Certificate certificate = 2;
    repeated string certificate_chain = 3;
    string cipher = 4;
    repeated string client_ciphers = 5;
    repeated TlsExtension extension_list = 6;
    int32 handshake_dur = 7;
    Fingerprint ja3_hash = 8;
    Fingerprint ja3s_hash = 9;
    int32 key_length = 10;
    repeated San sans = 11;
    repeated string server_ciphers = 12;
    string sni = 13;
    repeated TlsExtension tls_extension_list = 14;
    string version = 15;
}

// NetworkTraffic is an OSF object
// defined in io.ocsf objects/network_traffic.json
//
// The Network Traffic object describes characteristics of network traffic.
// Network traffic refers to data moving across a network at a given point of
// time. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:NetworkTraffic/'>d3f:NetworkTraffic</a>.
message NetworkTraffic {
    int64 bytes = 1;
    int64 bytes_in = 2;
    int64 bytes_out = 3;
    int64 chunks = 4;
    int64 chunks_in = 5;
    int64 chunks_out = 6;
    int64 packets = 7;
    int64 packets_in = 8;
    int64 packets_out = 9;
}

// Url is an OSF object
// defined in io.ocsf objects/url.json
//
// The Uniform Resource Locator(URL) object describes the characteristics of a
// URL. Defined in <a target='_blank'
// href='https://datatracker.ietf.org/doc/html/rfc1738'>RFC 1738</a> and by
// D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:URL/'>d3f:URL</a>.
message Url {
    enum CategoryIds {
        UNKNOWN_CategoryIds                         = 0;   // The Domain/URL category is
                                                           // unknown.
        ADULT_MATURE_CONTENT_CategoryIds            = 1;  
        PORNOGRAPHY_CategoryIds                     = 3;  
        SEX_EDUCATION_CategoryIds                   = 4;  
        INTIMATE_APPAREL_SWIMSUIT_CategoryIds       = 5;  
        NUDITY_CategoryIds                          = 6;  
        EXTREME_CategoryIds                         = 7;  
        SCAM_QUESTIONABLE_ILLEGAL_CategoryIds       = 9;  
        GAMBLING_CategoryIds                        = 11; 
        VIOLENCE_HATE_RACISM_CategoryIds            = 14; 
        WEAPONS_CategoryIds                         = 15; 
        ABORTION_CategoryIds                        = 16; 
        HACKING_CategoryIds                         = 17; 
        PHISHING_CategoryIds                        = 18; 
        ENTERTAINMENT_CategoryIds                   = 20; 
        BUSINESS_ECONOMY_CategoryIds                = 21; 
        ALTERNATIVE_SPIRITUALITY_BELIEF_CategoryIds = 22; 
        ALCOHOL_CategoryIds                         = 23; 
        TOBACCO_CategoryIds                         = 24; 
        CONTROLLED_SUBSTANCES_CategoryIds           = 25; 
        CHILD_PORNOGRAPHY_CategoryIds               = 26; 
        EDUCATION_CategoryIds                       = 27; 
        CHARITABLE_ORGANIZATIONS_CategoryIds        = 29; 
        ART_CULTURE_CategoryIds                     = 30; 
        FINANCIAL_SERVICES_CategoryIds              = 31; 
        BROKERAGE_TRADING_CategoryIds               = 32; 
        GAMES_CategoryIds                           = 33; 
        GOVERNMENT_LEGAL_CategoryIds                = 34; 
        MILITARY_CategoryIds                        = 35; 
        POLITICAL_SOCIAL_ADVOCACY_CategoryIds       = 36; 
        HEALTH_CategoryIds                          = 37; 
        TECHNOLOGY_INTERNET_CategoryIds             = 38; 
        SEARCH_ENGINES_PORTALS_CategoryIds          = 40; 
        MALICIOUS_SOURCES_MALNETS_CategoryIds       = 43; 
        MALICIOUS_OUTBOUND_DATA_BOTNETS_CategoryIds = 44; 
        JOB_SEARCH_CAREERS_CategoryIds              = 45; 
        NEWS_MEDIA_CategoryIds                      = 46; 
        PERSONALS_DATING_CategoryIds                = 47; 
        REFERENCE_CategoryIds                       = 49; 
        MIXED_CONTENT_POTENTIALLY_ADULT_CategoryIds = 50; 
        CHAT_IM_SMS_CategoryIds                     = 51; 
        EMAIL_CategoryIds                           = 52; 
        NEWSGROUPS_FORUMS_CategoryIds               = 53; 
        RELIGION_CategoryIds                        = 54; 
        SOCIAL_NETWORKING_CategoryIds               = 55; 
        FILE_STORAGE_SHARING_CategoryIds            = 56; 
        REMOTE_ACCESS_TOOLS_CategoryIds             = 57; 
        SHOPPING_CategoryIds                        = 58; 
        AUCTIONS_CategoryIds                        = 59; 
        REAL_ESTATE_CategoryIds                     = 60; 
        SOCIETY_DAILY_LIVING_CategoryIds            = 61; 
        PERSONAL_SITES_CategoryIds                  = 63; 
        RESTAURANTS_DINING_FOOD_CategoryIds         = 64; 
        SPORTS_RECREATION_CategoryIds               = 65; 
        TRAVEL_CategoryIds                          = 66; 
        VEHICLES_CategoryIds                        = 67; 
        HUMOR_JOKES_CategoryIds                     = 68; 
        SOFTWARE_DOWNLOADS_CategoryIds              = 71; 
        PEER_TO_PEER_P2P_CategoryIds                = 83; 
        AUDIO_VIDEO_CLIPS_CategoryIds               = 84; 
        OFFICE_BUSINESS_APPLICATIONS_CategoryIds    = 85; 
        PROXY_AVOIDANCE_CategoryIds                 = 86; 
        FOR_KIDS_CategoryIds                        = 87; 
        WEB_ADS_ANALYTICS_CategoryIds               = 88; 
        WEB_HOSTING_CategoryIds                     = 89; 
        UNCATEGORIZED_CategoryIds                   = 90; 
        SUSPICIOUS_CategoryIds                      = 92; 
        SEXUAL_EXPRESSION_CategoryIds               = 93; 
        TRANSLATION_CategoryIds                     = 95; 
        NON_VIEWABLE_INFRASTRUCTURE_CategoryIds     = 96; 
        CONTENT_SERVERS_CategoryIds                 = 97; 
        PLACEHOLDERS_CategoryIds                    = 98; 
        OTHER_CategoryIds                           = 99;  // The Domain/URL category is
                                                           // not mapped. See the
                                                           // <code>categories</code>
                                                           // attribute, which contains a
                                                           // data source specific value.
        SPAM_CategoryIds                            = 101;
        POTENTIALLY_UNWANTED_SOFTWARE_CategoryIds   = 102;
        DYNAMIC_DNS_HOST_CategoryIds                = 103;
        E_CARD_INVITATIONS_CategoryIds              = 106;
        INFORMATIONAL_CategoryIds                   = 107;
        COMPUTER_INFORMATION_SECURITY_CategoryIds   = 108;
        INTERNET_CONNECTED_DEVICES_CategoryIds      = 109;
        INTERNET_TELEPHONY_CategoryIds              = 110;
        ONLINE_MEETINGS_CategoryIds                 = 111;
        MEDIA_SHARING_CategoryIds                   = 112;
        RADIO_AUDIO_STREAMS_CategoryIds             = 113;
        TV_VIDEO_STREAMS_CategoryIds                = 114;
        PIRACY_COPYRIGHT_CONCERNS_CategoryIds       = 118;
        MARIJUANA_CategoryIds                       = 121;
    }
    repeated string categories = 1;
    repeated CategoryIds category_ids = 2;
    string hostname = 3;
    string path = 4;
    int32 port = 5;
    string query_string = 6;
    string resource_type = 7;
    string scheme = 8;
    string subdomain = 9;
    string url_string = 10;
}

// HttpCookie is an OSF object
// defined in io.ocsf objects/http_cookie.json
//
// The HTTP Cookie object, also known as a web cookie or browser cookie,
// contains details and values pertaining to a small piece of data that a
// server sends to a user's web browser. This data is then stored by the
// browser and sent back to the server with subsequent requests, allowing the
// server to remember and track certain information about the user's browsing
// session or preferences.
message HttpCookie {
    string domain = 1;
    int64 expiration_time = 2;
    google.protobuf.Timestamp expiration_time_dt = 3;
    bool http_only = 4;
    bool is_http_only = 5;
    bool is_secure = 6;
    string name = 7;
    string path = 8;
    string samesite = 9;
    bool secure = 10;
    string value = 11;
}

// DnsAnswer is an OSF object
// defined in io.ocsf objects/dns_answer.json
//
// The DNS Answer object represents a specific response provided by the Domain
// Name System (DNS) when querying for information about a domain or
// performing a DNS operation. It encapsulates the relevant details and data
// returned by the DNS server in response to a query.
message DnsAnswer {
    enum FlagIds {
        UNKNOWN_FlagIds              = 0; 
        AUTHORITATIVE_ANSWER_FlagIds = 1; 
        TRUNCATED_RESPONSE_FlagIds   = 2; 
        RECURSION_DESIRED_FlagIds    = 3; 
        RECURSION_AVAILABLE_FlagIds  = 4; 
        AUTHENTIC_DATA_FlagIds       = 5; 
        CHECKING_DISABLED_FlagIds    = 6; 
        OTHER_FlagIds                = 99; // The event DNS header flag is not mapped.
    }
    string class = 1;
    repeated FlagIds flag_ids = 2;
    repeated string flags = 3;
    int32 packet_uid = 4;
    string rdata = 5;
    int32 ttl = 6;
    string type = 7;
}

// DnsQuery is an OSF object
// defined in io.ocsf objects/dns_query.json
//
// The DNS query object represents a specific request made to the Domain Name
// System (DNS) to retrieve information about a domain or perform a DNS
// operation. This object encapsulates the necessary attributes and methods to
// construct and send DNS queries, specify the query type (e.g., A, AAAA, MX).
// Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:DNSLookup/'>d3f:DNSLookup</a>.
message DnsQuery {
    enum OpcodeId {
        QUERY_OpcodeId         = 0; // Standard query
        INVERSE_QUERY_OpcodeId = 1; // Inverse query, obsolete
        STATUS_OpcodeId        = 2; // Server status request
        RESERVED_OpcodeId      = 3; // Reserved, not used
        NOTIFY_OpcodeId        = 4; // Zone change notification
        UPDATE_OpcodeId        = 5; // Dynamic DNS update
        DSO_MESSAGE_OpcodeId   = 6; // DNS Stateful Operations (DSO)
    }
    string class = 1;
    string hostname = 2;
    string opcode = 3;
    OpcodeId opcode_id = 4;
    int32 packet_uid = 5;
    string type = 6;
}

// NetworkInterface is an OSF object
// defined in io.ocsf objects/network_interface.json
//
// The Network Interface object describes the type and associated attributes
// of a network interface.
message NetworkInterface {
    enum TypeId {
        UNKNOWN_TypeId  = 0; 
        WIRED_TypeId    = 1; 
        WIRELESS_TypeId = 2; 
        MOBILE_TypeId   = 3; 
        TUNNEL_TypeId   = 4; 
        OTHER_TypeId    = 99;
    }
    string hostname = 1;
    string ip = 2;
    string mac = 3;
    string name = 4;
    string namespace = 5;
    int32 subnet_prefix = 6;
    string type = 7;
    TypeId type_id = 8;
    string uid = 9;
}

// Display is an OSF object
// defined in io.ocsf objects/display.json
//
// The Display object contains information about the physical or virtual
// display connected to a computer system.
message Display {
    int32 color_depth = 1;
    int32 physical_height = 2;
    int32 physical_orientation = 3;
    int32 physical_width = 4;
    int32 scale_factor = 5;
}

// Request is an OSF object
// defined in io.ocsf objects/request.json
//
// The Request Elements object describes characteristics of an API request.
message Request {
    repeated Container containers = 1;
    bytes data = 2;
    repeated string flags = 3;
    string uid = 4;
}

// Response is an OSF object
// defined in io.ocsf objects/response.json
//
// The Response Elements object describes characteristics of an API response.
message Response {
    int32 code = 1;
    repeated Container containers = 2;
    bytes data = 3;
    string error = 4;
    string error_message = 5;
    repeated string flags = 6;
    string message = 7;
}

// DceRpc is an OSF object
// defined in io.ocsf objects/dce_rpc.json
//
// The DCE/RPC, or Distributed Computing Environment/Remote Procedure Call,
// object describes the remote procedure call system for distributed computing
// environments. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:RemoteProcedureCall/'>d3f:RemoteProcedureCall</a>.
message DceRpc {
    string command = 1;
    string command_response = 2;
    repeated string flags = 3;
    int32 opnum = 4;
    RpcInterface rpc_interface = 5;
}

// Hassh is an OSF object
// defined in io.ocsf objects/hassh.json
//
// The HASSH object contains SSH network fingerprinting values for specific
// client/server implementations. It provides a standardized way of
// identifying and categorizing SSH connections based on their unique
// characteristics and behavior.
message Hassh {
    string algorithm = 1;
    Fingerprint fingerprint = 2;
}

// Email is an OSF object
// defined in io.ocsf objects/email.json
//
// The Email object describes the email metadata such as sender, recipients,
// and direction. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:Email/'>d3f:Email</a>.
message Email {
    repeated string cc = 1;
    DataClassification data_classification = 2;
    string delivered_to = 3;
    string from = 4;
    string message_uid = 5;
    string raw_header = 6;
    string reply_to = 7;
    int64 size = 8;
    string smtp_from = 9;
    repeated string smtp_to = 10;
    string subject = 11;
    repeated string to = 12;
    string uid = 13;
    repeated string x_originating_ip = 14;
}

// EmailAuth is an OSF object
// defined in io.ocsf objects/email_auth.json
//
// The Email Authentication object describes the Sender Policy Framework
// (SPF), DomainKeys Identified Mail (DKIM) and Domain-based Message
// Authentication, Reporting and Conformance (DMARC) attributes of an email.
message EmailAuth {
    string dkim = 1;
    string dkim_domain = 2;
    string dkim_signature = 3;
    string dmarc = 4;
    string dmarc_override = 5;
    string dmarc_policy = 6;
    string spf = 7;
}

// CisBenchmarkResult is an OSF object
// defined in io.ocsf objects/cis_benchmark_result.json
//
// The CIS Benchmark Result object contains information as defined by the
// Center for Internet Security (<a target='_blank'
// href='https://www.cisecurity.org/cis-benchmarks/'>CIS</a>) benchmark result.
// CIS Benchmarks are a collection of best practices for securely configuring
// IT systems, software, networks, and cloud infrastructure.
message CisBenchmarkResult {
    string desc = 1;
    string name = 2;
    Remediation remediation = 3;
    Rule rule = 4;
}

// QueryInfo is an OSF object
// defined in io.ocsf objects/query_info.json
//
// The query info object holds information related to data access within a
// datastore. To access, manipulate, delete, or retrieve data from a
// datastore, a query must be written using a specific syntax.
message QueryInfo {
    int64 bytes = 1;
    bytes data = 2;
    string name = 3;
    string query_string = 4;
    int64 query_time = 5;
    google.protobuf.Timestamp query_time_dt = 6;
    string uid = 7;
}

// KbArticle is an OSF object
// defined in io.ocsf objects/kb_article.json
//
// The KB Article object contains metadata that describes the patch or update.
message KbArticle {
    string bulletin = 1;
    string classification = 2;
    int64 created_time = 3;
    google.protobuf.Timestamp created_time_dt = 4;
    bool is_superseded = 5;
    Os os = 6;
    Product product = 7;
    string severity = 8;
    int64 size = 9;
    string src_url = 10;
    string title = 11;
    string uid = 12;
}

// PeripheralDevice is an OSF object
// defined in io.ocsf objects/peripheral_device.json
//
// The peripheral device object describes the identity, vendor and model of a
// peripheral device.
message PeripheralDevice {
    string class = 1;
    string model = 2;
    string name = 3;
    string serial_number = 4;
    string uid = 5;
    string vendor_name = 6;
}

// SecurityState is an OSF object
// defined in io.ocsf objects/security_state.json
//
// The Security State object describes the security related state of a managed
// entity.
message SecurityState {
    enum StateId {
        UNKNOWN_StateId                        = 0;  // The security state is unknown.
        MISSING_OR_OUTDATED_CONTENT_StateId    = 1;  // The content is missing or
                                                     // outdated.
        POLICY_MISMATCH_StateId                = 2;  // Not in compliance with the
                                                     // expected security policy.
        IN_NETWORK_QUARANTINE_StateId          = 3;  // Isolated from the network.
        PROTECTION_OFF_StateId                 = 4;  // Not protected by a security
                                                     // solution.
        PROTECTION_MALFUNCTION_StateId         = 5;  // The security solution is not
                                                     // functioning properly.
        PROTECTION_NOT_LICENSED_StateId        = 6;  // The security solution does not
                                                     // have a valid license.
        UNREMEDIATED_THREAT_StateId            = 7;  // A detected threat has not been
                                                     // remediated.
        SUSPICIOUS_REPUTATION_StateId          = 8;  // Reputation of the entity is
                                                     // suspicious.
        REBOOT_PENDING_StateId                 = 9;  // A reboot is required for one or
                                                     // more pending actions.
        CONTENT_IS_LOCKED_StateId              = 10; // The content is locked to a
                                                     // specific version.
        NOT_INSTALLED_StateId                  = 11; // The entity is not installed.
        WRITABLE_SYSTEM_PARTITION_StateId      = 12; // The system partition is writeable.
        SAFETYNET_FAILURE_StateId              = 13; // The device has failed the
                                                     // SafetyNet check.
        FAILED_BOOT_VERIFY_StateId             = 14; // The device has failed the boot
                                                     // verification process.
        MODIFIED_EXECUTION_ENVIRONMENT_StateId = 15; // The execution environment has been
                                                     // modified.
        SELINUX_DISABLED_StateId               = 16; // The SELinux security feature has
                                                     // been disabled.
        ELEVATED_PRIVILEGE_SHELL_StateId       = 17; // An elevated privilege shell has
                                                     // been detected.
        IOS_FILE_SYSTEM_ALTERED_StateId        = 18; // The file system has been altered
                                                     // on an iOS device.
        OPEN_REMOTE_ACCESS_StateId             = 19; // Remote access is enabled.
        OTA_UPDATES_DISABLED_StateId           = 20; // Mobile OTA (Over The Air) updates
                                                     // have been disabled.
        ROOTED_StateId                         = 21; // The device has been modified to
                                                     // allow root access.
        ANDROID_PARTITION_MODIFIED_StateId     = 22; // The Android partition has been
                                                     // modified.
        COMPLIANCE_FAILURE_StateId             = 23; // The entity is not compliant with
                                                     // the associated security policy.
        OTHER_StateId                          = 99; // The security state is not mapped.
                                                     // See the <code>state</code>
                                                     // attribute, which contains data
                                                     // source specific values.
    }
    string state = 1;
    StateId state_id = 2;
}

// WebResource is an OSF object
// defined in io.ocsf objects/web_resource.json
//
// The Web Resource object describes characteristics of a web resource that
// was affected by the activity/event.
message WebResource {
    bytes data = 1;
    DataClassification data_classification = 2;
    string desc = 3;
    repeated string labels = 4;
    string name = 5;
    string type = 6;
    string uid = 7;
    string url_string = 8;
}

// Product is an OSF object
// defined in io.ocsf objects/product.json
//
// The Product object describes characteristics of a software product.
message Product {
    string cpe_name = 1;
    DataClassification data_classification = 2;
    Feature feature = 3;
    string lang = 4;
    string name = 5;
    string path = 6;
    string uid = 7;
    string url_string = 8;
    string vendor_name = 9;
    string version = 10;
}

// Scan is an OSF object
// defined in io.ocsf objects/scan.json
//
// The Scan object describes characteristics of a proactive scan.
message Scan {
    enum TypeId {
        UNKNOWN_TypeId           = 0; 
        MANUAL_TypeId            = 1;  // The scan was manually initiated by the user or
                                       // administrator.
        SCHEDULED_TypeId         = 2;  // The scan was started based on scheduler.
        UPDATED_CONTENT_TypeId   = 3;  // The scan was triggered by a content update.
        QUARANTINED_ITEMS_TypeId = 4;  // The scan was triggered by newly quarantined
                                       // items.
        ATTACHED_MEDIA_TypeId    = 5;  // The scan was triggered by the attachment of
                                       // removable media.
        USER_LOGON_TypeId        = 6;  // The scan was started due to a user logon.
        ELAM_TypeId              = 7;  // The scan was triggered by an Early Launch Anti-
                                       // Malware (ELAM) detection.
        OTHER_TypeId             = 99; // The scan type id is not mapped. See the
                                       // <code>type</code> attribute, which contains a
                                       // data source specific value.
    }
    string name = 1;
    string type = 2;
    TypeId type_id = 3;
    string uid = 4;
}

// Idp is an OSF object
// defined in io.ocsf objects/idp.json
//
// The Identity Provider object contains detailed information about a provider
// responsible for creating, maintaining, and managing identity information
// while offering authentication services to applications. An Identity
// Provider (IdP) serves as a trusted authority that verifies the identity of
// users and issues authentication tokens or assertions to enable secure
// access to applications or services.
message Idp {
    string name = 1;
    string uid = 2;
}

// SubTechnique is an OSF object
// defined in io.ocsf objects/sub_technique.json
//
// The Sub Technique object describes the sub technique ID and/or name
// associated to an attack, as defined by <a target='_blank'
// href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK
// Matrix<sup>TM</sup></a>.
message SubTechnique {
    string name = 1;
    string src_url = 2;
    string uid = 3;
}

// Tactic is an OSF object
// defined in io.ocsf objects/tactic.json
//
// The Tactic object describes the tactic ID and/or name that is associated to
// an attack, as defined by <a target='_blank'
// href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK
// Matrix<sup>TM</sup></a>.
message Tactic {
    string name = 1;
    string src_url = 2;
    string uid = 3;
}

// Technique is an OSF object
// defined in io.ocsf objects/technique.json
//
// The Technique object describes the technique ID and/or name associated to
// an attack, as defined by <a target='_blank'
// href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK
// Matrix<sup>TM</sup></a>.
message Technique {
    string name = 1;
    string src_url = 2;
    string uid = 3;
}

// Account is an OSF object
// defined in io.ocsf objects/account.json
//
// The Account object contains details about the account that initiated or
// performed a specific activity within a system or application.
message Account {
    enum TypeId {
        UNKNOWN_TypeId          = 0;  // The account type is unknown.
        LDAP_ACCOUNT_TypeId     = 1; 
        WINDOWS_ACCOUNT_TypeId  = 2; 
        AWS_IAM_USER_TypeId     = 3; 
        AWS_IAM_ROLE_TypeId     = 4; 
        GCP_ACCOUNT_TypeId      = 5; 
        AZURE_AD_ACCOUNT_TypeId = 6; 
        MAC_OS_ACCOUNT_TypeId   = 7; 
        APPLE_ACCOUNT_TypeId    = 8; 
        LINUX_ACCOUNT_TypeId    = 9; 
        AWS_ACCOUNT_TypeId      = 10;
        OTHER_TypeId            = 99; // The account type is not mapped.
    }
    repeated string labels = 1;
    string name = 2;
    string type = 3;
    TypeId type_id = 4;
    string uid = 5;
}

// Organization is an OSF object
// defined in io.ocsf objects/organization.json
//
// The Organization object describes characteristics of an organization or
// company and its division if any.
message Organization {
    string name = 1;
    string ou_name = 2;
    string ou_uid = 3;
    string uid = 4;
}

// Agent is an OSF object
// defined in io.ocsf objects/agent.json
//
// An Agent (also known as a Sensor) is typically installed on an Operating
// System (OS) and serves as a specialized software component that can be
// designed to monitor, detect, collect, archive, or take action. These
// activities and possible actions are defined by the upstream system
// controlling the Agent and its intended purpose. For instance, an Agent can
// include Endpoint Detection & Response (EDR) agents, backup/disaster
// recovery sensors, Application Performance Monitoring or profiling sensors,
// and similar software.
message Agent {
    enum TypeId {
        UNKNOWN_TypeId                              = 0;  // The type is unknown.
        ENDPOINT_DETECTION_AND_RESPONSE_TypeId      = 1;  // Any EDR sensor or agent. Or
                                                          // any tool that provides
                                                          // similar threat detection,
                                                          // anti-malware, anti-ransomware,
                                                          // or similar capabilities.
                                                          // E.g., Crowdstrike Falcon,
                                                          // Microsoft Defender for
                                                          // Endpoint, Wazuh.
        DATA_LOSS_PREVENTION_TypeId                 = 2;  // Any DLP sensor or agent. Or
                                                          // any tool that provides
                                                          // similar data classification,
                                                          // data loss detection, and/or
                                                          // data loss prevention
                                                          // capabilities. E.g.,
                                                          // Forcepoint DLP, Microsoft
                                                          // Purview, Symantec DLP.
        BACKUP_RECOVERY_TypeId                      = 3;  // Any agent or sensor that
                                                          // provides backups, archival,
                                                          // or recovery capabilities.
                                                          // E.g., Azure Backup, AWS
                                                          // Backint Agent.
        PERFORMANCE_MONITORING_OBSERVABILITY_TypeId = 4;  // Any agent or sensor that
                                                          // provides Application
                                                          // Performance Monitoring (APM),
                                                          // active tracing, profiling, or
                                                          // other observability use cases
                                                          // and optionally forwards the
                                                          // logs. E.g., New Relic Agent,
                                                          // Datadog Agent, Azure Monitor
                                                          // Agent.
        VULNERABILITY_MANAGEMENT_TypeId             = 5;  // Any agent or sensor that
                                                          // provides vulnerability
                                                          // management or scanning
                                                          // capabilities. E.g., Qualys
                                                          // VMDR, Microsoft Defender for
                                                          // Endpoint, Crowdstrike
                                                          // Spotlight, Amazon Inspector
                                                          // Agent.
        LOG_FORWARDING_TypeId                       = 6;  // Any agent or sensor that
                                                          // forwards logs to a 3rd party
                                                          // storage system such as a data
                                                          // lake or SIEM. E.g., Splunk
                                                          // Universal Forwarder, Tenzir,
                                                          // FluentBit, Amazon CloudWatch
                                                          // Agent, Amazon Kinesis Agent.
        MOBILE_DEVICE_MANAGEMENT_TypeId             = 7;  // Any agent or sensor
                                                          // responsible for providing
                                                          // Mobile Device Management
                                                          // (MDM) or Mobile Enterprise
                                                          // Management (MEM)
                                                          // capabilities. E.g., JumpCloud
                                                          // Agent, Esper Agent, Jamf Pro
                                                          // binary.
        CONFIGURATION_MANAGEMENT_TypeId             = 8;  // Any agent or sensor that
                                                          // provides configuration
                                                          // management of a device, such
                                                          // as scanning for software,
                                                          // license management, or
                                                          // applying configurations.
                                                          // E.g., AWS Systems Manager
                                                          // Agent, Flexera, ServiceNow
                                                          // MID Server.
        REMOTE_ACCESS_TypeId                        = 9;  // Any agent or sensor that
                                                          // provides remote access
                                                          // capabilities to a device.
                                                          // E.g., BeyondTrust, Amazon
                                                          // Systems Manager Agent,
                                                          // Verkada Agent.
        OTHER_TypeId                                = 99; // The type is not mapped. See
                                                          // the <code>type</code>
                                                          // attribute, which contains a
                                                          // data source specific value.
    }
    string name = 1;
    repeated Policy policies = 2;
    string type = 3;
    TypeId type_id = 4;
    string uid = 5;
    string uid_alt = 6;
    string vendor_name = 7;
    string version = 8;
}

// Container is an OSF object
// defined in io.ocsf objects/container.json
//
// The Container object describes an instance of a specific container. A
// container is a prepackaged, portable system image that runs isolated on an
// existing system using a container runtime like containerd.
message Container {
    Fingerprint hash = 1;
    Image image = 2;
    string name = 3;
    string network_driver = 4;
    string orchestrator = 5;
    string pod_uuid = 6;
    string runtime = 7;
    int64 size = 8;
    string tag = 9;
    string uid = 10;
}

// DeviceHwInfo is an OSF object
// defined in io.ocsf objects/device_hw_info.json
//
// The Device Hardware Information object contains details and specifications
// of the physical components that make up a device. This information provides
// an overview of the hardware capabilities, configuration, and
// characteristics of the device.
message DeviceHwInfo {
    string bios_date = 1;
    string bios_manufacturer = 2;
    string bios_ver = 3;
    string chassis = 4;
    int32 cpu_bits = 5;
    int32 cpu_cores = 6;
    int32 cpu_count = 7;
    int32 cpu_speed = 8;
    string cpu_type = 9;
    Display desktop_display = 10;
    KeyboardInfo keyboard_info = 11;
    int32 ram_size = 12;
    string serial_number = 13;
}

// Image is an OSF object
// defined in io.ocsf objects/image.json
//
// The Image object provides a description of a specific Virtual Machine (VM)
// or Container image. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:ContainerImage/'>d3f:ContainerImage</a>.
message Image {
    repeated string labels = 1;
    string name = 2;
    string path = 3;
    string tag = 4;
    string uid = 5;
}

// Location is an OSF object
// defined in io.ocsf objects/location.json
//
// The Geo Location object describes a geographical location, usually
// associated with an IP address. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:PhysicalLocation/'>d3f:PhysicalLocation</a>.
message Location {
    string city = 1;
    string continent = 2;
    repeated double coordinates = 3;
    string country = 4;
    string desc = 5;
    string geohash = 6;
    bool is_on_premises = 7;
    string isp = 8;
    double lat = 9;
    double long = 10;
    string postal_code = 11;
    string provider = 12;
    string region = 13;
}

// Os is an OSF object
// defined in io.ocsf objects/os.json
//
// The Operating System (OS) object describes characteristics of an OS, such
// as Linux or Windows. Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:OperatingSystem/'>d3f:OperatingSystem</a>.
message Os {
    enum TypeId {
        UNKNOWN_TypeId        = 0;   // The type is unknown.
        OTHER_TypeId          = 99;  // The type is not mapped. See the <code>type</code>
                                     // attribute, which contains a data source specific
                                     // value.
        WINDOWS_TypeId        = 100;
        WINDOWS_MOBILE_TypeId = 101;
        LINUX_TypeId          = 200;
        ANDROID_TypeId        = 201;
        MACOS_TypeId          = 300;
        IOS_TypeId            = 301;
        IPADOS_TypeId         = 302;
        SOLARIS_TypeId        = 400;
        AIX_TypeId            = 401;
        HP_UX_TypeId          = 402;
    }
    string build = 1;
    string country = 2;
    string cpe_name = 3;
    int32 cpu_bits = 4;
    string edition = 5;
    string lang = 6;
    string name = 7;
    string sp_name = 8;
    int32 sp_ver = 9;
    string type = 10;
    TypeId type_id = 11;
    string version = 12;
}

// DataClassification is an OSF object
// defined in io.ocsf objects/data_classification.json
//
// The Data Classification object includes information about data
// classification levels and data category types.
message DataClassification {
    enum CategoryId {
        UNKNOWN_CategoryId                      = 0;  // The type is not mapped. See the
                                                      // <code>data_type</code> attribute,
                                                      // which contains a data source
                                                      // specific value.
        PERSONAL_CategoryId                     = 1;  // Any Personally Identifiable
                                                      // Information (PII), Electronic
                                                      // Personal Health Information
                                                      // (ePHI), or similarly personal
                                                      // information. E.g., full name,
                                                      // home address, date of birth, etc.
        GOVERNMENTAL_CategoryId                 = 2;  // Any sensitive government
                                                      // identification number related to
                                                      // a person or other classified
                                                      // material. E.g., Passport numbers,
                                                      // driver license numbers, business
                                                      // identification, taxation
                                                      // identifiers, etc.
        FINANCIAL_CategoryId                    = 3;  // Any financially-related sensitive
                                                      // information or Cardholder Data
                                                      // (CHD). E.g., banking account
                                                      // numbers, credit card numbers,
                                                      // International Banking Account
                                                      // Numbers (IBAN), SWIFT codes, etc.
        BUSINESS_CategoryId                     = 4;  // Any business-specific sensitive
                                                      // data such as intellectual
                                                      // property, trademarks, copyrights,
                                                      // human resource data, Board of
                                                      // Directors meeting minutes, and
                                                      // similar.
        MILITARY_AND_LAW_ENFORCEMENT_CategoryId = 5;  // Any mission-specific sensitive
                                                      // data for military, law
                                                      // enforcement, or other government
                                                      // agencies such as specifically
                                                      // classified data, weapon systems
                                                      // information, or other planning
                                                      // data.
        SECURITY_CategoryId                     = 6;  // Any sensitive security-related
                                                      // data such as passwords, passkeys,
                                                      // IP addresses, API keys,
                                                      // credentials and similar secrets.
                                                      // E.g., AWS Access Secret Key, SaaS
                                                      // API Keys, user passwords,
                                                      // database credentials, etc.
        OTHER_CategoryId                        = 99; // Any other type of data
                                                      // classification or a multi-variate
                                                      // classification made up of several
                                                      // other classification categories.
    }
    enum ConfidentialityId {
        UNKNOWN_ConfidentialityId          = 0;  // The confidentiality is unknown.
        NOT_CONFIDENTIAL_ConfidentialityId = 1; 
        CONFIDENTIAL_ConfidentialityId     = 2; 
        SECRET_ConfidentialityId           = 3; 
        TOP_SECRET_ConfidentialityId       = 4; 
        PRIVATE_ConfidentialityId          = 5; 
        RESTRICTED_ConfidentialityId       = 6; 
        OTHER_ConfidentialityId            = 99; // The confidentiality is not mapped. See
                                                 // the <code>confidentiality</code>
                                                 // attribute, which contains a data
                                                 // source specific value.
    }
    string category = 1;
    CategoryId category_id = 2;
    string confidentiality = 3;
    ConfidentialityId confidentiality_id = 4;
    Policy policy = 5;
}

// Fingerprint is an OSF object
// defined in io.ocsf objects/fingerprint.json
//
// The Fingerprint object provides detailed information about a digital
// fingerprint, which is a compact representation of data used to identify a
// longer piece of information, such as a public key or file content. It
// contains the algorithm and value of the fingerprint, enabling efficient and
// reliable identification of the associated data.
message Fingerprint {
    enum AlgorithmId {
        UNKNOWN_AlgorithmId      = 0; 
        MD5_AlgorithmId          = 1;  // MD5 message-digest algorithm producing a 128-bit
                                       // (16-byte) hash value.
        SHA_1_AlgorithmId        = 2;  // Secure Hash Algorithm 1 producing a 160-bit (20-
                                       // byte) hash value.
        SHA_256_AlgorithmId      = 3;  // Secure Hash Algorithm 2 producing a 256-bit (32-
                                       // byte) hash value.
        SHA_512_AlgorithmId      = 4;  // Secure Hash Algorithm 2 producing a 512-bit (64-
                                       // byte) hash value.
        CTPH_AlgorithmId         = 5;  // The ssdeep generated fuzzy checksum. Also known
                                       // as Context Triggered Piecewise Hash (CTPH).
        TLSH_AlgorithmId         = 6;  // The TLSH fuzzy hashing algorithm.
        QUICKXORHASH_AlgorithmId = 7;  // Microsoft simple non-cryptographic hash algorithm
                                       // that works by XORing the bytes in a circular-
                                       // shifting fashion.
        OTHER_AlgorithmId        = 99;
    }
    string algorithm = 1;
    AlgorithmId algorithm_id = 2;
    string value = 3;
}

// DigitalSignature is an OSF object
// defined in io.ocsf objects/digital_signature.json
//
// The Digital Signature object contains information about the cryptographic
// mechanism used to verify the authenticity, integrity, and origin of the
// file or application.
message DigitalSignature {
    enum AlgorithmId {
        UNKNOWN_AlgorithmId      = 0; 
        DSA_AlgorithmId          = 1;  // Digital Signature Algorithm (DSA).
        RSA_AlgorithmId          = 2;  // Rivest-Shamir-Adleman (RSA) Algorithm.
        ECDSA_AlgorithmId        = 3;  // Elliptic Curve Digital Signature Algorithm.
        AUTHENTICODE_AlgorithmId = 4;  // Microsoft Authenticode Digital Signature
                                       // Algorithm.
        OTHER_AlgorithmId        = 99;
    }
    string algorithm = 1;
    AlgorithmId algorithm_id = 2;
    Certificate certificate = 3;
    int64 created_time = 4;
    google.protobuf.Timestamp created_time_dt = 5;
    string developer_uid = 6;
    Fingerprint digest = 7;
}

// Cve is an OSF object
// defined in io.ocsf objects/cve.json
//
// The Common Vulnerabilities and Exposures (CVE) object represents publicly
// disclosed cybersecurity vulnerabilities defined in CVE Program catalog (<a
// target='_blank' href='https://cve.mitre.org/'>CVE</a>). There is one CVE
// Record for each vulnerability in the catalog.
message Cve {
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    repeated Cvss cvss = 3;
    Cwe cwe = 4;
    string cwe_uid = 5;
    string cwe_url = 6;
    string desc = 7;
    Epss epss = 8;
    int64 modified_time = 9;
    google.protobuf.Timestamp modified_time_dt = 10;
    Product product = 11;
    repeated string references = 12;
    string title = 13;
    string type = 14;
    string uid = 15;
}

// Extension is an OSF object
// defined in io.ocsf objects/extension.json
//
// The OCSF Schema Extension object provides detailed information about the
// schema extension used to construct the event. The schema extensions are
// registered in the <a target='_blank' href='https://github.com/ocsf/ocsf-
// schema/blob/main/extensions.md'>extensions.md</a> file.
message Extension {
    string name = 1;
    string uid = 2;
    string version = 3;
}

// Logger is an OSF object
// defined in io.ocsf objects/logger.json
//
// The Logger object represents the device and product where events are stored
// with times for receipt and transmission.  This may be at the source device
// where the event occurred, a remote scanning device, intermediate hops, or
// the ultimate destination.
message Logger {
    Device device = 1;
    string log_level = 2;
    string log_name = 3;
    string log_provider = 4;
    string log_version = 5;
    int64 logged_time = 6;
    google.protobuf.Timestamp logged_time_dt = 7;
    string name = 8;
    Product product = 9;
    int64 transmit_time = 10;
    google.protobuf.Timestamp transmit_time_dt = 11;
    string uid = 12;
    string version = 13;
}

// Reputation is an OSF object
// defined in io.ocsf objects/reputation.json
//
// The Reputation object describes the reputation/risk score of an entity
// (e.g. device, user, domain).
message Reputation {
    enum ScoreId {
        UNKNOWN_ScoreId            = 0;  // The reputation score is unknown.
        VERY_SAFE_ScoreId          = 1;  // Long history of good behavior.
        SAFE_ScoreId               = 2;  // Consistently good behavior.
        PROBABLY_SAFE_ScoreId      = 3;  // Reasonable history of good behavior.
        LEANS_SAFE_ScoreId         = 4;  // Starting to establish a history of normal
                                         // behavior.
        MAY_NOT_BE_SAFE_ScoreId    = 5;  // No established history of normal behavior.
        EXERCISE_CAUTION_ScoreId   = 6;  // Starting to establish a history of suspicious
                                         // or risky behavior.
        SUSPICIOUS_RISKY_ScoreId   = 7;  // A site with a history of suspicious or risky
                                         // behavior. (spam, scam, potentially unwanted
                                         // software, potentially malicious).
        POSSIBLY_MALICIOUS_ScoreId = 8;  // Strong possibility of maliciousness.
        PROBABLY_MALICIOUS_ScoreId = 9;  // Indicators of maliciousness.
        MALICIOUS_ScoreId          = 10; // Proven evidence of maliciousness.
        OTHER_ScoreId              = 99; // The reputation score is not mapped. See the
                                         // <code>rep_score</code> attribute, which
                                         // contains a data source specific value.
    }
    double base_score = 1;
    string provider = 2;
    string score = 3;
    ScoreId score_id = 4;
}

// RelatedEvent is an OSF object
// defined in io.ocsf objects/related_event.json
//
// The Related Event object describes an OCSF event related to a finding.
message RelatedEvent {
    repeated Attack attacks = 1;
    repeated KillChainPhase kill_chain = 2;
    repeated Observable observables = 3;
    string product_uid = 4;
    string type = 5;
    string type_name = 6;
    int64 type_uid = 7;
    string uid = 8;
}

// AffectedCode is an OSF object
// defined in io.ocsf objects/affected_code.json
//
// The Affected Code object describes details about a code block identified as
// vulnerable.
message AffectedCode {
    int32 end_line = 1;
    File file = 2;
    User owner = 3;
    Remediation remediation = 4;
    int32 start_line = 5;
}

// AffectedPackage is an OSF object
// defined in io.ocsf objects/affected_package.json
//
// The Affected Package object describes details about a software package
// identified as affected by a vulnerability/vulnerabilities.
message AffectedPackage {
    string architecture = 1;
    int32 epoch = 2;
    string fixed_in_version = 3;
    string license = 4;
    string name = 5;
    string package_manager = 6;
    string path = 7;
    string purl = 8;
    string release = 9;
    Remediation remediation = 10;
    string version = 11;
}

// Cwe is an OSF object
// defined in io.ocsf objects/cwe.json
//
// The CWE object represents a weakness in a software system that can be
// exploited by a threat actor to perform an attack. The CWE object is based
// on the <a target='_blank' href='https://cwe.mitre.org/'>Common Weakness
// Enumeration (CWE)</a> catalog.
message Cwe {
    string caption = 1;
    string src_url = 2;
    string uid = 3;
}

// Package is an OSF object
// defined in io.ocsf objects/package.json
//
// The Software Package object describes details about a software package.
// Defined by D3FEND <a target='_blank'
// href='https://d3fend.mitre.org/dao/artifact/d3f:SoftwarePackage/'>d3f:SoftwarePackage</a>.
message Package {
    string architecture = 1;
    int32 epoch = 2;
    string license = 3;
    string name = 4;
    string purl = 5;
    string release = 6;
    string version = 7;
}

// LdapPerson is an OSF object
// defined in io.ocsf objects/ldap_person.json
//
// The additional LDAP attributes that describe a person.
message LdapPerson {
    string cost_center = 1;
    int64 created_time = 2;
    google.protobuf.Timestamp created_time_dt = 3;
    int64 deleted_time = 4;
    google.protobuf.Timestamp deleted_time_dt = 5;
    repeated string email_addrs = 6;
    string employee_uid = 7;
    string given_name = 8;
    int64 hire_time = 9;
    google.protobuf.Timestamp hire_time_dt = 10;
    string job_title = 11;
    repeated string labels = 12;
    int64 last_login_time = 13;
    google.protobuf.Timestamp last_login_time_dt = 14;
    string ldap_cn = 15;
    string ldap_dn = 16;
    int64 leave_time = 17;
    google.protobuf.Timestamp leave_time_dt = 18;
    Location location = 19;
    User manager = 20;
    int64 modified_time = 21;
    google.protobuf.Timestamp modified_time_dt = 22;
    string office_location = 23;
    string surname = 24;
}

// AutonomousSystem is an OSF object
// defined in io.ocsf objects/autonomous_system.json
//
// An autonomous system (AS) is a collection of connected Internet Protocol
// (IP) routing prefixes under the control of one or more network operators on
// behalf of a single administrative entity or domain that presents a common,
// clearly defined routing policy to the internet.
message AutonomousSystem {
    string name = 1;
    int32 number = 2;
}

// HttpHeader is an OSF object
// defined in io.ocsf objects/http_header.json
//
// TThe HTTP Header object represents the headers sent in an HTTP request or
// response. HTTP headers are key-value pairs that convey additional
// information about the HTTP message, including details about the content,
// caching, authentication, encoding, and other aspects of the communication.
message HttpHeader {
    string name = 1;
    string value = 2;
}

// EndpointConnection is an OSF object
// defined in io.ocsf objects/endpoint_connection.json
//
// The Endpoint Connection object contains information detailing a connection
// attempt to an endpoint.
message EndpointConnection {
    int32 code = 1;
    NetworkEndpoint network_endpoint = 2;
}

// Metric is an OSF object
// defined in io.ocsf objects/metric.json
//
// The Metric object defines a simple name/value pair entity for a metric.
message Metric {
    string name = 1;
    string value = 2;
}

// TlsExtension is an OSF object
// defined in io.ocsf objects/tls_extension.json
//
// The TLS Extension object describes additional attributes that extend the
// base Transport Layer Security (TLS) object.
message TlsExtension {
    enum TypeId {
        SERVER_NAME_TypeId                            = 0;  // The Server Name Indication
                                                            // extension.
        MAXIMUM_FRAGMENT_LENGTH_TypeId                = 1;  // The Maximum Fragment Length
                                                            // Negotiation extension.
        STATUS_REQUEST_TypeId                         = 5;  // The Certificate Status
                                                            // Request extension.
        SUPPORTED_GROUPS_TypeId                       = 10; // The Supported Groups
                                                            // extension.
        SIGNATURE_ALGORITHMS_TypeId                   = 13; // The Signature Algorithms
                                                            // extension.
        USE_SRTP_TypeId                               = 14; // The Use SRTP data
                                                            // protection extension.
        HEARTBEAT_TypeId                              = 15; // The Heartbeat extension.
        APPLICATION_LAYER_PROTOCOL_NEGOTIATION_TypeId = 16; // The Application-Layer
                                                            // Protocol Negotiation
                                                            // extension.
        SIGNED_CERTIFICATE_TIMESTAMP_TypeId           = 18; // The Signed Certificate
                                                            // Timestamp extension.
        CLIENT_CERTIFICATE_TYPE_TypeId                = 19; // The Client Certificate Type
                                                            // extension.
        SERVER_CERTIFICATE_TYPE_TypeId                = 20; // The Server Certificate Type
                                                            // extension.
        PADDING_TypeId                                = 21; // The Padding extension.
        PRE_SHARED_KEY_TypeId                         = 41; // The Pre Shared Key
                                                            // extension.
        EARLY_DATA_TypeId                             = 42; // The Early Data extension.
        SUPPORTED_VERSIONS_TypeId                     = 43; // The Supported Versions
                                                            // extension.
        COOKIE_TypeId                                 = 44; // The Cookie extension.
        PSK_KEY_EXCHANGE_MODES_TypeId                 = 45; // The Pre-Shared Key Exchange
                                                            // Modes extension.
        CERTIFICATE_AUTHORITIES_TypeId                = 47; // The Certificate Authorities
                                                            // extension.
        OID_FILTERS_TypeId                            = 48; // The OID Filters extension.
        POST_HANDSHAKE_AUTH_TypeId                    = 49; // The Post-Handshake Client
                                                            // Authentication extension.
        SIGNATURE_ALGORITHMS_CERT_TypeId              = 50; // The Signature Algorithms
                                                            // extension.
        KEY_SHARE_TypeId                              = 51; // The Key Share extension.
        OTHER_TypeId                                  = 99; // The type is not mapped. See
                                                            // the <code>type</code>
                                                            // attribute, which contains a
                                                            // data source specific value.
    }
    bytes data = 1;
    string type = 2;
    TypeId type_id = 3;
}

// San is an OSF object
// defined in io.ocsf objects/san.json
//
// The Subject Alternative name (SAN) object describes a SAN secured by a
// digital certificate
message San {
    string name = 1;
    string type = 2;
}

// RpcInterface is an OSF object
// defined in io.ocsf objects/rpc_interface.json
//
// The RPC Interface represents the remote procedure call interface used in
// the DCE/RPC session.
message RpcInterface {
    int32 ack_reason = 1;
    int32 ack_result = 2;
    string uuid = 3;
    string version = 4;
}

// Rule is an OSF object
// defined in io.ocsf objects/rule.json
//
// The Rule object describes characteristics of a rule associated with a
// policy or an event.
message Rule {
    string category = 1;
    string desc = 2;
    string name = 3;
    string type = 4;
    string uid = 5;
    string version = 6;
}

// Feature is an OSF object
// defined in io.ocsf objects/feature.json
//
// The Feature object provides information about the software product feature
// that generated a specific event. It encompasses details related to the
// capabilities, components, user interface (UI) design, and performance
// upgrades associated with the feature.
message Feature {
    string name = 1;
    string uid = 2;
    string version = 3;
}

// KeyboardInfo is an OSF object
// defined in io.ocsf objects/keyboard_info.json
//
// The Keyboard Information object contains details and attributes related to
// a computer or device keyboard. It encompasses information that describes
// the characteristics, capabilities, and configuration of the keyboard.
message KeyboardInfo {
    int32 function_keys = 1;
    string ime = 2;
    string keyboard_layout = 3;
    int32 keyboard_subtype = 4;
    string keyboard_type = 5;
}

// Cvss is an OSF object
// defined in io.ocsf objects/cvss.json
//
// The Common Vulnerability Scoring System (<a target='_blank'
// href='https://www.first.org/cvss/'>CVSS</a>) object provides a way to
// capture the principal characteristics of a vulnerability and produce a
// numerical score reflecting its severity.
message Cvss {
    double base_score = 1;
    string depth = 2;
    repeated Metric metrics = 3;
    double overall_score = 4;
    string severity = 5;
    string vector_string = 6;
    string version = 7;
}

// Epss is an OSF object
// defined in io.ocsf objects/epss.json
//
// The Exploit Prediction Scoring System (EPSS) object describes the estimated
// probability a vulnerability will be exploited. EPSS is a community-driven
// effort to combine descriptive information about vulnerabilities (CVEs) with
// evidence of actual exploitation in-the-wild. (<a target='_blank'
// href='https://www.first.org/epss/'>EPSS</a>).
message Epss {
    int64 created_time = 1;
    google.protobuf.Timestamp created_time_dt = 2;
    double percentile = 3;
    string score = 4;
    string version = 5;
}

// generic object, e.g., for unmapped
message GenericObject {
   bytes jsonEncoded = 1;
}
