input:
  resource: raw_aws_cloudtrail_input

pipeline:
  processors:
    - switch:
        # Identity & Access Management authentication filter for cloudtrail logs 
        - check: |
                  let authentication_event = {
                  "ConsoleLogin": 0,
                  "ExternalIdPDirectoryLogin": 0,
                  "CheckMfa": 0,
                  "CredentialChallenge": 0,
                  "CredentialVerification": 0,
                  "UserAuthentication": 0,
                  "AssumeRole": 0,
                  "AssumeRoleWithSAML": 0,
                  "AssumeRoleWithWebIdentity": 0,
                  }
                  root = $authentication_event.exists(this.eventName)
          processors:        
            - mapping: from "cloudtrail_authentication.blobl"
        # Application Activity filter for cloudtrail logs 
        - check: |
                  let account_change_event = {
                  "UpdateRole": 0, 
                  "AttachUserPolicy": 0, 
                  "PutRolePermissionsBoundary": 0, 
                  "DeletePolicy": 0, 
                  "RemoveUserFromGroup": 0, 
                  "ChangePassword": 0, 
                  "CreateAccessKey": 0, 
                  "AttachGroupPolicy": 0, 
                  "ResyncMFADevice": 0, 
                  "DeleteRolePolicy": 0, 
                  "PutUserPermissionsBoundary": 0, 
                  "CreateUser": 0, 
                  "CreateServiceLinkedRole": 0, 
                  "PutRolePolicy": 0, 
                  "DetachGroupPolicy": 0, 
                  "UpdateAccessKey": 0, 
                  "ChangePassword": 0, 
                  "CreateInstanceProfile": 0, 
                  "CreateRole": 0, 
                  "DeleteUserPermissionsBoundary": 0, 
                  "DeleteAccountAlias": 0, 
                  "PutGroupPolicy": 0, 
                  "CreateLoginProfile": 0, 
                  "DeleteGroupPolicy": 0, 
                  "DeleteLoginProfile": 0, 
                  "DeleteUserPolicy": 0, 
                  "DeactivateMFADevice": 0, 
                  "RemoveRoleFromInstanceProfile": 0, 
                  "UpdateUser": 0, 
                  "EnableMFADevice": 0, 
                  "DeleteUser": 0, 
                  "AddRoleToInstanceProfile": 0, 
                  "UpdateAccountEmailAddress": 0, 
                  "UpdateRoleDescription": 0, 
                  "DetachUserPolicy": 0, 
                  "UpdateAssumeRolePolicy": 0, 
                  "DeleteGroup": 0, 
                  "DeleteServiceLinkedRole": 0, 
                  "DeleteAccessKey": 0, 
                  "AddUserToGroup": 0, 
                  "DeleteVirtualMFADevice": 0, 
                  "FinalizeSmsMfaRegistration": 0, 
                  "DeleteRolePermissionsBoundary": 0, 
                  "DetachRolePolicy": 0, 
                  "DeleteInstanceProfile": 0, 
                  "UpdateGroup": 0, 
                  "UpdateLoginProfile": 0, 
                  "RequestSmsMfaRegistration": 0, 
                  "DeleteRole": 0, 
                  "PutUserPolicy": 0, 
                  "CreateVirtualMFADevice": 0, 
                  "AttachRolePolicy": 0, 
                  "EmailUpdated": 0, 
                  "AccountNameUpdated": 0, 
                  "PasswordUpdated": 0, 
                  "DeleteAccountPasswordPolicy": 0, 
                  "UpdateAccountPasswordPolicy": 0, 
                  "UpdateAccountName": 0, 
                  "TagInstanceProfile": 0, 
                  "TagRole": 0, 
                  "TagUser": 0, 
                  "UntagInstanceProfile": 0, 
                  "UntagRole": 0, 
                  "UntagUser": 0, 
                  "CreateAccountAlias": 0, 
                  }
                  root = $account_change_event.exists(this.eventName)
          processors:        
            - mapping: from "cloudtrail_account_change.blobl"
            #check: true gets all remaining 1400+ logs that did not hit on the first 2 filters and sends to api_activity
        - check: true
          processors:        
            - mapping: from "cloudtrail_api_activity.blobl"
    # This switch checks for the ocsf_topic metadata and if it exists applies additional mapping if not it deletes the log.
    - switch:    
        - check: '@.exists("ocsf_topic")'
          processors:
             - mapping: from "ocsf_default.blobl"
             #this second processor deletes anything left that did not match the first processor check
        - processors:
             - mapping: root = deleted()   
output:
  resource: ocsf_kafka_output