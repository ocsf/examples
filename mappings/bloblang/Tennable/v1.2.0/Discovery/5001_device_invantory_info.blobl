
root.category_uid = 5
root.category_name = "Discovery"
root.class_uid = 5001       
root.class_name = "Device Inventory Info"
root.activity_id = 1        
root.activity_name = "Log"
root.severity_id = 1 
root.severity = "Informational"
root.status_id = 0
root.status = "Unknown"

root.activity_name = "Log"
root.activity_id = 1

root.cloud.provider = "AWS"
root.cloud.region = this.env

root.device.hostname = this.output.hostname.0
root.device.mac = this.output.mac_address.0
root.device.domain = this.output.fqdn.index(-1)
root.device.ip = this.output.ipv4.index(-1)
root.device.network_interfaces = this.output.filter(item -> item.key.contains("ipv")).collapse().key_values().map_each(item -> {
    "ip": match { 
        item.key.contains("ipv") => item.value
        },
        
    "type": match {
        item.key.contains("ipv6") => "ipv6"
        item.key.contains("ipv4") => "ipv4"
        },
    "type_id": 0
        })



root.device.uid = this.output.id
root.device.type_id = 0
root.device.first_seen_time_dt = this.output.first_seen
root.device.first_seen_time = this.output.first_seen.ts_unix_micro() 
root.device.last_seen_time_dt = this.output.last_seen
root.device.last_seen_time = this.output.last_seen.ts_unix_micro() 
root.device.instance_uid = this.output.aws_ec2_instance_id.0

root.message = this.msg

root.metadata.log_provider = "Tenable"
root.metadata.log_name = this.msg
root.metadata.logged_time_dt = this.time
root.metadata.logged_time = this.time.ts_unix_micro()
root.metadata.version = "1.2.0"
root.metadata.product.vendor_name = "Tenable"
root.metadata.uid = this.scan.uuidd
root.metadata.profiles = ["host","datetime", "cloud"]

root.time = this.output.updated_at.ts_unix_micro() 
root.time_dt = this.output.updated_at 

root.unmapped = this.without(
   "msg",
   "env",
   "time",
   "output.updated_at",
   "output.mac_address",
   "output.last_seen",
   "output.ipv4",
   "output.id",
   "output.hostname",
   "output.fqdn",
   "output.first_seen",
   "output.last_seen",
   "output.aws_ec2_instance_id",
   "output.ipv6",
   "output.ipv4",
   )
   
   observables = root.without("unmapped").with("device.ip", "device.hostname", "device.mac").( item -> { 
    "a": match {item.device.exists("hostname") => {"name": "device.hostname", "type": "User", "type_id": 1, "value": item.device.hostname}},
    "b": match {item.device.exists("ip") => {"name": "device.ip", "type": "IP Address", "type_id": 2, "value": item.device.ip}},
    "c": match {item.device.exists("ip") => {"name": "device.ip", "type": "IP Address", "type_id": 2, "value": item.device.ip}},
    "d": match {item.device.exists("mac") => {"name": "device.mac", "type": "MAC Address", "type_id": 3, "value": item.device.mac}},
    }).values()