meta ocsf_bucket = "detection_finding"
meta vendor = "AWS"

root.category_uid = 2
root.category_name = "Findings"
root.class_uid = 2004
root.class_name = "Detection Finding"

root.activity_name = match {
    this.detail.createdAt == detail.updatedAt => "create"
    this.detail.createdAt < detail.updatedAt => "update"
}
root.activity_id = match {
    this.detail.createdAt == detail.updatedAt => 1
    this.detail.createdAt < detail.updatedAt => 2
}

root.cloud.provider = "AWS"
root.cloud.account.uid = this.detail.accountId
root.cloud.region = this.detail.region

root.count = this.detail.service.count

# actor.user
root.evidences.actor.user.account.uid = this.detail.accountId | deleted()
root.evidences.actor.user.uid = this.detail.arn | deleted()
root.evidences.actor.user.uid_alt = this.detail.resource.accessKeyDetails.principalId | deleted()
root.evidences.actor.user.name = this.detail.resource.accessKeyDetails.userName | deleted()
root.evidences.actor.user.credential_uid = this.detail.resource.accessKeyDetails.accessKeyId | deleted()
# actor.process
root.evidences.actor.process.name = this.detail.service.runtimeDetails.process.name | deleted()
root.evidences.actor.process.file.path = this.detail.service.runtimeDetails.process.executablePath | deleted()
root.evidences.actor.process.pid = this.detail.service.runtimeDetails.process.pid | deleted()
root.evidences.actor.process.uid = this.detail.service.runtimeDetails.process.uuid | deleted()
root.evidences.actor.process.created_time_dt = this.detail.service.runtimeDetails.process.startTime | deleted()
root.evidences.actor.process.user.name = this.detail.service.runtimeDetails.process.user | deleted()
root.evidences.actor.process.user.uid = this.detail.service.runtimeDetails.process.userId | deleted()
root.evidences.actor.process.parent_process.uid = this.detail.service.runtimeDetails.process.parentUuid | deleted()
root.evidences.actor.process.file.hashes.value = this.detail.service.runtimeDetails.process.executableSha256 | deleted()
root.evidences.actor.process.euid = this.detail.service.runtimeDetails.process.euid  | deleted()
# process
root.evidences.process.name = this.detail.service.runtimeDetails.context.targetProcess.name | deleted()
root.evidences.process.file.path = this.detail.service.runtimeDetails.context.targetProcess.executablePath | deleted()
root.evidences.process.pid = this.detail.serviceservice.runtimeDetails.context.targetProcess.pid | deleted()
root.evidences.process.uid = this.detail.serviceservice.runtimeDetails.context.targetProcess.uuid | deleted()
root.evidences.process.created_time_dt = this.detail.service.runtimeDetails.context.targetProcess.startTime | deleted()
root.evidences.process.user.name = this.detail.service.runtimeDetails.context.targetProcess.user | deleted()
root.evidences.process.user.uid = this.detail.service.runtimeDetails.context.targetProcess.userId | deleted()
root.evidences.process.parent_process.uid = this.detail.service.runtimeDetails.context.targetProcess.parentUuid | deleted()
root.evidences.process.file.hashes.value = this.detail.serviceservice.runtimeDetails.context.targetProcess.executableSha256 | deleted()
root.evidences.process.euid  = this.detail.service.runtimeDetails.context.targetProcess.euid | deleted()
# api
root.evidences.api.operation = this.detail.service.action.awsApiCallAction.api | this.detail.service.action.kubernetesApiCallAction.verb | deleted()
root.evidences.api.response.error = this.detail.service.action.awsApiCallAction.errorCode | deleted()
root.evidences.api.service.name = this.detail.service.action.awsApiCallAction.serviceName | deleted()
#src_endpoint
root.evidences.src_endpoint.ip = this.detail.service.action.awsApiCallAction.remoteIpDetails.ipAddressV4 | this.detail.service.action.kubernetesApiCallAction.remoteIpDetails.ipAddressV4 | deleted()
root.evidences.src_endpoint.location.country = this.detail.service.action.awsApiCallAction.remoteIpDetails.country.countryName | this.detail.service.action.kubernetesApiCallAction.remoteIpDetails.country.countryName | deleted()
root.evidences.src_endpoint.location.city = this.detail.service.action.awsApiCallAction.remoteIpDetails.city.cityName | this.detail.service.action.kubernetesApiCallAction.remoteIpDetails.city.cityName | deleted()
root.evidences.src_endpoint.location.lat =  this.detail.service.action.awsApiCallAction.remoteIpDetails.geoLocation.lat |  this.detail.service.action.kubernetesApiCallAction.remoteIpDetails.geoLocation.lat | deleted()
root.evidences.src_endpoint.location.long = this.detail.service.action.awsApiCallAction.remoteIpDetails.geoLocation.lon | this.detail.service.action.kubernetesApiCallAction.remoteIpDetails.geoLocation.lon | deleted()
# dns_query
root.evidences.query.hostname = this.detail.service.action.dnsRequestAction.domainWithSuffix | deleted()
# connection_info
root.evidences.connection_info.protocol_name = match this.detail.service.action.dnsRequestAction.protocol {
    "UDP" => 17
    "TCP" => 6
    _=> deleted()
    } 
# databucket    
root.evidences.databucket.type_id = if this.detail.type.contains("S3") {1} else {deleted()}
root.evidences.databucket.name = this.detail.resource.s3BucketDetails.0.name | deleted()
root.evidences = [root.evidences]

root.finding_info.created_time_dt = this.detail.createdAt
root.finding_info.created_time = this.detail.createdAt.ts_unix_micro() | deleted
root.finding_info.desc = this.detail.description
root.finding_info.first_seen_time_dt = this.detail.service.eventFirstSeen
root.finding_info.first_seen_time = this.detail.service.eventFirstSeen.ts_unix_micro() | deleted
root.finding_info.last_seen_time_dt = this.detail.service.eventLastSeen
root.finding_info.last_seen_time = this.detail.service.eventLastSeen.ts_unix_micro() | deleted
root.finding_info.modified_time_dt = this.detail.updatedAt
root.finding_info.modified_time = this.detail.updatedAt.ts_unix_micro() | deleted
root.finding_info.title = this.detail.title
root.finding_info.src_url = this.detail.arn
root.finding_info.uid = this.event.id
root.finding_info.analytic.type_id = match {
    this.detail.type.contains("AnomalousBehavior") => 4
    this.detail.type.contains("Behavior") => 2
    _=> 1
}
root.finding_info.analytic.name = match {
    this.detail.type.contains("AnomalousBehavior") => "Learning (ML/DL)"
    this.detail.type.contains("Behavior") => "Behavioral"
    _=> "Rule"
}


root.impact_id = match this.detail.severity {
    this >= 1 && this <= 3.9 => 1
    this >= 4 && this <= 6.9 => 2
    this >= 7 && this <= 9 => 3
    _=> 0
}

root.message = this.detail.title 

root.metadata.version = "1.2.0"
root.metadata.product.vendor_name = "AWS"
root.metadata.original_time = this.detail.service.eventFirstSeen
root.metadata.log_provider = this.event.source
root.metadata.log_name = "GuardDuty Finding"
root.metadata.product.version = this.event.version
root.metadata.product.name = "AWS Guardduty"
root.metadata.product.lang = "en"
root.metadata.profiles = ["cloud","datetime"]
root.metadata.uid = this.event.id

root.remediation.desc = this.detail.service.action.(networkConnectionAction|portProbeAction|dnsRequestAction).blocked.string()

root.severity_id = match this.detail.severity {
    this >= 1 && this <= 3.9 => 1
    this >= 4 && this <= 6.9 => 2
    this >= 7 && this <= 9 => 3
    _=> 0
}
root.severity = match this.detail.severity {
    this >= 1 && this <= 2 => "Information"
    this >= 3 && this <= 4 => "Low"
    this >= 5 && this <= 6 => "Medium"
    this >= 7 && this <= 7.5 => "High"
    this >= 7.5 && this <= 8 => "Critical"
    this >= 8 && this <= 9 =>  "Fatal"
    _=> 0
}

root.status_code = this.detail.service.detectorId
root.start_time = this.detail.createdAt.ts_unix_milli() | deleted
root.start_time_dt = this.detail.createdAt
# root.type_uid = This field is added by the ocsf default blobl

root.time = this.detail.createdAt.ts_unix_milli() | deleted
root.time_dt = this.detail.createdAt

root.unmapped = this.without(
    "title",
    "detail.type.contains",
    "detail.accountId",
    "detail.region",
    "detail.service.count",
    "detail.severity",
    "detail.service.detectorId",
    "detail.createdAt",
    "detail.service.count",
    "detail.service.evidence.threat",
    "detail.description",
    "detail.service.eventFirstSeen",
    "detail.service.eventLastSeen",
    "detail.updatedAt",
    "detail.service.action.networkConnectionAction.blocked",
    "detail.service.action.dnsRequestAction.blocked",
    "detail.service.action.dnsRequestAction.blocked",
    "detail.title",
    "detail.arn",
    "detail.id"
)

root.type_uid = root.class_uid.number() * 100 + root.activity_id.number()
root.type_name = root.class_name + ": " + root.activity_name